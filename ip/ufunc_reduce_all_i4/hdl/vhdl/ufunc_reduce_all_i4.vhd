-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ufunc_reduce_all_i4 is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in1_s_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    in1_s_TVALID : IN STD_LOGIC;
    in1_s_TREADY : OUT STD_LOGIC;
    in1_s_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    in1_s_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    in1_s_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in1_s_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in1_s_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    in1_s_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    in2_s_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    in2_s_TVALID : IN STD_LOGIC;
    in2_s_TREADY : OUT STD_LOGIC;
    in2_s_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    in2_s_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    in2_s_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in2_s_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in2_s_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    in2_s_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of ufunc_reduce_all_i4 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "ufunc_reduce_all_i4_ufunc_reduce_all_i4,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=3807,HLS_SYN_LUT=4283,HLS_VERSION=2020_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal args : STD_LOGIC_VECTOR (23 downto 0);
    signal is_binary_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal is_binary_ce0 : STD_LOGIC;
    signal is_binary_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal in2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal in1_s_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal in2_s_TDATA_blk_n : STD_LOGIC;
    signal is_binary_load_reg_1122 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_reg_243 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_reg_254 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_reg_303 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state13_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal i_1_reg_336 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state19_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state20_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state21_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state22_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state23_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal i_2_reg_361 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_load_fu_444_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_546 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal trunc_ln126_fu_691_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal tmp_1_fu_889_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln140_fu_897_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_load_fu_448_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_552 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_load_fu_452_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_557 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal tmp_2_fu_987_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln140_1_fu_995_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal grp_load_fu_456_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_564 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_460_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_569 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_464_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_575 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_468_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_473_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_587 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_477_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_592 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_481_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_598 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_485_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_603 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_489_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_610 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_493_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_615 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_497_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_621 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_501_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_506_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_634 : STD_LOGIC_VECTOR (31 downto 0);
    signal args_reduce_op_fu_639_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal args_reduce_op_reg_1101 : STD_LOGIC_VECTOR (7 downto 0);
    signal args_element_op_fu_643_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal args_element_op_reg_1107 : STD_LOGIC_VECTOR (7 downto 0);
    signal args_final_op_reg_1112 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal in1_c_data_V_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal in1_c_last_V_fu_672_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal in1_c_last_V_reg_1131 : STD_LOGIC_VECTOR (0 downto 0);
    signal in1_c_last_V_reg_1131_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in1_c_last_V_reg_1131_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in1_c_last_V_reg_1131_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in1_c_last_V_reg_1131_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in1_c_last_V_reg_1131_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_do_operation_fu_372_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_reg_1135 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_reg_1135_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_reg_1135_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_reg_1135_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln126_reg_1156 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln126_reg_1156_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln126_reg_1156_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln126_reg_1156_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_1_fu_707_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_reg_1160 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_1_fu_715_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_1_reg_1165 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal icmp_ln128_fu_731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln128_reg_1170 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln128_reg_1170_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln128_reg_1170_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln140_reg_1178 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln140_reg_1178_pp1_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln140_reg_1178_pp1_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln140_reg_1178_pp1_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln140_2_fu_907_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln140_2_reg_1182 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln139_fu_945_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln140_1_reg_1196 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln140_1_reg_1196_pp2_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln140_1_reg_1196_pp2_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln140_1_reg_1196_pp2_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln140_3_fu_1005_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln140_3_reg_1200 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln139_1_fu_1043_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_1049_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_block_state25_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state26_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state27_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_state28_pp3_stage0_iter3 : BOOLEAN;
    signal ap_block_state29_pp3_stage0_iter4 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal icmp_ln140_fu_1067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln140_reg_1214 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln140_reg_1214_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln140_reg_1214_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln140_reg_1214_pp3_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln140_fu_1073_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln140_reg_1218 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln140_1_fu_1087_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln140_1_reg_1223 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln139_2_fu_1095_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal grp_do_operation_fu_373_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret6_reg_1233 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state13 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state19 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state25 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter4 : STD_LOGIC := '0';
    signal grp_do_operation_fu_372_ap_start : STD_LOGIC;
    signal grp_do_operation_fu_372_ap_done : STD_LOGIC;
    signal grp_do_operation_fu_372_ap_idle : STD_LOGIC;
    signal grp_do_operation_fu_372_ap_ready : STD_LOGIC;
    signal grp_do_operation_fu_372_ap_ce : STD_LOGIC;
    signal grp_do_operation_fu_372_op_read : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_do_operation_fu_372_x_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_do_operation_fu_372_y_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state3_pp0_stage0_iter0_ignore_call1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1_ignore_call1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2_ignore_call1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3_ignore_call1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4_ignore_call1 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5_ignore_call1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6_ignore_call1 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7_ignore_call1 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8_ignore_call1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp79 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter0_ignore_call2 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter1_ignore_call2 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter2_ignore_call2 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter3_ignore_call2 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter4_ignore_call2 : BOOLEAN;
    signal ap_block_pp1_stage0_11001_ignoreCallOp240 : BOOLEAN;
    signal ap_block_state25_pp3_stage0_iter0_ignore_call9 : BOOLEAN;
    signal ap_block_state26_pp3_stage0_iter1_ignore_call9 : BOOLEAN;
    signal ap_block_state27_pp3_stage0_iter2_ignore_call9 : BOOLEAN;
    signal ap_block_state28_pp3_stage0_iter3_ignore_call9 : BOOLEAN;
    signal ap_block_state29_pp3_stage0_iter4_ignore_call9 : BOOLEAN;
    signal ap_block_pp3_stage0_11001_ignoreCallOp318 : BOOLEAN;
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal grp_do_operation_fu_373_ap_start : STD_LOGIC;
    signal grp_do_operation_fu_373_ap_done : STD_LOGIC;
    signal grp_do_operation_fu_373_ap_idle : STD_LOGIC;
    signal grp_do_operation_fu_373_ap_ready : STD_LOGIC;
    signal grp_do_operation_fu_373_ap_ce : STD_LOGIC;
    signal grp_do_operation_fu_373_x_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_do_operation_fu_373_y_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_11001_ignoreCallOp143 : BOOLEAN;
    signal ap_block_state19_pp2_stage0_iter0_ignore_call2 : BOOLEAN;
    signal ap_block_state20_pp2_stage0_iter1_ignore_call2 : BOOLEAN;
    signal ap_block_state21_pp2_stage0_iter2_ignore_call2 : BOOLEAN;
    signal ap_block_state22_pp2_stage0_iter3_ignore_call2 : BOOLEAN;
    signal ap_block_state23_pp2_stage0_iter4_ignore_call2 : BOOLEAN;
    signal ap_block_pp2_stage0_11001_ignoreCallOp287 : BOOLEAN;
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_phi_mux_p_phi_fu_247_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_n_phi_fu_258_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_UnifiedRetVal_i_reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_UnifiedRetVal_i_reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_UnifiedRetVal_i_reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln140_reg_314 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln140_reg_314 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter0_phi_ln140_1_reg_347 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter1_phi_ln140_1_reg_347 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_do_operation_fu_372_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_NS_fsm_state34 : STD_LOGIC;
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal grp_do_operation_fu_373_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm_state30 : STD_LOGIC;
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal idxprom_fu_663_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_res_p_0_load_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_0_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_0_load_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_1_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_2_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_2_load_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_3_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_4_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_4_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_4_load_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_5_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_6_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_6_load_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_7_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_8_load_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_8_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_8_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_8_load_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_9_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_10_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_10_load_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_11_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_12_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_12_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_12_load_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_13_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_14_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_14_load_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_15_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln130_fu_695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln130_fu_701_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_721_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal phi_ln140_2_fu_907_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln140_3_fu_1005_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln140_2_fu_1057_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln140_2_fu_1061_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln140_1_fu_1081_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal regslice_both_in1_s_V_data_V_U_apdone_blk : STD_LOGIC;
    signal in1_s_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal in1_s_TVALID_int_regslice : STD_LOGIC;
    signal in1_s_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_in1_s_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in1_s_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal in1_s_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_in1_s_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in1_s_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in1_s_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal in1_s_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_in1_s_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in1_s_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in1_s_V_user_V_U_apdone_blk : STD_LOGIC;
    signal in1_s_TUSER_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in1_s_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in1_s_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in1_s_V_last_V_U_apdone_blk : STD_LOGIC;
    signal in1_s_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in1_s_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in1_s_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in1_s_V_id_V_U_apdone_blk : STD_LOGIC;
    signal in1_s_TID_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in1_s_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in1_s_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in1_s_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal in1_s_TDEST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in1_s_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in1_s_V_dest_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in2_s_V_data_V_U_apdone_blk : STD_LOGIC;
    signal in2_s_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal in2_s_TVALID_int_regslice : STD_LOGIC;
    signal in2_s_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_in2_s_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in2_s_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal in2_s_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_in2_s_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in2_s_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in2_s_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal in2_s_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_in2_s_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in2_s_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in2_s_V_user_V_U_apdone_blk : STD_LOGIC;
    signal in2_s_TUSER_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in2_s_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in2_s_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in2_s_V_last_V_U_apdone_blk : STD_LOGIC;
    signal in2_s_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in2_s_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in2_s_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in2_s_V_id_V_U_apdone_blk : STD_LOGIC;
    signal in2_s_TID_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in2_s_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in2_s_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in2_s_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal in2_s_TDEST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in2_s_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in2_s_V_dest_V_U_ack_in : STD_LOGIC;
    signal ap_condition_242 : BOOLEAN;
    signal ap_condition_210 : BOOLEAN;
    signal ap_condition_289 : BOOLEAN;
    signal ap_condition_277 : BOOLEAN;
    signal ap_condition_891 : BOOLEAN;
    signal ap_condition_1029 : BOOLEAN;
    signal ap_condition_1039 : BOOLEAN;
    signal ap_condition_1061 : BOOLEAN;
    signal ap_condition_1072 : BOOLEAN;
    signal ap_condition_1097 : BOOLEAN;
    signal ap_condition_1107 : BOOLEAN;
    signal ap_condition_907 : BOOLEAN;
    signal ap_condition_920 : BOOLEAN;
    signal ap_condition_930 : BOOLEAN;
    signal ap_condition_948 : BOOLEAN;
    signal ap_condition_959 : BOOLEAN;
    signal ap_condition_972 : BOOLEAN;
    signal ap_condition_982 : BOOLEAN;
    signal ap_condition_1005 : BOOLEAN;
    signal ap_condition_1016 : BOOLEAN;
    signal ap_condition_905 : BOOLEAN;
    signal ap_condition_1037 : BOOLEAN;
    signal ap_condition_1070 : BOOLEAN;
    signal ap_condition_1105 : BOOLEAN;
    signal ap_condition_928 : BOOLEAN;
    signal ap_condition_957 : BOOLEAN;
    signal ap_condition_980 : BOOLEAN;
    signal ap_condition_1014 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;
    signal ap_return : STD_LOGIC_VECTOR (31 downto 0);

    component ufunc_reduce_all_i4_do_operation IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        op_read : IN STD_LOGIC_VECTOR (7 downto 0);
        x_read : IN STD_LOGIC_VECTOR (31 downto 0);
        y_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ufunc_reduce_all_i4_mux_164_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ufunc_reduce_all_i4_is_binary IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component ufunc_reduce_all_i4_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_return : IN STD_LOGIC_VECTOR (31 downto 0);
        args : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component ufunc_reduce_all_i4_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    is_binary_U : component ufunc_reduce_all_i4_is_binary
    generic map (
        DataWidth => 1,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => is_binary_address0,
        ce0 => is_binary_ce0,
        q0 => is_binary_q0);

    control_s_axi_U : component ufunc_reduce_all_i4_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ap_return => grp_do_operation_fu_372_ap_return,
        args => args);

    grp_do_operation_fu_372 : component ufunc_reduce_all_i4_do_operation
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_do_operation_fu_372_ap_start,
        ap_done => grp_do_operation_fu_372_ap_done,
        ap_idle => grp_do_operation_fu_372_ap_idle,
        ap_ready => grp_do_operation_fu_372_ap_ready,
        ap_ce => grp_do_operation_fu_372_ap_ce,
        op_read => grp_do_operation_fu_372_op_read,
        x_read => grp_do_operation_fu_372_x_read,
        y_read => grp_do_operation_fu_372_y_read,
        ap_return => grp_do_operation_fu_372_ap_return);

    grp_do_operation_fu_373 : component ufunc_reduce_all_i4_do_operation
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_do_operation_fu_373_ap_start,
        ap_done => grp_do_operation_fu_373_ap_done,
        ap_idle => grp_do_operation_fu_373_ap_idle,
        ap_ready => grp_do_operation_fu_373_ap_ready,
        ap_ce => grp_do_operation_fu_373_ap_ce,
        op_read => args_reduce_op_reg_1101,
        x_read => grp_do_operation_fu_373_x_read,
        y_read => grp_do_operation_fu_373_y_read,
        ap_return => grp_do_operation_fu_373_ap_return);

    mux_164_32_1_1_U10 : component ufunc_reduce_all_i4_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => reg_634,
        din1 => reg_621,
        din2 => reg_634,
        din3 => reg_610,
        din4 => reg_634,
        din5 => reg_598,
        din6 => reg_634,
        din7 => reg_587,
        din8 => reg_634,
        din9 => reg_575,
        din10 => reg_634,
        din11 => reg_564,
        din12 => reg_634,
        din13 => reg_552,
        din14 => reg_634,
        din15 => reg_634,
        din16 => phi_ln140_2_fu_907_p17,
        dout => phi_ln140_2_fu_907_p18);

    mux_164_32_1_1_U11 : component ufunc_reduce_all_i4_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => reg_546,
        din1 => reg_546,
        din2 => reg_615,
        din3 => reg_546,
        din4 => reg_546,
        din5 => reg_546,
        din6 => reg_592,
        din7 => reg_546,
        din8 => reg_546,
        din9 => reg_546,
        din10 => reg_569,
        din11 => reg_546,
        din12 => reg_546,
        din13 => reg_546,
        din14 => reg_546,
        din15 => reg_546,
        din16 => phi_ln140_3_fu_1005_p17,
        dout => phi_ln140_3_fu_1005_p18);

    regslice_both_in1_s_V_data_V_U : component ufunc_reduce_all_i4_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in1_s_TDATA,
        vld_in => in1_s_TVALID,
        ack_in => regslice_both_in1_s_V_data_V_U_ack_in,
        data_out => in1_s_TDATA_int_regslice,
        vld_out => in1_s_TVALID_int_regslice,
        ack_out => in1_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in1_s_V_data_V_U_apdone_blk);

    regslice_both_in1_s_V_keep_V_U : component ufunc_reduce_all_i4_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in1_s_TKEEP,
        vld_in => in1_s_TVALID,
        ack_in => regslice_both_in1_s_V_keep_V_U_ack_in,
        data_out => in1_s_TKEEP_int_regslice,
        vld_out => regslice_both_in1_s_V_keep_V_U_vld_out,
        ack_out => in1_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in1_s_V_keep_V_U_apdone_blk);

    regslice_both_in1_s_V_strb_V_U : component ufunc_reduce_all_i4_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in1_s_TSTRB,
        vld_in => in1_s_TVALID,
        ack_in => regslice_both_in1_s_V_strb_V_U_ack_in,
        data_out => in1_s_TSTRB_int_regslice,
        vld_out => regslice_both_in1_s_V_strb_V_U_vld_out,
        ack_out => in1_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in1_s_V_strb_V_U_apdone_blk);

    regslice_both_in1_s_V_user_V_U : component ufunc_reduce_all_i4_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in1_s_TUSER,
        vld_in => in1_s_TVALID,
        ack_in => regslice_both_in1_s_V_user_V_U_ack_in,
        data_out => in1_s_TUSER_int_regslice,
        vld_out => regslice_both_in1_s_V_user_V_U_vld_out,
        ack_out => in1_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in1_s_V_user_V_U_apdone_blk);

    regslice_both_in1_s_V_last_V_U : component ufunc_reduce_all_i4_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in1_s_TLAST,
        vld_in => in1_s_TVALID,
        ack_in => regslice_both_in1_s_V_last_V_U_ack_in,
        data_out => in1_s_TLAST_int_regslice,
        vld_out => regslice_both_in1_s_V_last_V_U_vld_out,
        ack_out => in1_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in1_s_V_last_V_U_apdone_blk);

    regslice_both_in1_s_V_id_V_U : component ufunc_reduce_all_i4_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in1_s_TID,
        vld_in => in1_s_TVALID,
        ack_in => regslice_both_in1_s_V_id_V_U_ack_in,
        data_out => in1_s_TID_int_regslice,
        vld_out => regslice_both_in1_s_V_id_V_U_vld_out,
        ack_out => in1_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in1_s_V_id_V_U_apdone_blk);

    regslice_both_in1_s_V_dest_V_U : component ufunc_reduce_all_i4_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in1_s_TDEST,
        vld_in => in1_s_TVALID,
        ack_in => regslice_both_in1_s_V_dest_V_U_ack_in,
        data_out => in1_s_TDEST_int_regslice,
        vld_out => regslice_both_in1_s_V_dest_V_U_vld_out,
        ack_out => in1_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in1_s_V_dest_V_U_apdone_blk);

    regslice_both_in2_s_V_data_V_U : component ufunc_reduce_all_i4_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in2_s_TDATA,
        vld_in => in2_s_TVALID,
        ack_in => regslice_both_in2_s_V_data_V_U_ack_in,
        data_out => in2_s_TDATA_int_regslice,
        vld_out => in2_s_TVALID_int_regslice,
        ack_out => in2_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in2_s_V_data_V_U_apdone_blk);

    regslice_both_in2_s_V_keep_V_U : component ufunc_reduce_all_i4_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in2_s_TKEEP,
        vld_in => in2_s_TVALID,
        ack_in => regslice_both_in2_s_V_keep_V_U_ack_in,
        data_out => in2_s_TKEEP_int_regslice,
        vld_out => regslice_both_in2_s_V_keep_V_U_vld_out,
        ack_out => in2_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in2_s_V_keep_V_U_apdone_blk);

    regslice_both_in2_s_V_strb_V_U : component ufunc_reduce_all_i4_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in2_s_TSTRB,
        vld_in => in2_s_TVALID,
        ack_in => regslice_both_in2_s_V_strb_V_U_ack_in,
        data_out => in2_s_TSTRB_int_regslice,
        vld_out => regslice_both_in2_s_V_strb_V_U_vld_out,
        ack_out => in2_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in2_s_V_strb_V_U_apdone_blk);

    regslice_both_in2_s_V_user_V_U : component ufunc_reduce_all_i4_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in2_s_TUSER,
        vld_in => in2_s_TVALID,
        ack_in => regslice_both_in2_s_V_user_V_U_ack_in,
        data_out => in2_s_TUSER_int_regslice,
        vld_out => regslice_both_in2_s_V_user_V_U_vld_out,
        ack_out => in2_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in2_s_V_user_V_U_apdone_blk);

    regslice_both_in2_s_V_last_V_U : component ufunc_reduce_all_i4_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in2_s_TLAST,
        vld_in => in2_s_TVALID,
        ack_in => regslice_both_in2_s_V_last_V_U_ack_in,
        data_out => in2_s_TLAST_int_regslice,
        vld_out => regslice_both_in2_s_V_last_V_U_vld_out,
        ack_out => in2_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in2_s_V_last_V_U_apdone_blk);

    regslice_both_in2_s_V_id_V_U : component ufunc_reduce_all_i4_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in2_s_TID,
        vld_in => in2_s_TVALID,
        ack_in => regslice_both_in2_s_V_id_V_U_ack_in,
        data_out => in2_s_TID_int_regslice,
        vld_out => regslice_both_in2_s_V_id_V_U_vld_out,
        ack_out => in2_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in2_s_V_id_V_U_apdone_blk);

    regslice_both_in2_s_V_dest_V_U : component ufunc_reduce_all_i4_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in2_s_TDEST,
        vld_in => in2_s_TVALID,
        ack_in => regslice_both_in2_s_V_dest_V_U_ack_in,
        data_out => in2_s_TDEST_int_regslice,
        vld_out => regslice_both_in2_s_V_dest_V_U_vld_out,
        ack_out => in2_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in2_s_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp0_flush_enable)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state13) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state13)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state13);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state19) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state19)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state19);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state25) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state25)) then 
                        ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state25);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                    ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_do_operation_fu_372_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_do_operation_fu_372_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_NS_fsm_state34) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    grp_do_operation_fu_372_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_do_operation_fu_372_ap_ready = ap_const_logic_1)) then 
                    grp_do_operation_fu_372_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_do_operation_fu_373_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_do_operation_fu_373_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_NS_fsm_state30) and (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then 
                    grp_do_operation_fu_373_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_do_operation_fu_373_ap_ready = ap_const_logic_1)) then 
                    grp_do_operation_fu_373_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                if ((trunc_ln126_fu_691_p1 = ap_const_lv4_F)) then 
                    ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_506_p1;
                elsif ((trunc_ln126_fu_691_p1 = ap_const_lv4_E)) then 
                    ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_444_p1;
                elsif ((trunc_ln126_fu_691_p1 = ap_const_lv4_D)) then 
                    ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_448_p1;
                elsif ((trunc_ln126_fu_691_p1 = ap_const_lv4_C)) then 
                    ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_452_p1;
                elsif ((trunc_ln126_fu_691_p1 = ap_const_lv4_B)) then 
                    ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_456_p1;
                elsif ((trunc_ln126_fu_691_p1 = ap_const_lv4_A)) then 
                    ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_460_p1;
                elsif ((trunc_ln126_fu_691_p1 = ap_const_lv4_9)) then 
                    ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_464_p1;
                elsif ((trunc_ln126_fu_691_p1 = ap_const_lv4_8)) then 
                    ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_468_p1;
                elsif ((trunc_ln126_fu_691_p1 = ap_const_lv4_7)) then 
                    ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_473_p1;
                elsif ((trunc_ln126_fu_691_p1 = ap_const_lv4_6)) then 
                    ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_477_p1;
                elsif ((trunc_ln126_fu_691_p1 = ap_const_lv4_5)) then 
                    ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_481_p1;
                elsif ((trunc_ln126_fu_691_p1 = ap_const_lv4_4)) then 
                    ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_485_p1;
                elsif ((trunc_ln126_fu_691_p1 = ap_const_lv4_3)) then 
                    ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_489_p1;
                elsif ((trunc_ln126_fu_691_p1 = ap_const_lv4_2)) then 
                    ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_493_p1;
                elsif ((trunc_ln126_fu_691_p1 = ap_const_lv4_1)) then 
                    ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_497_p1;
                elsif ((trunc_ln126_fu_691_p1 = ap_const_lv4_0)) then 
                    ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_501_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_265;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter1_phi_ln140_reg_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_210)) then
                if ((ap_const_boolean_1 = ap_condition_242)) then 
                    ap_phi_reg_pp1_iter1_phi_ln140_reg_314 <= grp_load_fu_444_p1;
                elsif (((trunc_ln140_fu_897_p1 = ap_const_lv4_C) and (tmp_1_fu_889_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln140_reg_314 <= grp_load_fu_452_p1;
                elsif (((trunc_ln140_fu_897_p1 = ap_const_lv4_A) and (tmp_1_fu_889_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln140_reg_314 <= grp_load_fu_460_p1;
                elsif (((trunc_ln140_fu_897_p1 = ap_const_lv4_8) and (tmp_1_fu_889_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln140_reg_314 <= grp_load_fu_468_p1;
                elsif (((trunc_ln140_fu_897_p1 = ap_const_lv4_6) and (tmp_1_fu_889_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln140_reg_314 <= grp_load_fu_477_p1;
                elsif (((trunc_ln140_fu_897_p1 = ap_const_lv4_4) and (tmp_1_fu_889_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln140_reg_314 <= grp_load_fu_485_p1;
                elsif (((trunc_ln140_fu_897_p1 = ap_const_lv4_2) and (tmp_1_fu_889_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln140_reg_314 <= grp_load_fu_493_p1;
                elsif (((trunc_ln140_fu_897_p1 = ap_const_lv4_0) and (tmp_1_fu_889_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln140_reg_314 <= grp_load_fu_501_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter1_phi_ln140_reg_314 <= ap_phi_reg_pp1_iter0_phi_ln140_reg_314;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp2_iter1_phi_ln140_1_reg_347_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_277)) then
                if ((ap_const_boolean_1 = ap_condition_289)) then 
                    ap_phi_reg_pp2_iter1_phi_ln140_1_reg_347 <= grp_load_fu_452_p1;
                elsif (((trunc_ln140_1_fu_995_p1 = ap_const_lv4_8) and (tmp_2_fu_987_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp2_iter1_phi_ln140_1_reg_347 <= grp_load_fu_468_p1;
                elsif (((trunc_ln140_1_fu_995_p1 = ap_const_lv4_4) and (tmp_2_fu_987_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp2_iter1_phi_ln140_1_reg_347 <= grp_load_fu_485_p1;
                elsif (((trunc_ln140_1_fu_995_p1 = ap_const_lv4_0) and (tmp_2_fu_987_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp2_iter1_phi_ln140_1_reg_347 <= grp_load_fu_501_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp2_iter1_phi_ln140_1_reg_347 <= ap_phi_reg_pp2_iter0_phi_ln140_1_reg_347;
                end if;
            end if; 
        end if;
    end process;

    i_1_reg_336_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                i_1_reg_336 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (tmp_2_fu_987_p3 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                i_1_reg_336 <= add_ln139_1_fu_1043_p2;
            end if; 
        end if;
    end process;

    i_2_reg_361_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                i_2_reg_361 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (tmp_3_fu_1049_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                i_2_reg_361 <= add_ln139_2_fu_1095_p2;
            end if; 
        end if;
    end process;

    i_reg_303_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                i_reg_303 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (tmp_1_fu_889_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                i_reg_303 <= add_ln139_fu_945_p2;
            end if; 
        end if;
    end process;

    n_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (in1_c_last_V_reg_1131_pp0_iter5_reg = ap_const_lv1_0))) then 
                n_reg_254 <= n_1_reg_1165;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                n_reg_254 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_reg_243_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (in1_c_last_V_reg_1131_pp0_iter4_reg = ap_const_lv1_0))) then 
                p_reg_243 <= p_1_reg_1160;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                p_reg_243 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    res_p_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_0))) then 
                res_p_0 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (trunc_ln140_1_reg_1196_pp2_iter3_reg = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_0)))) then 
                res_p_0 <= grp_do_operation_fu_373_ap_return;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (icmp_ln140_reg_1214_pp3_iter3_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_0)))) then 
                res_p_0 <= grp_do_operation_fu_372_ap_return;
            end if; 
        end if;
    end process;

    res_p_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_905)) then
                if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                    res_p_1 <= call_ret_reg_1135_pp0_iter7_reg;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    res_p_1 <= grp_do_operation_fu_373_ap_return;
                end if;
            end if; 
        end if;
    end process;

    res_p_10_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_A))) then 
                res_p_10 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_A))) then 
                res_p_10 <= grp_do_operation_fu_373_ap_return;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_A))) then 
                res_p_10 <= grp_do_operation_fu_372_ap_return;
            end if; 
        end if;
    end process;

    res_p_11_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1037)) then
                if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                    res_p_11 <= call_ret_reg_1135_pp0_iter7_reg;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    res_p_11 <= grp_do_operation_fu_373_ap_return;
                end if;
            end if; 
        end if;
    end process;

    res_p_12_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_C))) then 
                res_p_12 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_C))) then 
                res_p_12 <= grp_do_operation_fu_372_ap_return;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_C)) or (not((trunc_ln140_1_reg_1196_pp2_iter3_reg = ap_const_lv4_8)) and not((trunc_ln140_1_reg_1196_pp2_iter3_reg = ap_const_lv4_4)) and not((trunc_ln140_1_reg_1196_pp2_iter3_reg = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1)))) then 
                res_p_12 <= grp_do_operation_fu_373_ap_return;
            end if; 
        end if;
    end process;

    res_p_13_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1070)) then
                if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                    res_p_13 <= call_ret_reg_1135_pp0_iter7_reg;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    res_p_13 <= grp_do_operation_fu_373_ap_return;
                end if;
            end if; 
        end if;
    end process;

    res_p_14_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_E))) then 
                res_p_14 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_E))) then 
                res_p_14 <= grp_do_operation_fu_373_ap_return;
            elsif ((not((trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_8)) and not((trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_6)) and not((trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_4)) and not((trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_2)) and not((trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_0)) and not((trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_C)) and not((trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_A)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
                res_p_14 <= grp_do_operation_fu_372_ap_return;
            end if; 
        end if;
    end process;

    res_p_15_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1105)) then
                if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                    res_p_15 <= call_ret_reg_1135_pp0_iter7_reg;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    res_p_15 <= grp_do_operation_fu_373_ap_return;
                end if;
            end if; 
        end if;
    end process;

    res_p_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_2))) then 
                res_p_2 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_2))) then 
                res_p_2 <= grp_do_operation_fu_373_ap_return;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_2))) then 
                res_p_2 <= grp_do_operation_fu_372_ap_return;
            end if; 
        end if;
    end process;

    res_p_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_928)) then
                if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                    res_p_3 <= call_ret_reg_1135_pp0_iter7_reg;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    res_p_3 <= grp_do_operation_fu_373_ap_return;
                end if;
            end if; 
        end if;
    end process;

    res_p_4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_4))) then 
                res_p_4 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_4))) then 
                res_p_4 <= grp_do_operation_fu_372_ap_return;
            elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (trunc_ln140_1_reg_1196_pp2_iter3_reg = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_4)))) then 
                res_p_4 <= grp_do_operation_fu_373_ap_return;
            end if; 
        end if;
    end process;

    res_p_5_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_957)) then
                if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                    res_p_5 <= call_ret_reg_1135_pp0_iter7_reg;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    res_p_5 <= grp_do_operation_fu_373_ap_return;
                end if;
            end if; 
        end if;
    end process;

    res_p_6_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_6))) then 
                res_p_6 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_6))) then 
                res_p_6 <= grp_do_operation_fu_373_ap_return;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_6))) then 
                res_p_6 <= grp_do_operation_fu_372_ap_return;
            end if; 
        end if;
    end process;

    res_p_7_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_980)) then
                if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                    res_p_7 <= call_ret_reg_1135_pp0_iter7_reg;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    res_p_7 <= grp_do_operation_fu_373_ap_return;
                end if;
            end if; 
        end if;
    end process;

    res_p_8_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_8))) then 
                res_p_8 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (trunc_ln140_1_reg_1196_pp2_iter3_reg = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_8)))) then 
                res_p_8 <= grp_do_operation_fu_373_ap_return;
            elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (icmp_ln140_reg_1214_pp3_iter3_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_8)))) then 
                res_p_8 <= grp_do_operation_fu_372_ap_return;
            end if; 
        end if;
    end process;

    res_p_9_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1014)) then
                if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                    res_p_9 <= call_ret_reg_1135_pp0_iter7_reg;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    res_p_9 <= grp_do_operation_fu_373_ap_return;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_UnifiedRetVal_i_reg_265 <= ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_265;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_UnifiedRetVal_i_reg_265 <= ap_phi_reg_pp0_iter1_UnifiedRetVal_i_reg_265;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_UnifiedRetVal_i_reg_265 <= ap_phi_reg_pp0_iter2_UnifiedRetVal_i_reg_265;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_265 <= ap_phi_reg_pp0_iter3_UnifiedRetVal_i_reg_265;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                args_element_op_reg_1107 <= args(15 downto 8);
                args_final_op_reg_1112 <= args(23 downto 16);
                args_reduce_op_reg_1101 <= args_reduce_op_fu_639_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                call_ret6_reg_1233 <= grp_do_operation_fu_373_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                call_ret_reg_1135 <= grp_do_operation_fu_372_ap_return;
                p_1_reg_1160 <= p_1_fu_707_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                call_ret_reg_1135_pp0_iter5_reg <= call_ret_reg_1135;
                call_ret_reg_1135_pp0_iter6_reg <= call_ret_reg_1135_pp0_iter5_reg;
                call_ret_reg_1135_pp0_iter7_reg <= call_ret_reg_1135_pp0_iter6_reg;
                icmp_ln128_reg_1170 <= icmp_ln128_fu_731_p2;
                icmp_ln128_reg_1170_pp0_iter6_reg <= icmp_ln128_reg_1170;
                icmp_ln128_reg_1170_pp0_iter7_reg <= icmp_ln128_reg_1170_pp0_iter6_reg;
                in1_c_last_V_reg_1131_pp0_iter2_reg <= in1_c_last_V_reg_1131_pp0_iter1_reg;
                in1_c_last_V_reg_1131_pp0_iter3_reg <= in1_c_last_V_reg_1131_pp0_iter2_reg;
                in1_c_last_V_reg_1131_pp0_iter4_reg <= in1_c_last_V_reg_1131_pp0_iter3_reg;
                in1_c_last_V_reg_1131_pp0_iter5_reg <= in1_c_last_V_reg_1131_pp0_iter4_reg;
                trunc_ln126_reg_1156 <= trunc_ln126_fu_691_p1;
                trunc_ln126_reg_1156_pp0_iter5_reg <= trunc_ln126_reg_1156;
                trunc_ln126_reg_1156_pp0_iter6_reg <= trunc_ln126_reg_1156_pp0_iter5_reg;
                trunc_ln126_reg_1156_pp0_iter7_reg <= trunc_ln126_reg_1156_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (tmp_3_fu_1049_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                icmp_ln140_reg_1214 <= icmp_ln140_fu_1067_p2;
                select_ln140_1_reg_1223 <= select_ln140_1_fu_1087_p3;
                select_ln140_reg_1218 <= select_ln140_fu_1073_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                icmp_ln140_reg_1214_pp3_iter1_reg <= icmp_ln140_reg_1214;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp3_stage0_11001)) then
                icmp_ln140_reg_1214_pp3_iter2_reg <= icmp_ln140_reg_1214_pp3_iter1_reg;
                icmp_ln140_reg_1214_pp3_iter3_reg <= icmp_ln140_reg_1214_pp3_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                in1_c_data_V_reg_1126 <= in1_s_TDATA_int_regslice;
                in1_c_last_V_reg_1131 <= in1_s_TLAST_int_regslice;
                in1_c_last_V_reg_1131_pp0_iter1_reg <= in1_c_last_V_reg_1131;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((is_binary_load_reg_1122 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                in2 <= in2_s_TDATA_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                is_binary_load_reg_1122 <= is_binary_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                n_1_reg_1165 <= n_1_fu_715_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (tmp_1_fu_889_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                phi_ln140_2_reg_1182 <= phi_ln140_2_fu_907_p18;
                trunc_ln140_reg_1178 <= trunc_ln140_fu_897_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (tmp_2_fu_987_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                phi_ln140_3_reg_1200 <= phi_ln140_3_fu_1005_p18;
                trunc_ln140_1_reg_1196 <= trunc_ln140_1_fu_995_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) or (not((trunc_ln140_fu_897_p1 = ap_const_lv4_C)) and not((trunc_ln140_fu_897_p1 = ap_const_lv4_A)) and not((trunc_ln140_fu_897_p1 = ap_const_lv4_8)) and not((trunc_ln140_fu_897_p1 = ap_const_lv4_6)) and not((trunc_ln140_fu_897_p1 = ap_const_lv4_4)) and not((trunc_ln140_fu_897_p1 = ap_const_lv4_2)) and not((trunc_ln140_fu_897_p1 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (tmp_1_fu_889_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln126_fu_691_p1 = ap_const_lv4_E) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then
                reg_546 <= grp_load_fu_444_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln126_fu_691_p1 = ap_const_lv4_D) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then
                reg_552 <= grp_load_fu_448_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) or (not((trunc_ln140_1_fu_995_p1 = ap_const_lv4_8)) and not((trunc_ln140_1_fu_995_p1 = ap_const_lv4_4)) and not((trunc_ln140_1_fu_995_p1 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (tmp_2_fu_987_p3 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln140_fu_897_p1 = ap_const_lv4_C) and (tmp_1_fu_889_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln126_fu_691_p1 = ap_const_lv4_C) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then
                reg_557 <= grp_load_fu_452_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln126_fu_691_p1 = ap_const_lv4_B) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then
                reg_564 <= grp_load_fu_456_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln140_fu_897_p1 = ap_const_lv4_A) and (tmp_1_fu_889_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln126_fu_691_p1 = ap_const_lv4_A) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then
                reg_569 <= grp_load_fu_460_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln126_fu_691_p1 = ap_const_lv4_9) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then
                reg_575 <= grp_load_fu_464_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln126_fu_691_p1 = ap_const_lv4_7) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then
                reg_587 <= grp_load_fu_473_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln140_fu_897_p1 = ap_const_lv4_6) and (tmp_1_fu_889_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln126_fu_691_p1 = ap_const_lv4_6) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then
                reg_592 <= grp_load_fu_477_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln126_fu_691_p1 = ap_const_lv4_5) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then
                reg_598 <= grp_load_fu_481_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (trunc_ln140_1_fu_995_p1 = ap_const_lv4_4) and (tmp_2_fu_987_p3 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln140_fu_897_p1 = ap_const_lv4_4) and (tmp_1_fu_889_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln126_fu_691_p1 = ap_const_lv4_4) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then
                reg_603 <= grp_load_fu_485_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln126_fu_691_p1 = ap_const_lv4_3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then
                reg_610 <= grp_load_fu_489_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln140_fu_897_p1 = ap_const_lv4_2) and (tmp_1_fu_889_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln126_fu_691_p1 = ap_const_lv4_2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then
                reg_615 <= grp_load_fu_493_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln126_fu_691_p1 = ap_const_lv4_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then
                reg_621 <= grp_load_fu_497_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln126_fu_691_p1 = ap_const_lv4_F) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then
                reg_634 <= grp_load_fu_506_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                trunc_ln140_1_reg_1196_pp2_iter1_reg <= trunc_ln140_1_reg_1196;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                trunc_ln140_1_reg_1196_pp2_iter2_reg <= trunc_ln140_1_reg_1196_pp2_iter1_reg;
                trunc_ln140_1_reg_1196_pp2_iter3_reg <= trunc_ln140_1_reg_1196_pp2_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                trunc_ln140_reg_1178_pp1_iter1_reg <= trunc_ln140_reg_1178;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                trunc_ln140_reg_1178_pp1_iter2_reg <= trunc_ln140_reg_1178_pp1_iter1_reg;
                trunc_ln140_reg_1178_pp1_iter3_reg <= trunc_ln140_reg_1178_pp1_iter2_reg;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp1_iter0, tmp_1_fu_889_p3, ap_enable_reg_pp2_iter0, tmp_2_fu_987_p3, tmp_3_fu_1049_p3, ap_enable_reg_pp3_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter4, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter3, ap_enable_reg_pp3_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (tmp_1_fu_889_p3 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (tmp_1_fu_889_p3 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (tmp_2_fu_987_p3 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (tmp_2_fu_987_p3 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (tmp_3_fu_1049_p3 = ap_const_lv1_1))) and not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (tmp_3_fu_1049_p3 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln130_fu_701_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_phi_fu_247_p4) + unsigned(ap_const_lv32_1));
    add_ln139_1_fu_1043_p2 <= std_logic_vector(unsigned(i_1_reg_336) + unsigned(ap_const_lv5_4));
    add_ln139_2_fu_1095_p2 <= std_logic_vector(unsigned(i_2_reg_361) + unsigned(ap_const_lv5_8));
    add_ln139_fu_945_p2 <= std_logic_vector(unsigned(i_reg_303) + unsigned(ap_const_lv5_2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(3);
    ap_CS_fsm_state18 <= ap_CS_fsm(5);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state24 <= ap_CS_fsm(7);
    ap_CS_fsm_state30 <= ap_CS_fsm(9);
    ap_CS_fsm_state31 <= ap_CS_fsm(10);
    ap_CS_fsm_state32 <= ap_CS_fsm(11);
    ap_CS_fsm_state33 <= ap_CS_fsm(12);
    ap_CS_fsm_state34 <= ap_CS_fsm(13);
    ap_CS_fsm_state35 <= ap_CS_fsm(14);
    ap_CS_fsm_state36 <= ap_CS_fsm(15);
    ap_CS_fsm_state37 <= ap_CS_fsm(16);
    ap_NS_fsm_state30 <= ap_NS_fsm(9);
    ap_NS_fsm_state34 <= ap_NS_fsm(13);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter0, is_binary_load_reg_1122, in1_s_TVALID_int_regslice, in2_s_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((in1_s_TVALID_int_regslice = ap_const_logic_0) or ((is_binary_load_reg_1122 = ap_const_lv1_1) and (in2_s_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp143_assign_proc : process(ap_enable_reg_pp0_iter0, is_binary_load_reg_1122, in1_s_TVALID_int_regslice, in2_s_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp143 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((in1_s_TVALID_int_regslice = ap_const_logic_0) or ((is_binary_load_reg_1122 = ap_const_lv1_1) and (in2_s_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp79_assign_proc : process(ap_enable_reg_pp0_iter0, is_binary_load_reg_1122, in1_s_TVALID_int_regslice, in2_s_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp79 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((in1_s_TVALID_int_regslice = ap_const_logic_0) or ((is_binary_load_reg_1122 = ap_const_lv1_1) and (in2_s_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, is_binary_load_reg_1122, in1_s_TVALID_int_regslice, in2_s_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((in1_s_TVALID_int_regslice = ap_const_logic_0) or ((is_binary_load_reg_1122 = ap_const_lv1_1) and (in2_s_TVALID_int_regslice = ap_const_logic_0))));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001_ignoreCallOp240 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001_ignoreCallOp287 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001_ignoreCallOp318 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter7_ignore_call1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter8_ignore_call1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter0_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter1_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter2_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp1_stage0_iter3_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter4_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp2_stage0_iter0_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp2_stage0_iter1_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp2_stage0_iter2_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp2_stage0_iter3_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp2_stage0_iter4_ignore_call2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp3_stage0_iter0_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp3_stage0_iter1_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp3_stage0_iter2_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp3_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp3_stage0_iter3_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp3_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp3_stage0_iter4_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter0_assign_proc : process(is_binary_load_reg_1122, in1_s_TVALID_int_regslice, in2_s_TVALID_int_regslice)
    begin
                ap_block_state3_pp0_stage0_iter0 <= ((in1_s_TVALID_int_regslice = ap_const_logic_0) or ((is_binary_load_reg_1122 = ap_const_lv1_1) and (in2_s_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state3_pp0_stage0_iter0_ignore_call1_assign_proc : process(is_binary_load_reg_1122, in1_s_TVALID_int_regslice, in2_s_TVALID_int_regslice)
    begin
                ap_block_state3_pp0_stage0_iter0_ignore_call1 <= ((in1_s_TVALID_int_regslice = ap_const_logic_0) or ((is_binary_load_reg_1122 = ap_const_lv1_1) and (in2_s_TVALID_int_regslice = ap_const_logic_0)));
    end process;

        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1_ignore_call1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2_ignore_call1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3_ignore_call1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4_ignore_call1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5_ignore_call1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6_ignore_call1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1005_assign_proc : process(ap_block_pp0_stage0, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_1005 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_8));
    end process;


    ap_condition_1014_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_1014 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_9));
    end process;


    ap_condition_1016_assign_proc : process(ap_block_pp0_stage0, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_1016 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_9));
    end process;


    ap_condition_1029_assign_proc : process(ap_block_pp0_stage0, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_1029 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_A));
    end process;


    ap_condition_1037_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_1037 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_B));
    end process;


    ap_condition_1039_assign_proc : process(ap_block_pp0_stage0, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_1039 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_B));
    end process;


    ap_condition_1061_assign_proc : process(ap_block_pp0_stage0, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_1061 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_C));
    end process;


    ap_condition_1070_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_1070 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_D));
    end process;


    ap_condition_1072_assign_proc : process(ap_block_pp0_stage0, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_1072 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_D));
    end process;


    ap_condition_1097_assign_proc : process(ap_block_pp0_stage0, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_1097 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_E));
    end process;


    ap_condition_1105_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_1105 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_F));
    end process;


    ap_condition_1107_assign_proc : process(ap_block_pp0_stage0, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_1107 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_F));
    end process;


    ap_condition_210_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0)
    begin
                ap_condition_210 <= ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_242_assign_proc : process(tmp_1_fu_889_p3, trunc_ln140_fu_897_p1)
    begin
                ap_condition_242 <= (not((trunc_ln140_fu_897_p1 = ap_const_lv4_C)) and not((trunc_ln140_fu_897_p1 = ap_const_lv4_A)) and not((trunc_ln140_fu_897_p1 = ap_const_lv4_8)) and not((trunc_ln140_fu_897_p1 = ap_const_lv4_6)) and not((trunc_ln140_fu_897_p1 = ap_const_lv4_4)) and not((trunc_ln140_fu_897_p1 = ap_const_lv4_2)) and not((trunc_ln140_fu_897_p1 = ap_const_lv4_0)) and (tmp_1_fu_889_p3 = ap_const_lv1_0));
    end process;


    ap_condition_277_assign_proc : process(ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0)
    begin
                ap_condition_277 <= ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0));
    end process;


    ap_condition_289_assign_proc : process(tmp_2_fu_987_p3, trunc_ln140_1_fu_995_p1)
    begin
                ap_condition_289 <= (not((trunc_ln140_1_fu_995_p1 = ap_const_lv4_8)) and not((trunc_ln140_1_fu_995_p1 = ap_const_lv4_4)) and not((trunc_ln140_1_fu_995_p1 = ap_const_lv4_0)) and (tmp_2_fu_987_p3 = ap_const_lv1_0));
    end process;


    ap_condition_891_assign_proc : process(ap_block_pp0_stage0, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_891 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_0));
    end process;


    ap_condition_905_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_905 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_1));
    end process;


    ap_condition_907_assign_proc : process(ap_block_pp0_stage0, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_907 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_1));
    end process;


    ap_condition_920_assign_proc : process(ap_block_pp0_stage0, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_920 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_2));
    end process;


    ap_condition_928_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_928 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_3));
    end process;


    ap_condition_930_assign_proc : process(ap_block_pp0_stage0, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_930 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_3));
    end process;


    ap_condition_948_assign_proc : process(ap_block_pp0_stage0, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_948 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_4));
    end process;


    ap_condition_957_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_957 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_5));
    end process;


    ap_condition_959_assign_proc : process(ap_block_pp0_stage0, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_959 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_5));
    end process;


    ap_condition_972_assign_proc : process(ap_block_pp0_stage0, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_972 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_6));
    end process;


    ap_condition_980_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_980 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_7));
    end process;


    ap_condition_982_assign_proc : process(ap_block_pp0_stage0, trunc_ln126_reg_1156_pp0_iter7_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_condition_982 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (trunc_ln126_reg_1156_pp0_iter7_reg = ap_const_lv4_7));
    end process;


    ap_condition_pp0_flush_enable_assign_proc : process(ap_CS_fsm_pp0_stage0, in1_c_last_V_fu_672_p1, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (in1_c_last_V_fu_672_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_pp0_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp0_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state13_assign_proc : process(tmp_1_fu_889_p3)
    begin
        if ((tmp_1_fu_889_p3 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state13 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state19_assign_proc : process(tmp_2_fu_987_p3)
    begin
        if ((tmp_2_fu_987_p3 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state19 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state25_assign_proc : process(tmp_3_fu_1049_p3)
    begin
        if ((tmp_3_fu_1049_p3 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state25 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state25 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter3, ap_enable_reg_pp3_iter4)
    begin
        if (((ap_enable_reg_pp3_iter4 = ap_const_logic_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_n_phi_fu_258_p4_assign_proc : process(ap_block_pp0_stage0, n_reg_254, in1_c_last_V_reg_1131_pp0_iter5_reg, n_1_reg_1165, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (in1_c_last_V_reg_1131_pp0_iter5_reg = ap_const_lv1_0))) then 
            ap_phi_mux_n_phi_fu_258_p4 <= n_1_reg_1165;
        else 
            ap_phi_mux_n_phi_fu_258_p4 <= n_reg_254;
        end if; 
    end process;


    ap_phi_mux_p_phi_fu_247_p4_assign_proc : process(ap_block_pp0_stage0, p_reg_243, in1_c_last_V_reg_1131_pp0_iter4_reg, p_1_reg_1160, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (in1_c_last_V_reg_1131_pp0_iter4_reg = ap_const_lv1_0))) then 
            ap_phi_mux_p_phi_fu_247_p4 <= p_1_reg_1160;
        else 
            ap_phi_mux_p_phi_fu_247_p4 <= p_reg_243;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_265 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln140_reg_314 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp2_iter0_phi_ln140_1_reg_347 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_allocacmp_res_p_0_load_assign_proc : process(res_p_0, grp_do_operation_fu_372_ap_return, trunc_ln140_reg_1178_pp1_iter3_reg, ap_enable_reg_pp1_iter4, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_0))) then 
            ap_sig_allocacmp_res_p_0_load <= grp_do_operation_fu_372_ap_return;
        else 
            ap_sig_allocacmp_res_p_0_load <= res_p_0;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_0_load_1_assign_proc : process(res_p_0, trunc_ln140_1_reg_1196_pp2_iter3_reg, grp_do_operation_fu_373_ap_return, ap_enable_reg_pp2_iter4, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (trunc_ln140_1_reg_1196_pp2_iter3_reg = ap_const_lv4_0))) then 
            ap_sig_allocacmp_res_p_0_load_1 <= grp_do_operation_fu_373_ap_return;
        else 
            ap_sig_allocacmp_res_p_0_load_1 <= res_p_0;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_0_load_2_assign_proc : process(res_p_0, grp_do_operation_fu_372_ap_return, icmp_ln140_reg_1214_pp3_iter3_reg, ap_enable_reg_pp3_iter4, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (icmp_ln140_reg_1214_pp3_iter3_reg = ap_const_lv1_1))) then 
            ap_sig_allocacmp_res_p_0_load_2 <= grp_do_operation_fu_372_ap_return;
        else 
            ap_sig_allocacmp_res_p_0_load_2 <= res_p_0;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_0_load_4_assign_proc : process(res_p_0, call_ret_reg_1135_pp0_iter7_reg, icmp_ln128_reg_1170_pp0_iter7_reg, grp_do_operation_fu_373_ap_return, ap_condition_891)
    begin
        if ((ap_const_boolean_1 = ap_condition_891)) then
            if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                ap_sig_allocacmp_res_p_0_load_4 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                ap_sig_allocacmp_res_p_0_load_4 <= grp_do_operation_fu_373_ap_return;
            else 
                ap_sig_allocacmp_res_p_0_load_4 <= res_p_0;
            end if;
        else 
            ap_sig_allocacmp_res_p_0_load_4 <= res_p_0;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_10_load_assign_proc : process(res_p_10, grp_do_operation_fu_372_ap_return, trunc_ln140_reg_1178_pp1_iter3_reg, ap_enable_reg_pp1_iter4, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_A))) then 
            ap_sig_allocacmp_res_p_10_load <= grp_do_operation_fu_372_ap_return;
        else 
            ap_sig_allocacmp_res_p_10_load <= res_p_10;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_10_load_2_assign_proc : process(res_p_10, call_ret_reg_1135_pp0_iter7_reg, icmp_ln128_reg_1170_pp0_iter7_reg, grp_do_operation_fu_373_ap_return, ap_condition_1029)
    begin
        if ((ap_const_boolean_1 = ap_condition_1029)) then
            if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                ap_sig_allocacmp_res_p_10_load_2 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                ap_sig_allocacmp_res_p_10_load_2 <= grp_do_operation_fu_373_ap_return;
            else 
                ap_sig_allocacmp_res_p_10_load_2 <= res_p_10;
            end if;
        else 
            ap_sig_allocacmp_res_p_10_load_2 <= res_p_10;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_11_load_1_assign_proc : process(res_p_11, call_ret_reg_1135_pp0_iter7_reg, icmp_ln128_reg_1170_pp0_iter7_reg, grp_do_operation_fu_373_ap_return, ap_condition_1039)
    begin
        if ((ap_const_boolean_1 = ap_condition_1039)) then
            if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                ap_sig_allocacmp_res_p_11_load_1 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                ap_sig_allocacmp_res_p_11_load_1 <= grp_do_operation_fu_373_ap_return;
            else 
                ap_sig_allocacmp_res_p_11_load_1 <= res_p_11;
            end if;
        else 
            ap_sig_allocacmp_res_p_11_load_1 <= res_p_11;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_12_load_assign_proc : process(res_p_12, grp_do_operation_fu_372_ap_return, trunc_ln140_reg_1178_pp1_iter3_reg, ap_enable_reg_pp1_iter4, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_C))) then 
            ap_sig_allocacmp_res_p_12_load <= grp_do_operation_fu_372_ap_return;
        else 
            ap_sig_allocacmp_res_p_12_load <= res_p_12;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_12_load_1_assign_proc : process(res_p_12, trunc_ln140_1_reg_1196_pp2_iter3_reg, grp_do_operation_fu_373_ap_return, ap_enable_reg_pp2_iter4, ap_block_pp2_stage0)
    begin
        if ((not((trunc_ln140_1_reg_1196_pp2_iter3_reg = ap_const_lv4_8)) and not((trunc_ln140_1_reg_1196_pp2_iter3_reg = ap_const_lv4_4)) and not((trunc_ln140_1_reg_1196_pp2_iter3_reg = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_res_p_12_load_1 <= grp_do_operation_fu_373_ap_return;
        else 
            ap_sig_allocacmp_res_p_12_load_1 <= res_p_12;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_12_load_3_assign_proc : process(res_p_12, call_ret_reg_1135_pp0_iter7_reg, icmp_ln128_reg_1170_pp0_iter7_reg, grp_do_operation_fu_373_ap_return, ap_condition_1061)
    begin
        if ((ap_const_boolean_1 = ap_condition_1061)) then
            if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                ap_sig_allocacmp_res_p_12_load_3 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                ap_sig_allocacmp_res_p_12_load_3 <= grp_do_operation_fu_373_ap_return;
            else 
                ap_sig_allocacmp_res_p_12_load_3 <= res_p_12;
            end if;
        else 
            ap_sig_allocacmp_res_p_12_load_3 <= res_p_12;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_13_load_1_assign_proc : process(res_p_13, call_ret_reg_1135_pp0_iter7_reg, icmp_ln128_reg_1170_pp0_iter7_reg, grp_do_operation_fu_373_ap_return, ap_condition_1072)
    begin
        if ((ap_const_boolean_1 = ap_condition_1072)) then
            if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                ap_sig_allocacmp_res_p_13_load_1 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                ap_sig_allocacmp_res_p_13_load_1 <= grp_do_operation_fu_373_ap_return;
            else 
                ap_sig_allocacmp_res_p_13_load_1 <= res_p_13;
            end if;
        else 
            ap_sig_allocacmp_res_p_13_load_1 <= res_p_13;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_14_load_assign_proc : process(res_p_14, grp_do_operation_fu_372_ap_return, trunc_ln140_reg_1178_pp1_iter3_reg, ap_enable_reg_pp1_iter4, ap_block_pp1_stage0)
    begin
        if ((not((trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_8)) and not((trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_6)) and not((trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_4)) and not((trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_2)) and not((trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_0)) and not((trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_C)) and not((trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_A)) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_res_p_14_load <= grp_do_operation_fu_372_ap_return;
        else 
            ap_sig_allocacmp_res_p_14_load <= res_p_14;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_14_load_2_assign_proc : process(res_p_14, call_ret_reg_1135_pp0_iter7_reg, icmp_ln128_reg_1170_pp0_iter7_reg, grp_do_operation_fu_373_ap_return, ap_condition_1097)
    begin
        if ((ap_const_boolean_1 = ap_condition_1097)) then
            if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                ap_sig_allocacmp_res_p_14_load_2 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                ap_sig_allocacmp_res_p_14_load_2 <= grp_do_operation_fu_373_ap_return;
            else 
                ap_sig_allocacmp_res_p_14_load_2 <= res_p_14;
            end if;
        else 
            ap_sig_allocacmp_res_p_14_load_2 <= res_p_14;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_15_load_1_assign_proc : process(res_p_15, call_ret_reg_1135_pp0_iter7_reg, icmp_ln128_reg_1170_pp0_iter7_reg, grp_do_operation_fu_373_ap_return, ap_condition_1107)
    begin
        if ((ap_const_boolean_1 = ap_condition_1107)) then
            if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                ap_sig_allocacmp_res_p_15_load_1 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                ap_sig_allocacmp_res_p_15_load_1 <= grp_do_operation_fu_373_ap_return;
            else 
                ap_sig_allocacmp_res_p_15_load_1 <= res_p_15;
            end if;
        else 
            ap_sig_allocacmp_res_p_15_load_1 <= res_p_15;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_1_load_assign_proc : process(res_p_1, call_ret_reg_1135_pp0_iter7_reg, icmp_ln128_reg_1170_pp0_iter7_reg, grp_do_operation_fu_373_ap_return, ap_condition_907)
    begin
        if ((ap_const_boolean_1 = ap_condition_907)) then
            if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                ap_sig_allocacmp_res_p_1_load <= call_ret_reg_1135_pp0_iter7_reg;
            elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                ap_sig_allocacmp_res_p_1_load <= grp_do_operation_fu_373_ap_return;
            else 
                ap_sig_allocacmp_res_p_1_load <= res_p_1;
            end if;
        else 
            ap_sig_allocacmp_res_p_1_load <= res_p_1;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_2_load_assign_proc : process(res_p_2, grp_do_operation_fu_372_ap_return, trunc_ln140_reg_1178_pp1_iter3_reg, ap_enable_reg_pp1_iter4, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_2))) then 
            ap_sig_allocacmp_res_p_2_load <= grp_do_operation_fu_372_ap_return;
        else 
            ap_sig_allocacmp_res_p_2_load <= res_p_2;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_2_load_2_assign_proc : process(res_p_2, call_ret_reg_1135_pp0_iter7_reg, icmp_ln128_reg_1170_pp0_iter7_reg, grp_do_operation_fu_373_ap_return, ap_condition_920)
    begin
        if ((ap_const_boolean_1 = ap_condition_920)) then
            if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                ap_sig_allocacmp_res_p_2_load_2 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                ap_sig_allocacmp_res_p_2_load_2 <= grp_do_operation_fu_373_ap_return;
            else 
                ap_sig_allocacmp_res_p_2_load_2 <= res_p_2;
            end if;
        else 
            ap_sig_allocacmp_res_p_2_load_2 <= res_p_2;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_3_load_1_assign_proc : process(res_p_3, call_ret_reg_1135_pp0_iter7_reg, icmp_ln128_reg_1170_pp0_iter7_reg, grp_do_operation_fu_373_ap_return, ap_condition_930)
    begin
        if ((ap_const_boolean_1 = ap_condition_930)) then
            if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                ap_sig_allocacmp_res_p_3_load_1 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                ap_sig_allocacmp_res_p_3_load_1 <= grp_do_operation_fu_373_ap_return;
            else 
                ap_sig_allocacmp_res_p_3_load_1 <= res_p_3;
            end if;
        else 
            ap_sig_allocacmp_res_p_3_load_1 <= res_p_3;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_4_load_assign_proc : process(res_p_4, grp_do_operation_fu_372_ap_return, trunc_ln140_reg_1178_pp1_iter3_reg, ap_enable_reg_pp1_iter4, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_4))) then 
            ap_sig_allocacmp_res_p_4_load <= grp_do_operation_fu_372_ap_return;
        else 
            ap_sig_allocacmp_res_p_4_load <= res_p_4;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_4_load_1_assign_proc : process(res_p_4, trunc_ln140_1_reg_1196_pp2_iter3_reg, grp_do_operation_fu_373_ap_return, ap_enable_reg_pp2_iter4, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (trunc_ln140_1_reg_1196_pp2_iter3_reg = ap_const_lv4_4))) then 
            ap_sig_allocacmp_res_p_4_load_1 <= grp_do_operation_fu_373_ap_return;
        else 
            ap_sig_allocacmp_res_p_4_load_1 <= res_p_4;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_4_load_3_assign_proc : process(res_p_4, call_ret_reg_1135_pp0_iter7_reg, icmp_ln128_reg_1170_pp0_iter7_reg, grp_do_operation_fu_373_ap_return, ap_condition_948)
    begin
        if ((ap_const_boolean_1 = ap_condition_948)) then
            if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                ap_sig_allocacmp_res_p_4_load_3 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                ap_sig_allocacmp_res_p_4_load_3 <= grp_do_operation_fu_373_ap_return;
            else 
                ap_sig_allocacmp_res_p_4_load_3 <= res_p_4;
            end if;
        else 
            ap_sig_allocacmp_res_p_4_load_3 <= res_p_4;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_5_load_1_assign_proc : process(res_p_5, call_ret_reg_1135_pp0_iter7_reg, icmp_ln128_reg_1170_pp0_iter7_reg, grp_do_operation_fu_373_ap_return, ap_condition_959)
    begin
        if ((ap_const_boolean_1 = ap_condition_959)) then
            if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                ap_sig_allocacmp_res_p_5_load_1 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                ap_sig_allocacmp_res_p_5_load_1 <= grp_do_operation_fu_373_ap_return;
            else 
                ap_sig_allocacmp_res_p_5_load_1 <= res_p_5;
            end if;
        else 
            ap_sig_allocacmp_res_p_5_load_1 <= res_p_5;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_6_load_assign_proc : process(res_p_6, grp_do_operation_fu_372_ap_return, trunc_ln140_reg_1178_pp1_iter3_reg, ap_enable_reg_pp1_iter4, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_6))) then 
            ap_sig_allocacmp_res_p_6_load <= grp_do_operation_fu_372_ap_return;
        else 
            ap_sig_allocacmp_res_p_6_load <= res_p_6;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_6_load_2_assign_proc : process(res_p_6, call_ret_reg_1135_pp0_iter7_reg, icmp_ln128_reg_1170_pp0_iter7_reg, grp_do_operation_fu_373_ap_return, ap_condition_972)
    begin
        if ((ap_const_boolean_1 = ap_condition_972)) then
            if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                ap_sig_allocacmp_res_p_6_load_2 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                ap_sig_allocacmp_res_p_6_load_2 <= grp_do_operation_fu_373_ap_return;
            else 
                ap_sig_allocacmp_res_p_6_load_2 <= res_p_6;
            end if;
        else 
            ap_sig_allocacmp_res_p_6_load_2 <= res_p_6;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_7_load_1_assign_proc : process(res_p_7, call_ret_reg_1135_pp0_iter7_reg, icmp_ln128_reg_1170_pp0_iter7_reg, grp_do_operation_fu_373_ap_return, ap_condition_982)
    begin
        if ((ap_const_boolean_1 = ap_condition_982)) then
            if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                ap_sig_allocacmp_res_p_7_load_1 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                ap_sig_allocacmp_res_p_7_load_1 <= grp_do_operation_fu_373_ap_return;
            else 
                ap_sig_allocacmp_res_p_7_load_1 <= res_p_7;
            end if;
        else 
            ap_sig_allocacmp_res_p_7_load_1 <= res_p_7;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_8_load_assign_proc : process(res_p_8, grp_do_operation_fu_372_ap_return, trunc_ln140_reg_1178_pp1_iter3_reg, ap_enable_reg_pp1_iter4, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (trunc_ln140_reg_1178_pp1_iter3_reg = ap_const_lv4_8))) then 
            ap_sig_allocacmp_res_p_8_load <= grp_do_operation_fu_372_ap_return;
        else 
            ap_sig_allocacmp_res_p_8_load <= res_p_8;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_8_load_1_assign_proc : process(res_p_8, trunc_ln140_1_reg_1196_pp2_iter3_reg, grp_do_operation_fu_373_ap_return, ap_enable_reg_pp2_iter4, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (trunc_ln140_1_reg_1196_pp2_iter3_reg = ap_const_lv4_8))) then 
            ap_sig_allocacmp_res_p_8_load_1 <= grp_do_operation_fu_373_ap_return;
        else 
            ap_sig_allocacmp_res_p_8_load_1 <= res_p_8;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_8_load_2_assign_proc : process(res_p_8, grp_do_operation_fu_372_ap_return, icmp_ln140_reg_1214_pp3_iter3_reg, ap_enable_reg_pp3_iter4, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (icmp_ln140_reg_1214_pp3_iter3_reg = ap_const_lv1_0))) then 
            ap_sig_allocacmp_res_p_8_load_2 <= grp_do_operation_fu_372_ap_return;
        else 
            ap_sig_allocacmp_res_p_8_load_2 <= res_p_8;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_8_load_4_assign_proc : process(res_p_8, call_ret_reg_1135_pp0_iter7_reg, icmp_ln128_reg_1170_pp0_iter7_reg, grp_do_operation_fu_373_ap_return, ap_condition_1005)
    begin
        if ((ap_const_boolean_1 = ap_condition_1005)) then
            if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                ap_sig_allocacmp_res_p_8_load_4 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                ap_sig_allocacmp_res_p_8_load_4 <= grp_do_operation_fu_373_ap_return;
            else 
                ap_sig_allocacmp_res_p_8_load_4 <= res_p_8;
            end if;
        else 
            ap_sig_allocacmp_res_p_8_load_4 <= res_p_8;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_9_load_1_assign_proc : process(res_p_9, call_ret_reg_1135_pp0_iter7_reg, icmp_ln128_reg_1170_pp0_iter7_reg, grp_do_operation_fu_373_ap_return, ap_condition_1016)
    begin
        if ((ap_const_boolean_1 = ap_condition_1016)) then
            if ((icmp_ln128_reg_1170_pp0_iter7_reg = ap_const_lv1_1)) then 
                ap_sig_allocacmp_res_p_9_load_1 <= call_ret_reg_1135_pp0_iter7_reg;
            elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                ap_sig_allocacmp_res_p_9_load_1 <= grp_do_operation_fu_373_ap_return;
            else 
                ap_sig_allocacmp_res_p_9_load_1 <= res_p_9;
            end if;
        else 
            ap_sig_allocacmp_res_p_9_load_1 <= res_p_9;
        end if; 
    end process;

    args_element_op_fu_643_p4 <= args(15 downto 8);
    args_reduce_op_fu_639_p1 <= args(8 - 1 downto 0);

    grp_do_operation_fu_372_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_block_pp0_stage0_11001_ignoreCallOp79, ap_block_pp1_stage0_11001_ignoreCallOp240, ap_block_pp3_stage0_11001_ignoreCallOp318, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001_ignoreCallOp318) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001_ignoreCallOp240) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp79) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_do_operation_fu_372_ap_ce <= ap_const_logic_1;
        else 
            grp_do_operation_fu_372_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_do_operation_fu_372_ap_start <= grp_do_operation_fu_372_ap_start_reg;

    grp_do_operation_fu_372_op_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, args_reduce_op_reg_1101, args_element_op_reg_1107, args_final_op_reg_1112, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp3_iter1, ap_CS_fsm_state34, ap_block_pp1_stage0, ap_block_pp3_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_do_operation_fu_372_op_read <= args_final_op_reg_1112;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            grp_do_operation_fu_372_op_read <= args_reduce_op_reg_1101;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_do_operation_fu_372_op_read <= args_element_op_reg_1107;
        else 
            grp_do_operation_fu_372_op_read <= "XXXXXXXX";
        end if; 
    end process;


    grp_do_operation_fu_372_x_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, in1_c_data_V_reg_1126, ap_CS_fsm_pp3_stage0, select_ln140_reg_1218, call_ret6_reg_1233, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp3_iter1, ap_CS_fsm_state34, ap_phi_reg_pp1_iter1_phi_ln140_reg_314, ap_block_pp1_stage0, ap_block_pp3_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_do_operation_fu_372_x_read <= call_ret6_reg_1233;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            grp_do_operation_fu_372_x_read <= select_ln140_reg_1218;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_do_operation_fu_372_x_read <= ap_phi_reg_pp1_iter1_phi_ln140_reg_314;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_do_operation_fu_372_x_read <= in1_c_data_V_reg_1126;
        else 
            grp_do_operation_fu_372_x_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_do_operation_fu_372_y_read_assign_proc : process(in2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, reg_621, phi_ln140_2_reg_1182, ap_CS_fsm_pp3_stage0, select_ln140_1_reg_1223, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp3_iter1, ap_CS_fsm_state34, ap_block_pp1_stage0, ap_block_pp3_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_do_operation_fu_372_y_read <= reg_621;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            grp_do_operation_fu_372_y_read <= select_ln140_1_reg_1223;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_do_operation_fu_372_y_read <= phi_ln140_2_reg_1182;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_do_operation_fu_372_y_read <= in2;
        else 
            grp_do_operation_fu_372_y_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_do_operation_fu_373_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp2_stage0, ap_CS_fsm_state33, ap_block_pp0_stage0_11001_ignoreCallOp143, ap_block_pp2_stage0_11001_ignoreCallOp287, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state33) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001_ignoreCallOp287) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp143) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_do_operation_fu_373_ap_ce <= ap_const_logic_1;
        else 
            grp_do_operation_fu_373_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_do_operation_fu_373_ap_start <= grp_do_operation_fu_373_ap_start_reg;

    grp_do_operation_fu_373_x_read_assign_proc : process(ap_block_pp0_stage0, ap_CS_fsm_pp2_stage0, grp_load_fu_501_p1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp2_iter1, ap_CS_fsm_state30, ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265, ap_phi_reg_pp2_iter1_phi_ln140_1_reg_347, ap_block_pp2_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_do_operation_fu_373_x_read <= grp_load_fu_501_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_do_operation_fu_373_x_read <= ap_phi_reg_pp2_iter1_phi_ln140_1_reg_347;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            grp_do_operation_fu_373_x_read <= ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265;
        else 
            grp_do_operation_fu_373_x_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_do_operation_fu_373_y_read_assign_proc : process(ap_block_pp0_stage0, ap_CS_fsm_pp2_stage0, grp_load_fu_468_p1, call_ret_reg_1135, ap_enable_reg_pp0_iter5, phi_ln140_3_reg_1200, ap_enable_reg_pp2_iter1, ap_CS_fsm_state30, ap_block_pp2_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_do_operation_fu_373_y_read <= grp_load_fu_468_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_do_operation_fu_373_y_read <= phi_ln140_3_reg_1200;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            grp_do_operation_fu_373_y_read <= call_ret_reg_1135;
        else 
            grp_do_operation_fu_373_y_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_444_p1_assign_proc : process(res_p_14, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, trunc_ln126_fu_691_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tmp_1_fu_889_p3, trunc_ln140_fu_897_p1, ap_CS_fsm_state18, ap_block_pp1_stage0, ap_sig_allocacmp_res_p_14_load, ap_sig_allocacmp_res_p_14_load_2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_load_fu_444_p1 <= res_p_14;
        elsif ((not((trunc_ln140_fu_897_p1 = ap_const_lv4_C)) and not((trunc_ln140_fu_897_p1 = ap_const_lv4_A)) and not((trunc_ln140_fu_897_p1 = ap_const_lv4_8)) and not((trunc_ln140_fu_897_p1 = ap_const_lv4_6)) and not((trunc_ln140_fu_897_p1 = ap_const_lv4_4)) and not((trunc_ln140_fu_897_p1 = ap_const_lv4_2)) and not((trunc_ln140_fu_897_p1 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_1_fu_889_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_load_fu_444_p1 <= ap_sig_allocacmp_res_p_14_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln126_fu_691_p1 = ap_const_lv4_E) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            grp_load_fu_444_p1 <= ap_sig_allocacmp_res_p_14_load_2;
        else 
            grp_load_fu_444_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_448_p1_assign_proc : process(res_p_13, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, trunc_ln126_fu_691_p1, ap_CS_fsm_state12, ap_sig_allocacmp_res_p_13_load_1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_load_fu_448_p1 <= res_p_13;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln126_fu_691_p1 = ap_const_lv4_D) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            grp_load_fu_448_p1 <= ap_sig_allocacmp_res_p_13_load_1;
        else 
            grp_load_fu_448_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_452_p1_assign_proc : process(res_p_12, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, trunc_ln126_fu_691_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tmp_1_fu_889_p3, trunc_ln140_fu_897_p1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, tmp_2_fu_987_p3, trunc_ln140_1_fu_995_p1, ap_CS_fsm_state24, ap_block_pp1_stage0, ap_block_pp2_stage0, ap_sig_allocacmp_res_p_12_load_1, ap_sig_allocacmp_res_p_12_load, ap_sig_allocacmp_res_p_12_load_3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_load_fu_452_p1 <= res_p_12;
        elsif ((not((trunc_ln140_1_fu_995_p1 = ap_const_lv4_8)) and not((trunc_ln140_1_fu_995_p1 = ap_const_lv4_4)) and not((trunc_ln140_1_fu_995_p1 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (tmp_2_fu_987_p3 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_load_fu_452_p1 <= ap_sig_allocacmp_res_p_12_load_1;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln140_fu_897_p1 = ap_const_lv4_C) and (tmp_1_fu_889_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_load_fu_452_p1 <= ap_sig_allocacmp_res_p_12_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln126_fu_691_p1 = ap_const_lv4_C) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            grp_load_fu_452_p1 <= ap_sig_allocacmp_res_p_12_load_3;
        else 
            grp_load_fu_452_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_456_p1_assign_proc : process(res_p_11, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, trunc_ln126_fu_691_p1, ap_CS_fsm_state12, ap_sig_allocacmp_res_p_11_load_1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_load_fu_456_p1 <= res_p_11;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln126_fu_691_p1 = ap_const_lv4_B) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            grp_load_fu_456_p1 <= ap_sig_allocacmp_res_p_11_load_1;
        else 
            grp_load_fu_456_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_460_p1_assign_proc : process(res_p_10, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, trunc_ln126_fu_691_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tmp_1_fu_889_p3, trunc_ln140_fu_897_p1, ap_CS_fsm_state18, ap_block_pp1_stage0, ap_sig_allocacmp_res_p_10_load, ap_sig_allocacmp_res_p_10_load_2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_load_fu_460_p1 <= res_p_10;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln140_fu_897_p1 = ap_const_lv4_A) and (tmp_1_fu_889_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_load_fu_460_p1 <= ap_sig_allocacmp_res_p_10_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln126_fu_691_p1 = ap_const_lv4_A) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            grp_load_fu_460_p1 <= ap_sig_allocacmp_res_p_10_load_2;
        else 
            grp_load_fu_460_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_464_p1_assign_proc : process(res_p_9, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, trunc_ln126_fu_691_p1, ap_CS_fsm_state12, ap_sig_allocacmp_res_p_9_load_1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_load_fu_464_p1 <= res_p_9;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln126_fu_691_p1 = ap_const_lv4_9) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            grp_load_fu_464_p1 <= ap_sig_allocacmp_res_p_9_load_1;
        else 
            grp_load_fu_464_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_468_p1_assign_proc : process(res_p_8, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, trunc_ln126_fu_691_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tmp_1_fu_889_p3, trunc_ln140_fu_897_p1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, tmp_2_fu_987_p3, trunc_ln140_1_fu_995_p1, tmp_3_fu_1049_p3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state30, ap_block_pp1_stage0, ap_block_pp3_stage0, ap_block_pp2_stage0, ap_sig_allocacmp_res_p_8_load_2, ap_sig_allocacmp_res_p_8_load_1, ap_sig_allocacmp_res_p_8_load, ap_sig_allocacmp_res_p_8_load_4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_load_fu_468_p1 <= res_p_8;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (tmp_3_fu_1049_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            grp_load_fu_468_p1 <= ap_sig_allocacmp_res_p_8_load_2;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (trunc_ln140_1_fu_995_p1 = ap_const_lv4_8) and (tmp_2_fu_987_p3 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_load_fu_468_p1 <= ap_sig_allocacmp_res_p_8_load_1;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln140_fu_897_p1 = ap_const_lv4_8) and (tmp_1_fu_889_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_load_fu_468_p1 <= ap_sig_allocacmp_res_p_8_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln126_fu_691_p1 = ap_const_lv4_8) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            grp_load_fu_468_p1 <= ap_sig_allocacmp_res_p_8_load_4;
        else 
            grp_load_fu_468_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_473_p1_assign_proc : process(res_p_7, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, trunc_ln126_fu_691_p1, ap_CS_fsm_state12, ap_sig_allocacmp_res_p_7_load_1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_load_fu_473_p1 <= res_p_7;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln126_fu_691_p1 = ap_const_lv4_7) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            grp_load_fu_473_p1 <= ap_sig_allocacmp_res_p_7_load_1;
        else 
            grp_load_fu_473_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_477_p1_assign_proc : process(res_p_6, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, trunc_ln126_fu_691_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tmp_1_fu_889_p3, trunc_ln140_fu_897_p1, ap_CS_fsm_state18, ap_block_pp1_stage0, ap_sig_allocacmp_res_p_6_load, ap_sig_allocacmp_res_p_6_load_2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_load_fu_477_p1 <= res_p_6;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln140_fu_897_p1 = ap_const_lv4_6) and (tmp_1_fu_889_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_load_fu_477_p1 <= ap_sig_allocacmp_res_p_6_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln126_fu_691_p1 = ap_const_lv4_6) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            grp_load_fu_477_p1 <= ap_sig_allocacmp_res_p_6_load_2;
        else 
            grp_load_fu_477_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_481_p1_assign_proc : process(res_p_5, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, trunc_ln126_fu_691_p1, ap_CS_fsm_state12, ap_sig_allocacmp_res_p_5_load_1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_load_fu_481_p1 <= res_p_5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln126_fu_691_p1 = ap_const_lv4_5) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            grp_load_fu_481_p1 <= ap_sig_allocacmp_res_p_5_load_1;
        else 
            grp_load_fu_481_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_485_p1_assign_proc : process(res_p_4, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, trunc_ln126_fu_691_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tmp_1_fu_889_p3, trunc_ln140_fu_897_p1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, tmp_2_fu_987_p3, trunc_ln140_1_fu_995_p1, ap_CS_fsm_state24, ap_block_pp1_stage0, ap_block_pp2_stage0, ap_sig_allocacmp_res_p_4_load_1, ap_sig_allocacmp_res_p_4_load, ap_sig_allocacmp_res_p_4_load_3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_load_fu_485_p1 <= res_p_4;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (trunc_ln140_1_fu_995_p1 = ap_const_lv4_4) and (tmp_2_fu_987_p3 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_load_fu_485_p1 <= ap_sig_allocacmp_res_p_4_load_1;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln140_fu_897_p1 = ap_const_lv4_4) and (tmp_1_fu_889_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_load_fu_485_p1 <= ap_sig_allocacmp_res_p_4_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln126_fu_691_p1 = ap_const_lv4_4) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            grp_load_fu_485_p1 <= ap_sig_allocacmp_res_p_4_load_3;
        else 
            grp_load_fu_485_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_489_p1_assign_proc : process(res_p_3, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, trunc_ln126_fu_691_p1, ap_CS_fsm_state12, ap_sig_allocacmp_res_p_3_load_1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_load_fu_489_p1 <= res_p_3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln126_fu_691_p1 = ap_const_lv4_3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            grp_load_fu_489_p1 <= ap_sig_allocacmp_res_p_3_load_1;
        else 
            grp_load_fu_489_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_493_p1_assign_proc : process(res_p_2, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, trunc_ln126_fu_691_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tmp_1_fu_889_p3, trunc_ln140_fu_897_p1, ap_CS_fsm_state18, ap_block_pp1_stage0, ap_sig_allocacmp_res_p_2_load, ap_sig_allocacmp_res_p_2_load_2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_load_fu_493_p1 <= res_p_2;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln140_fu_897_p1 = ap_const_lv4_2) and (tmp_1_fu_889_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_load_fu_493_p1 <= ap_sig_allocacmp_res_p_2_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln126_fu_691_p1 = ap_const_lv4_2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            grp_load_fu_493_p1 <= ap_sig_allocacmp_res_p_2_load_2;
        else 
            grp_load_fu_493_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_497_p1_assign_proc : process(res_p_1, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, trunc_ln126_fu_691_p1, ap_CS_fsm_state12, ap_sig_allocacmp_res_p_1_load)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_load_fu_497_p1 <= res_p_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln126_fu_691_p1 = ap_const_lv4_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            grp_load_fu_497_p1 <= ap_sig_allocacmp_res_p_1_load;
        else 
            grp_load_fu_497_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_501_p1_assign_proc : process(res_p_0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, trunc_ln126_fu_691_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tmp_1_fu_889_p3, trunc_ln140_fu_897_p1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, tmp_2_fu_987_p3, trunc_ln140_1_fu_995_p1, tmp_3_fu_1049_p3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state30, ap_block_pp1_stage0, ap_block_pp3_stage0, ap_block_pp2_stage0, ap_sig_allocacmp_res_p_0_load_2, ap_sig_allocacmp_res_p_0_load_1, ap_sig_allocacmp_res_p_0_load, ap_sig_allocacmp_res_p_0_load_4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_load_fu_501_p1 <= res_p_0;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (tmp_3_fu_1049_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            grp_load_fu_501_p1 <= ap_sig_allocacmp_res_p_0_load_2;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (trunc_ln140_1_fu_995_p1 = ap_const_lv4_0) and (tmp_2_fu_987_p3 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_load_fu_501_p1 <= ap_sig_allocacmp_res_p_0_load_1;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln140_fu_897_p1 = ap_const_lv4_0) and (tmp_1_fu_889_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_load_fu_501_p1 <= ap_sig_allocacmp_res_p_0_load;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln126_fu_691_p1 = ap_const_lv4_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            grp_load_fu_501_p1 <= ap_sig_allocacmp_res_p_0_load_4;
        else 
            grp_load_fu_501_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_506_p1_assign_proc : process(res_p_15, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, trunc_ln126_fu_691_p1, ap_CS_fsm_state12, ap_sig_allocacmp_res_p_15_load_1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_load_fu_506_p1 <= res_p_15;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln126_fu_691_p1 = ap_const_lv4_F) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            grp_load_fu_506_p1 <= ap_sig_allocacmp_res_p_15_load_1;
        else 
            grp_load_fu_506_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln128_fu_731_p2 <= "1" when (tmp_fu_721_p4 = ap_const_lv28_0) else "0";
    icmp_ln130_fu_695_p2 <= "1" when (ap_phi_mux_p_phi_fu_247_p4 = ap_const_lv32_F) else "0";
    icmp_ln140_1_fu_1081_p2 <= "1" when (or_ln140_2_fu_1061_p2 = ap_const_lv4_4) else "0";
    icmp_ln140_fu_1067_p2 <= "1" when (trunc_ln140_2_fu_1057_p1 = ap_const_lv4_0) else "0";
    idxprom_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(args_element_op_fu_643_p4),64));
    in1_c_last_V_fu_672_p1 <= in1_s_TLAST_int_regslice;

    in1_s_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, in1_s_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in1_s_TDATA_blk_n <= in1_s_TVALID_int_regslice;
        else 
            in1_s_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in1_s_TREADY <= regslice_both_in1_s_V_data_V_U_ack_in;

    in1_s_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in1_s_TREADY_int_regslice <= ap_const_logic_1;
        else 
            in1_s_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    in2_s_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, is_binary_load_reg_1122, in2_s_TVALID_int_regslice)
    begin
        if (((is_binary_load_reg_1122 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in2_s_TDATA_blk_n <= in2_s_TVALID_int_regslice;
        else 
            in2_s_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in2_s_TREADY <= regslice_both_in2_s_V_data_V_U_ack_in;

    in2_s_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, is_binary_load_reg_1122, ap_block_pp0_stage0_11001)
    begin
        if (((is_binary_load_reg_1122 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in2_s_TREADY_int_regslice <= ap_const_logic_1;
        else 
            in2_s_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    is_binary_address0 <= idxprom_fu_663_p1(4 - 1 downto 0);

    is_binary_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            is_binary_ce0 <= ap_const_logic_1;
        else 
            is_binary_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    n_1_fu_715_p2 <= std_logic_vector(unsigned(ap_phi_mux_n_phi_fu_258_p4) + unsigned(ap_const_lv32_1));
    or_ln140_2_fu_1061_p2 <= (trunc_ln140_2_fu_1057_p1 or ap_const_lv4_4);
    p_1_fu_707_p3 <= 
        ap_const_lv32_0 when (icmp_ln130_fu_695_p2(0) = '1') else 
        add_ln130_fu_701_p2;
    phi_ln140_2_fu_907_p17 <= (trunc_ln140_fu_897_p1 or ap_const_lv4_1);
    phi_ln140_3_fu_1005_p17 <= (trunc_ln140_1_fu_995_p1 or ap_const_lv4_2);
    select_ln140_1_fu_1087_p3 <= 
        reg_603 when (icmp_ln140_1_fu_1081_p2(0) = '1') else 
        reg_557;
    select_ln140_fu_1073_p3 <= 
        grp_load_fu_501_p1 when (icmp_ln140_fu_1067_p2(0) = '1') else 
        grp_load_fu_468_p1;
    tmp_1_fu_889_p3 <= i_reg_303(4 downto 4);
    tmp_2_fu_987_p3 <= i_1_reg_336(4 downto 4);
    tmp_3_fu_1049_p3 <= i_2_reg_361(4 downto 4);
    tmp_fu_721_p4 <= ap_phi_mux_n_phi_fu_258_p4(31 downto 4);
    trunc_ln126_fu_691_p1 <= ap_phi_mux_p_phi_fu_247_p4(4 - 1 downto 0);
    trunc_ln140_1_fu_995_p1 <= i_1_reg_336(4 - 1 downto 0);
    trunc_ln140_2_fu_1057_p1 <= i_2_reg_361(4 - 1 downto 0);
    trunc_ln140_fu_897_p1 <= i_reg_303(4 - 1 downto 0);
end behav;
