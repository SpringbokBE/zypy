-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sad_reduce_all_f4 is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in1_s_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    in1_s_TVALID : IN STD_LOGIC;
    in1_s_TREADY : OUT STD_LOGIC;
    in1_s_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    in1_s_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    in1_s_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in1_s_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in1_s_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    in1_s_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    in2_s_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    in2_s_TVALID : IN STD_LOGIC;
    in2_s_TREADY : OUT STD_LOGIC;
    in2_s_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    in2_s_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    in2_s_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in2_s_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in2_s_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    in2_s_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of sad_reduce_all_f4 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "sad_reduce_all_f4_sad_reduce_all_f4,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.423540,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2568,HLS_SYN_LUT=2605,HLS_VERSION=2020_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal res_p_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_p_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal in1_s_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal in2_s_TDATA_blk_n : STD_LOGIC;
    signal p_reg_198 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_reg_209 : STD_LOGIC_VECTOR (31 downto 0);
    signal UnifiedRetVal_i_reg_220 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_reg_258 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state14_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state18_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state20_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal i_1_reg_313 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state22_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state23_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state24_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state25_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state26_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_state27_pp2_stage0_iter5 : BOOLEAN;
    signal ap_block_state28_pp2_stage0_iter6 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal i_2_reg_352 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_load_fu_376_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_442 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal trunc_ln65_fu_598_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal tmp_1_fu_765_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln79_fu_773_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal grp_load_fu_380_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_449 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_load_fu_384_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_455 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal tmp_2_fu_813_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln79_1_fu_821_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal grp_load_fu_388_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_462 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_392_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_468 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_396_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_475 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_400_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal grp_load_fu_405_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_489 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_409_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_495 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_413_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_502 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_417_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_508 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_421_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_515 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_425_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_521 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_429_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_528 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_433_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_438_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_542 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_363_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_548 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter5 : STD_LOGIC := '0';
    signal ap_block_state30_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state31_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state32_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_state33_pp3_stage0_iter3 : BOOLEAN;
    signal ap_block_state34_pp3_stage0_iter4 : BOOLEAN;
    signal ap_block_state35_pp3_stage0_iter5 : BOOLEAN;
    signal ap_block_state36_pp3_stage0_iter6 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal in1_c_last_V_fu_580_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal in1_c_last_V_reg_889 : STD_LOGIC_VECTOR (0 downto 0);
    signal in1_c_last_V_reg_889_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in1_c_last_V_reg_889_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in1_c_last_V_reg_889_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in1_c_last_V_reg_889_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln64_fu_588_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln64_1_fu_593_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln65_reg_903 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln65_reg_903_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln65_reg_903_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln65_reg_903_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln65_reg_903_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln65_reg_903_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln65_reg_903_pp0_iter9_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_1_fu_614_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_reg_907 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_1_fu_622_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_1_reg_912 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal trunc_ln368_fu_632_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln368_reg_917 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln67_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_reg_922 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_reg_922_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_reg_922_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_reg_922_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_reg_922_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_reg_922_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal absdiff_fu_659_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal absdiff_reg_927 : STD_LOGIC_VECTOR (31 downto 0);
    signal absdiff_reg_927_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal absdiff_reg_927_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal absdiff_reg_927_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal absdiff_reg_927_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_367_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_reg_933 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln79_reg_942 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln79_reg_942_pp1_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln79_reg_942_pp1_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln79_reg_942_pp1_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln79_reg_942_pp1_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln79_reg_942_pp1_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln79_fu_777_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln78_fu_783_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln79_1_reg_959 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln79_1_reg_959_pp2_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln79_1_reg_959_pp2_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln79_1_reg_959_pp2_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln79_1_reg_959_pp2_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln79_1_reg_959_pp2_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln79_1_fu_825_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln78_1_fu_831_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_837_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal select_ln79_fu_861_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln79_reg_976 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln79_1_fu_869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_1_reg_981 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_1_reg_981_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_1_reg_981_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_1_reg_981_pp3_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_1_reg_981_pp3_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_1_reg_981_pp3_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln79_1_fu_875_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln79_1_reg_985 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln78_2_fu_883_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state14 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state22 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter6 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state30 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter6 : STD_LOGIC := '0';
    signal ap_phi_mux_p_phi_fu_202_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_n_phi_fu_213_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_220 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_UnifiedRetVal_i_reg_220 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_UnifiedRetVal_i_reg_220 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_UnifiedRetVal_i_reg_220 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln79_reg_269 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln79_reg_269 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln79_2_reg_291 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter0_phi_ln79_1_reg_324 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter1_phi_ln79_1_reg_324 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter0_phi_ln79_3_reg_338 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter1_phi_ln79_3_reg_338 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_sig_allocacmp_res_p_0_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal ap_sig_allocacmp_res_p_0_load_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_sig_allocacmp_res_p_0_load_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal select_ln67_fu_664_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_0_load_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_1_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_2_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_2_load_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_3_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_4_load_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_4_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_4_load_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_5_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_6_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_6_load_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_7_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_8_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_8_load_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_8_load_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_8_load_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_9_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_10_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_10_load_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_11_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_12_load_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_12_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_12_load_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_13_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_14_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_14_load_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_res_p_15_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_363_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_363_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_367_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln69_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln69_fu_608_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_fu_628_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_636_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Result_s_fu_652_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln79_2_fu_845_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln79_2_fu_849_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln79_fu_855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_363_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp1_stage0_00001 : BOOLEAN;
    signal ap_block_pp2_stage0_00001 : BOOLEAN;
    signal ap_block_pp3_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal grp_fu_363_ce : STD_LOGIC;
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal grp_fu_367_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal regslice_both_in1_s_V_data_V_U_apdone_blk : STD_LOGIC;
    signal in1_s_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal in1_s_TVALID_int_regslice : STD_LOGIC;
    signal in1_s_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_in1_s_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in1_s_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal in1_s_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_in1_s_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in1_s_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in1_s_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal in1_s_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_in1_s_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in1_s_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in1_s_V_user_V_U_apdone_blk : STD_LOGIC;
    signal in1_s_TUSER_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in1_s_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in1_s_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in1_s_V_last_V_U_apdone_blk : STD_LOGIC;
    signal in1_s_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in1_s_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in1_s_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in1_s_V_id_V_U_apdone_blk : STD_LOGIC;
    signal in1_s_TID_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in1_s_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in1_s_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in1_s_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal in1_s_TDEST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in1_s_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in1_s_V_dest_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in2_s_V_data_V_U_apdone_blk : STD_LOGIC;
    signal in2_s_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal in2_s_TVALID_int_regslice : STD_LOGIC;
    signal in2_s_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_in2_s_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in2_s_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal in2_s_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_in2_s_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in2_s_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in2_s_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal in2_s_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_in2_s_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in2_s_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in2_s_V_user_V_U_apdone_blk : STD_LOGIC;
    signal in2_s_TUSER_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in2_s_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in2_s_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in2_s_V_last_V_U_apdone_blk : STD_LOGIC;
    signal in2_s_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in2_s_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in2_s_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in2_s_V_id_V_U_apdone_blk : STD_LOGIC;
    signal in2_s_TID_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in2_s_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in2_s_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in2_s_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal in2_s_TDEST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in2_s_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in2_s_V_dest_V_U_ack_in : STD_LOGIC;
    signal ap_condition_245 : BOOLEAN;
    signal ap_condition_213 : BOOLEAN;
    signal ap_condition_778 : BOOLEAN;
    signal ap_condition_804 : BOOLEAN;
    signal ap_condition_280 : BOOLEAN;
    signal ap_condition_292 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;
    signal ap_return : STD_LOGIC_VECTOR (31 downto 0);

    component sad_reduce_all_f4_faddfsub_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sad_reduce_all_f4_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sad_reduce_all_f4_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_return : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sad_reduce_all_f4_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    control_s_axi_U : component sad_reduce_all_f4_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ap_return => reg_548);

    faddfsub_32ns_32ns_32_5_full_dsp_1_U1 : component sad_reduce_all_f4_faddfsub_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_363_p0,
        din1 => grp_fu_363_p1,
        opcode => grp_fu_363_opcode,
        ce => grp_fu_363_ce,
        dout => grp_fu_363_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U2 : component sad_reduce_all_f4_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => UnifiedRetVal_i_reg_220,
        din1 => grp_fu_367_p1,
        ce => grp_fu_367_ce,
        dout => grp_fu_367_p2);

    regslice_both_in1_s_V_data_V_U : component sad_reduce_all_f4_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in1_s_TDATA,
        vld_in => in1_s_TVALID,
        ack_in => regslice_both_in1_s_V_data_V_U_ack_in,
        data_out => in1_s_TDATA_int_regslice,
        vld_out => in1_s_TVALID_int_regslice,
        ack_out => in1_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in1_s_V_data_V_U_apdone_blk);

    regslice_both_in1_s_V_keep_V_U : component sad_reduce_all_f4_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in1_s_TKEEP,
        vld_in => in1_s_TVALID,
        ack_in => regslice_both_in1_s_V_keep_V_U_ack_in,
        data_out => in1_s_TKEEP_int_regslice,
        vld_out => regslice_both_in1_s_V_keep_V_U_vld_out,
        ack_out => in1_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in1_s_V_keep_V_U_apdone_blk);

    regslice_both_in1_s_V_strb_V_U : component sad_reduce_all_f4_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in1_s_TSTRB,
        vld_in => in1_s_TVALID,
        ack_in => regslice_both_in1_s_V_strb_V_U_ack_in,
        data_out => in1_s_TSTRB_int_regslice,
        vld_out => regslice_both_in1_s_V_strb_V_U_vld_out,
        ack_out => in1_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in1_s_V_strb_V_U_apdone_blk);

    regslice_both_in1_s_V_user_V_U : component sad_reduce_all_f4_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in1_s_TUSER,
        vld_in => in1_s_TVALID,
        ack_in => regslice_both_in1_s_V_user_V_U_ack_in,
        data_out => in1_s_TUSER_int_regslice,
        vld_out => regslice_both_in1_s_V_user_V_U_vld_out,
        ack_out => in1_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in1_s_V_user_V_U_apdone_blk);

    regslice_both_in1_s_V_last_V_U : component sad_reduce_all_f4_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in1_s_TLAST,
        vld_in => in1_s_TVALID,
        ack_in => regslice_both_in1_s_V_last_V_U_ack_in,
        data_out => in1_s_TLAST_int_regslice,
        vld_out => regslice_both_in1_s_V_last_V_U_vld_out,
        ack_out => in1_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in1_s_V_last_V_U_apdone_blk);

    regslice_both_in1_s_V_id_V_U : component sad_reduce_all_f4_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in1_s_TID,
        vld_in => in1_s_TVALID,
        ack_in => regslice_both_in1_s_V_id_V_U_ack_in,
        data_out => in1_s_TID_int_regslice,
        vld_out => regslice_both_in1_s_V_id_V_U_vld_out,
        ack_out => in1_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in1_s_V_id_V_U_apdone_blk);

    regslice_both_in1_s_V_dest_V_U : component sad_reduce_all_f4_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in1_s_TDEST,
        vld_in => in1_s_TVALID,
        ack_in => regslice_both_in1_s_V_dest_V_U_ack_in,
        data_out => in1_s_TDEST_int_regslice,
        vld_out => regslice_both_in1_s_V_dest_V_U_vld_out,
        ack_out => in1_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in1_s_V_dest_V_U_apdone_blk);

    regslice_both_in2_s_V_data_V_U : component sad_reduce_all_f4_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in2_s_TDATA,
        vld_in => in2_s_TVALID,
        ack_in => regslice_both_in2_s_V_data_V_U_ack_in,
        data_out => in2_s_TDATA_int_regslice,
        vld_out => in2_s_TVALID_int_regslice,
        ack_out => in2_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in2_s_V_data_V_U_apdone_blk);

    regslice_both_in2_s_V_keep_V_U : component sad_reduce_all_f4_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in2_s_TKEEP,
        vld_in => in2_s_TVALID,
        ack_in => regslice_both_in2_s_V_keep_V_U_ack_in,
        data_out => in2_s_TKEEP_int_regslice,
        vld_out => regslice_both_in2_s_V_keep_V_U_vld_out,
        ack_out => in2_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in2_s_V_keep_V_U_apdone_blk);

    regslice_both_in2_s_V_strb_V_U : component sad_reduce_all_f4_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in2_s_TSTRB,
        vld_in => in2_s_TVALID,
        ack_in => regslice_both_in2_s_V_strb_V_U_ack_in,
        data_out => in2_s_TSTRB_int_regslice,
        vld_out => regslice_both_in2_s_V_strb_V_U_vld_out,
        ack_out => in2_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in2_s_V_strb_V_U_apdone_blk);

    regslice_both_in2_s_V_user_V_U : component sad_reduce_all_f4_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in2_s_TUSER,
        vld_in => in2_s_TVALID,
        ack_in => regslice_both_in2_s_V_user_V_U_ack_in,
        data_out => in2_s_TUSER_int_regslice,
        vld_out => regslice_both_in2_s_V_user_V_U_vld_out,
        ack_out => in2_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in2_s_V_user_V_U_apdone_blk);

    regslice_both_in2_s_V_last_V_U : component sad_reduce_all_f4_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in2_s_TLAST,
        vld_in => in2_s_TVALID,
        ack_in => regslice_both_in2_s_V_last_V_U_ack_in,
        data_out => in2_s_TLAST_int_regslice,
        vld_out => regslice_both_in2_s_V_last_V_U_vld_out,
        ack_out => in2_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in2_s_V_last_V_U_apdone_blk);

    regslice_both_in2_s_V_id_V_U : component sad_reduce_all_f4_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in2_s_TID,
        vld_in => in2_s_TVALID,
        ack_in => regslice_both_in2_s_V_id_V_U_ack_in,
        data_out => in2_s_TID_int_regslice,
        vld_out => regslice_both_in2_s_V_id_V_U_vld_out,
        ack_out => in2_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in2_s_V_id_V_U_apdone_blk);

    regslice_both_in2_s_V_dest_V_U : component sad_reduce_all_f4_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in2_s_TDEST,
        vld_in => in2_s_TVALID,
        ack_in => regslice_both_in2_s_V_dest_V_U_ack_in,
        data_out => in2_s_TDEST_int_regslice,
        vld_out => regslice_both_in2_s_V_dest_V_U_vld_out,
        ack_out => in2_s_TREADY_int_regslice,
        apdone_blk => regslice_both_in2_s_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp0_flush_enable)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state14) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state14)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state14);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state22) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state22)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state22);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                    ap_enable_reg_pp2_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state30) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state30)) then 
                        ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state30);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                    ap_enable_reg_pp3_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                if ((trunc_ln65_fu_598_p1 = ap_const_lv4_F)) then 
                    ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_438_p1;
                elsif ((trunc_ln65_fu_598_p1 = ap_const_lv4_E)) then 
                    ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_376_p1;
                elsif ((trunc_ln65_fu_598_p1 = ap_const_lv4_D)) then 
                    ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_380_p1;
                elsif ((trunc_ln65_fu_598_p1 = ap_const_lv4_C)) then 
                    ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_384_p1;
                elsif ((trunc_ln65_fu_598_p1 = ap_const_lv4_B)) then 
                    ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_388_p1;
                elsif ((trunc_ln65_fu_598_p1 = ap_const_lv4_A)) then 
                    ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_392_p1;
                elsif ((trunc_ln65_fu_598_p1 = ap_const_lv4_9)) then 
                    ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_396_p1;
                elsif ((trunc_ln65_fu_598_p1 = ap_const_lv4_8)) then 
                    ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_400_p1;
                elsif ((trunc_ln65_fu_598_p1 = ap_const_lv4_7)) then 
                    ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_405_p1;
                elsif ((trunc_ln65_fu_598_p1 = ap_const_lv4_6)) then 
                    ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_409_p1;
                elsif ((trunc_ln65_fu_598_p1 = ap_const_lv4_5)) then 
                    ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_413_p1;
                elsif ((trunc_ln65_fu_598_p1 = ap_const_lv4_4)) then 
                    ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_417_p1;
                elsif ((trunc_ln65_fu_598_p1 = ap_const_lv4_3)) then 
                    ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_421_p1;
                elsif ((trunc_ln65_fu_598_p1 = ap_const_lv4_2)) then 
                    ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_425_p1;
                elsif ((trunc_ln65_fu_598_p1 = ap_const_lv4_1)) then 
                    ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_429_p1;
                elsif ((trunc_ln65_fu_598_p1 = ap_const_lv4_0)) then 
                    ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_433_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= ap_phi_reg_pp0_iter3_UnifiedRetVal_i_reg_220;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_213)) then
                if ((ap_const_boolean_1 = ap_condition_245)) then 
                    ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291 <= grp_load_fu_376_p1;
                elsif (((trunc_ln79_fu_773_p1 = ap_const_lv4_C) and (tmp_1_fu_765_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291 <= grp_load_fu_384_p1;
                elsif (((trunc_ln79_fu_773_p1 = ap_const_lv4_A) and (tmp_1_fu_765_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291 <= grp_load_fu_392_p1;
                elsif (((trunc_ln79_fu_773_p1 = ap_const_lv4_8) and (tmp_1_fu_765_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291 <= grp_load_fu_400_p1;
                elsif (((trunc_ln79_fu_773_p1 = ap_const_lv4_6) and (tmp_1_fu_765_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291 <= grp_load_fu_409_p1;
                elsif (((trunc_ln79_fu_773_p1 = ap_const_lv4_4) and (tmp_1_fu_765_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291 <= grp_load_fu_417_p1;
                elsif (((trunc_ln79_fu_773_p1 = ap_const_lv4_2) and (tmp_1_fu_765_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291 <= grp_load_fu_425_p1;
                elsif (((trunc_ln79_fu_773_p1 = ap_const_lv4_0) and (tmp_1_fu_765_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291 <= grp_load_fu_433_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291 <= ap_phi_reg_pp1_iter0_phi_ln79_2_reg_291;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter1_phi_ln79_reg_269_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_213)) then
                if (((or_ln79_fu_777_p2 = ap_const_lv4_1) and (tmp_1_fu_765_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln79_reg_269 <= reg_528;
                elsif ((ap_const_boolean_1 = ap_condition_778)) then 
                    ap_phi_reg_pp1_iter1_phi_ln79_reg_269 <= reg_542;
                elsif (((or_ln79_fu_777_p2 = ap_const_lv4_D) and (tmp_1_fu_765_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln79_reg_269 <= reg_449;
                elsif (((or_ln79_fu_777_p2 = ap_const_lv4_B) and (tmp_1_fu_765_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln79_reg_269 <= reg_462;
                elsif (((or_ln79_fu_777_p2 = ap_const_lv4_9) and (tmp_1_fu_765_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln79_reg_269 <= reg_475;
                elsif (((or_ln79_fu_777_p2 = ap_const_lv4_7) and (tmp_1_fu_765_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln79_reg_269 <= reg_489;
                elsif (((or_ln79_fu_777_p2 = ap_const_lv4_5) and (tmp_1_fu_765_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln79_reg_269 <= reg_502;
                elsif (((or_ln79_fu_777_p2 = ap_const_lv4_3) and (tmp_1_fu_765_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln79_reg_269 <= reg_515;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter1_phi_ln79_reg_269 <= ap_phi_reg_pp1_iter0_phi_ln79_reg_269;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp2_iter1_phi_ln79_1_reg_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_280)) then
                if (((or_ln79_1_fu_825_p2 = ap_const_lv4_2) and (tmp_2_fu_813_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp2_iter1_phi_ln79_1_reg_324 <= reg_521;
                elsif ((ap_const_boolean_1 = ap_condition_804)) then 
                    ap_phi_reg_pp2_iter1_phi_ln79_1_reg_324 <= reg_442;
                elsif (((or_ln79_1_fu_825_p2 = ap_const_lv4_A) and (tmp_2_fu_813_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp2_iter1_phi_ln79_1_reg_324 <= reg_468;
                elsif (((or_ln79_1_fu_825_p2 = ap_const_lv4_6) and (tmp_2_fu_813_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp2_iter1_phi_ln79_1_reg_324 <= reg_495;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp2_iter1_phi_ln79_1_reg_324 <= ap_phi_reg_pp2_iter0_phi_ln79_1_reg_324;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp2_iter1_phi_ln79_3_reg_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_280)) then
                if ((ap_const_boolean_1 = ap_condition_292)) then 
                    ap_phi_reg_pp2_iter1_phi_ln79_3_reg_338 <= grp_load_fu_384_p1;
                elsif (((trunc_ln79_1_fu_821_p1 = ap_const_lv4_8) and (tmp_2_fu_813_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp2_iter1_phi_ln79_3_reg_338 <= grp_load_fu_400_p1;
                elsif (((trunc_ln79_1_fu_821_p1 = ap_const_lv4_4) and (tmp_2_fu_813_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp2_iter1_phi_ln79_3_reg_338 <= grp_load_fu_417_p1;
                elsif (((trunc_ln79_1_fu_821_p1 = ap_const_lv4_0) and (tmp_2_fu_813_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp2_iter1_phi_ln79_3_reg_338 <= grp_load_fu_433_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp2_iter1_phi_ln79_3_reg_338 <= ap_phi_reg_pp2_iter0_phi_ln79_3_reg_338;
                end if;
            end if; 
        end if;
    end process;

    i_1_reg_313_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                i_1_reg_313 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (tmp_2_fu_813_p3 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                i_1_reg_313 <= add_ln78_1_fu_831_p2;
            end if; 
        end if;
    end process;

    i_2_reg_352_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                i_2_reg_352 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (tmp_3_fu_837_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                i_2_reg_352 <= add_ln78_2_fu_883_p2;
            end if; 
        end if;
    end process;

    i_reg_258_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                i_reg_258 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (tmp_1_fu_765_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                i_reg_258 <= add_ln78_fu_783_p2;
            end if; 
        end if;
    end process;

    n_reg_209_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (in1_c_last_V_reg_889_pp0_iter4_reg = ap_const_lv1_0))) then 
                n_reg_209 <= n_1_reg_912;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                n_reg_209 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_reg_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (in1_c_last_V_reg_889_pp0_iter3_reg = ap_const_lv1_0))) then 
                p_reg_198 <= p_1_reg_907;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_reg_198 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    res_p_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_0))) then 
                res_p_0 <= select_ln67_fu_664_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state42) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter6 = ap_const_logic_1) and (icmp_ln79_1_reg_981_pp3_iter5_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1) and (trunc_ln79_1_reg_959_pp2_iter5_reg = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_0)))) then 
                res_p_0 <= reg_548;
            end if; 
        end if;
    end process;

    res_p_10_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_A))) then 
                res_p_10 <= select_ln67_fu_664_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_A))) then 
                res_p_10 <= reg_548;
            end if; 
        end if;
    end process;

    res_p_12_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_C))) then 
                res_p_12 <= select_ln67_fu_664_p3;
            elsif (((not((trunc_ln79_1_reg_959_pp2_iter5_reg = ap_const_lv4_8)) and not((trunc_ln79_1_reg_959_pp2_iter5_reg = ap_const_lv4_4)) and not((trunc_ln79_1_reg_959_pp2_iter5_reg = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_C)))) then 
                res_p_12 <= reg_548;
            end if; 
        end if;
    end process;

    res_p_14_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_E))) then 
                res_p_14 <= select_ln67_fu_664_p3;
            elsif ((not((trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_C)) and not((trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_A)) and not((trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_8)) and not((trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_6)) and not((trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_4)) and not((trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_2)) and not((trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
                res_p_14 <= reg_548;
            end if; 
        end if;
    end process;

    res_p_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_2))) then 
                res_p_2 <= select_ln67_fu_664_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_2))) then 
                res_p_2 <= reg_548;
            end if; 
        end if;
    end process;

    res_p_4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_4))) then 
                res_p_4 <= select_ln67_fu_664_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1) and (trunc_ln79_1_reg_959_pp2_iter5_reg = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_4)))) then 
                res_p_4 <= reg_548;
            end if; 
        end if;
    end process;

    res_p_6_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_6))) then 
                res_p_6 <= select_ln67_fu_664_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_6))) then 
                res_p_6 <= reg_548;
            end if; 
        end if;
    end process;

    res_p_8_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_8))) then 
                res_p_8 <= select_ln67_fu_664_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter6 = ap_const_logic_1) and (icmp_ln79_1_reg_981_pp3_iter5_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1) and (trunc_ln79_1_reg_959_pp2_iter5_reg = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_8)))) then 
                res_p_8 <= reg_548;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                UnifiedRetVal_i_reg_220 <= ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220;
                n_1_reg_912 <= n_1_fu_622_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                    absdiff_reg_927(30 downto 0) <= absdiff_fu_659_p1(30 downto 0);
                    absdiff_reg_927_pp0_iter6_reg(30 downto 0) <= absdiff_reg_927(30 downto 0);
                    absdiff_reg_927_pp0_iter7_reg(30 downto 0) <= absdiff_reg_927_pp0_iter6_reg(30 downto 0);
                    absdiff_reg_927_pp0_iter8_reg(30 downto 0) <= absdiff_reg_927_pp0_iter7_reg(30 downto 0);
                    absdiff_reg_927_pp0_iter9_reg(30 downto 0) <= absdiff_reg_927_pp0_iter8_reg(30 downto 0);
                icmp_ln67_reg_922 <= icmp_ln67_fu_646_p2;
                icmp_ln67_reg_922_pp0_iter5_reg <= icmp_ln67_reg_922;
                icmp_ln67_reg_922_pp0_iter6_reg <= icmp_ln67_reg_922_pp0_iter5_reg;
                icmp_ln67_reg_922_pp0_iter7_reg <= icmp_ln67_reg_922_pp0_iter6_reg;
                icmp_ln67_reg_922_pp0_iter8_reg <= icmp_ln67_reg_922_pp0_iter7_reg;
                icmp_ln67_reg_922_pp0_iter9_reg <= icmp_ln67_reg_922_pp0_iter8_reg;
                in1_c_last_V_reg_889_pp0_iter2_reg <= in1_c_last_V_reg_889_pp0_iter1_reg;
                in1_c_last_V_reg_889_pp0_iter3_reg <= in1_c_last_V_reg_889_pp0_iter2_reg;
                in1_c_last_V_reg_889_pp0_iter4_reg <= in1_c_last_V_reg_889_pp0_iter3_reg;
                trunc_ln368_reg_917 <= trunc_ln368_fu_632_p1;
                trunc_ln65_reg_903 <= trunc_ln65_fu_598_p1;
                trunc_ln65_reg_903_pp0_iter4_reg <= trunc_ln65_reg_903;
                trunc_ln65_reg_903_pp0_iter5_reg <= trunc_ln65_reg_903_pp0_iter4_reg;
                trunc_ln65_reg_903_pp0_iter6_reg <= trunc_ln65_reg_903_pp0_iter5_reg;
                trunc_ln65_reg_903_pp0_iter7_reg <= trunc_ln65_reg_903_pp0_iter6_reg;
                trunc_ln65_reg_903_pp0_iter8_reg <= trunc_ln65_reg_903_pp0_iter7_reg;
                trunc_ln65_reg_903_pp0_iter9_reg <= trunc_ln65_reg_903_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln67_reg_922_pp0_iter8_reg = ap_const_lv1_0))) then
                add_reg_933 <= grp_fu_367_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_UnifiedRetVal_i_reg_220 <= ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_220;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_UnifiedRetVal_i_reg_220 <= ap_phi_reg_pp0_iter1_UnifiedRetVal_i_reg_220;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_UnifiedRetVal_i_reg_220 <= ap_phi_reg_pp0_iter2_UnifiedRetVal_i_reg_220;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (tmp_3_fu_837_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                icmp_ln79_1_reg_981 <= icmp_ln79_1_fu_869_p2;
                select_ln79_1_reg_985 <= select_ln79_1_fu_875_p3;
                select_ln79_reg_976 <= select_ln79_fu_861_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                icmp_ln79_1_reg_981_pp3_iter1_reg <= icmp_ln79_1_reg_981;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp3_stage0_11001)) then
                icmp_ln79_1_reg_981_pp3_iter2_reg <= icmp_ln79_1_reg_981_pp3_iter1_reg;
                icmp_ln79_1_reg_981_pp3_iter3_reg <= icmp_ln79_1_reg_981_pp3_iter2_reg;
                icmp_ln79_1_reg_981_pp3_iter4_reg <= icmp_ln79_1_reg_981_pp3_iter3_reg;
                icmp_ln79_1_reg_981_pp3_iter5_reg <= icmp_ln79_1_reg_981_pp3_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                in1_c_last_V_reg_889 <= in1_s_TLAST_int_regslice;
                in1_c_last_V_reg_889_pp0_iter1_reg <= in1_c_last_V_reg_889;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                p_1_reg_907 <= p_1_fu_614_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) or (not((trunc_ln79_fu_773_p1 = ap_const_lv4_C)) and not((trunc_ln79_fu_773_p1 = ap_const_lv4_A)) and not((trunc_ln79_fu_773_p1 = ap_const_lv4_8)) and not((trunc_ln79_fu_773_p1 = ap_const_lv4_6)) and not((trunc_ln79_fu_773_p1 = ap_const_lv4_4)) and not((trunc_ln79_fu_773_p1 = ap_const_lv4_2)) and not((trunc_ln79_fu_773_p1 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (tmp_1_fu_765_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln65_fu_598_p1 = ap_const_lv4_E) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                reg_442 <= grp_load_fu_376_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln65_fu_598_p1 = ap_const_lv4_D) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                reg_449 <= grp_load_fu_380_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state29) or (not((trunc_ln79_1_fu_821_p1 = ap_const_lv4_8)) and not((trunc_ln79_1_fu_821_p1 = ap_const_lv4_4)) and not((trunc_ln79_1_fu_821_p1 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (tmp_2_fu_813_p3 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln79_fu_773_p1 = ap_const_lv4_C) and (tmp_1_fu_765_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln65_fu_598_p1 = ap_const_lv4_C) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                reg_455 <= grp_load_fu_384_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln65_fu_598_p1 = ap_const_lv4_B) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                reg_462 <= grp_load_fu_388_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln79_fu_773_p1 = ap_const_lv4_A) and (tmp_1_fu_765_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln65_fu_598_p1 = ap_const_lv4_A) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                reg_468 <= grp_load_fu_392_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln65_fu_598_p1 = ap_const_lv4_9) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                reg_475 <= grp_load_fu_396_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln65_fu_598_p1 = ap_const_lv4_7) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                reg_489 <= grp_load_fu_405_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln79_fu_773_p1 = ap_const_lv4_6) and (tmp_1_fu_765_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln65_fu_598_p1 = ap_const_lv4_6) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                reg_495 <= grp_load_fu_409_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln65_fu_598_p1 = ap_const_lv4_5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                reg_502 <= grp_load_fu_413_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state29) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (trunc_ln79_1_fu_821_p1 = ap_const_lv4_4) and (tmp_2_fu_813_p3 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln79_fu_773_p1 = ap_const_lv4_4) and (tmp_1_fu_765_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln65_fu_598_p1 = ap_const_lv4_4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                reg_508 <= grp_load_fu_417_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln65_fu_598_p1 = ap_const_lv4_3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                reg_515 <= grp_load_fu_421_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln79_fu_773_p1 = ap_const_lv4_2) and (tmp_1_fu_765_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln65_fu_598_p1 = ap_const_lv4_2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                reg_521 <= grp_load_fu_425_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln65_fu_598_p1 = ap_const_lv4_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                reg_528 <= grp_load_fu_429_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln65_fu_598_p1 = ap_const_lv4_F) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                reg_542 <= grp_load_fu_438_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state41) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter5 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter5 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1)))) then
                reg_548 <= grp_fu_363_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_1))) then
                res_p_1 <= select_ln67_fu_664_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_B))) then
                res_p_11 <= select_ln67_fu_664_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_D))) then
                res_p_13 <= select_ln67_fu_664_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_F))) then
                res_p_15 <= select_ln67_fu_664_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_3))) then
                res_p_3 <= select_ln67_fu_664_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_5))) then
                res_p_5 <= select_ln67_fu_664_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_7))) then
                res_p_7 <= select_ln67_fu_664_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_9))) then
                res_p_9 <= select_ln67_fu_664_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (tmp_2_fu_813_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                trunc_ln79_1_reg_959 <= trunc_ln79_1_fu_821_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                trunc_ln79_1_reg_959_pp2_iter1_reg <= trunc_ln79_1_reg_959;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                trunc_ln79_1_reg_959_pp2_iter2_reg <= trunc_ln79_1_reg_959_pp2_iter1_reg;
                trunc_ln79_1_reg_959_pp2_iter3_reg <= trunc_ln79_1_reg_959_pp2_iter2_reg;
                trunc_ln79_1_reg_959_pp2_iter4_reg <= trunc_ln79_1_reg_959_pp2_iter3_reg;
                trunc_ln79_1_reg_959_pp2_iter5_reg <= trunc_ln79_1_reg_959_pp2_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (tmp_1_fu_765_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                trunc_ln79_reg_942 <= trunc_ln79_fu_773_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                trunc_ln79_reg_942_pp1_iter1_reg <= trunc_ln79_reg_942;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                trunc_ln79_reg_942_pp1_iter2_reg <= trunc_ln79_reg_942_pp1_iter1_reg;
                trunc_ln79_reg_942_pp1_iter3_reg <= trunc_ln79_reg_942_pp1_iter2_reg;
                trunc_ln79_reg_942_pp1_iter4_reg <= trunc_ln79_reg_942_pp1_iter3_reg;
                trunc_ln79_reg_942_pp1_iter5_reg <= trunc_ln79_reg_942_pp1_iter4_reg;
            end if;
        end if;
    end process;
    absdiff_reg_927(31) <= '0';
    absdiff_reg_927_pp0_iter6_reg(31) <= '0';
    absdiff_reg_927_pp0_iter7_reg(31) <= '0';
    absdiff_reg_927_pp0_iter8_reg(31) <= '0';
    absdiff_reg_927_pp0_iter9_reg(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp1_iter0, tmp_1_fu_765_p3, ap_enable_reg_pp2_iter0, tmp_2_fu_813_p3, ap_enable_reg_pp1_iter5, ap_enable_reg_pp2_iter5, ap_enable_reg_pp3_iter5, tmp_3_fu_837_p3, ap_enable_reg_pp3_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter6, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter6, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (tmp_1_fu_765_p3 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (tmp_1_fu_765_p3 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (tmp_2_fu_813_p3 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1) and (ap_enable_reg_pp2_iter5 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1) and (ap_enable_reg_pp2_iter5 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (tmp_2_fu_813_p3 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (tmp_3_fu_837_p3 = ap_const_lv1_1))) and not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter6 = ap_const_logic_1) and (ap_enable_reg_pp3_iter5 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter6 = ap_const_logic_1) and (ap_enable_reg_pp3_iter5 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (tmp_3_fu_837_p3 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    absdiff_fu_659_p1 <= p_Result_s_fu_652_p3;
    add_ln69_fu_608_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_phi_fu_202_p4) + unsigned(ap_const_lv32_1));
    add_ln78_1_fu_831_p2 <= std_logic_vector(unsigned(i_1_reg_313) + unsigned(ap_const_lv5_4));
    add_ln78_2_fu_883_p2 <= std_logic_vector(unsigned(i_2_reg_352) + unsigned(ap_const_lv5_8));
    add_ln78_fu_783_p2 <= std_logic_vector(unsigned(i_reg_258) + unsigned(ap_const_lv5_2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(2);
    ap_CS_fsm_state21 <= ap_CS_fsm(4);
    ap_CS_fsm_state29 <= ap_CS_fsm(6);
    ap_CS_fsm_state37 <= ap_CS_fsm(8);
    ap_CS_fsm_state38 <= ap_CS_fsm(9);
    ap_CS_fsm_state39 <= ap_CS_fsm(10);
    ap_CS_fsm_state40 <= ap_CS_fsm(11);
    ap_CS_fsm_state41 <= ap_CS_fsm(12);
    ap_CS_fsm_state42 <= ap_CS_fsm(13);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_00001_assign_proc : process(ap_enable_reg_pp0_iter0, in1_s_TVALID_int_regslice, in2_s_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((in2_s_TVALID_int_regslice = ap_const_logic_0) or (in1_s_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter0, in1_s_TVALID_int_regslice, in2_s_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((in2_s_TVALID_int_regslice = ap_const_logic_0) or (in1_s_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, in1_s_TVALID_int_regslice, in2_s_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((in2_s_TVALID_int_regslice = ap_const_logic_0) or (in1_s_TVALID_int_regslice = ap_const_logic_0)));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp2_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp2_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter0_assign_proc : process(in1_s_TVALID_int_regslice, in2_s_TVALID_int_regslice)
    begin
                ap_block_state2_pp0_stage0_iter0 <= ((in2_s_TVALID_int_regslice = ap_const_logic_0) or (in1_s_TVALID_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state30_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp3_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp3_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp3_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp3_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_213_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0)
    begin
                ap_condition_213 <= ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_245_assign_proc : process(tmp_1_fu_765_p3, trunc_ln79_fu_773_p1)
    begin
                ap_condition_245 <= (not((trunc_ln79_fu_773_p1 = ap_const_lv4_C)) and not((trunc_ln79_fu_773_p1 = ap_const_lv4_A)) and not((trunc_ln79_fu_773_p1 = ap_const_lv4_8)) and not((trunc_ln79_fu_773_p1 = ap_const_lv4_6)) and not((trunc_ln79_fu_773_p1 = ap_const_lv4_4)) and not((trunc_ln79_fu_773_p1 = ap_const_lv4_2)) and not((trunc_ln79_fu_773_p1 = ap_const_lv4_0)) and (tmp_1_fu_765_p3 = ap_const_lv1_0));
    end process;


    ap_condition_280_assign_proc : process(ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0)
    begin
                ap_condition_280 <= ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0));
    end process;


    ap_condition_292_assign_proc : process(tmp_2_fu_813_p3, trunc_ln79_1_fu_821_p1)
    begin
                ap_condition_292 <= (not((trunc_ln79_1_fu_821_p1 = ap_const_lv4_8)) and not((trunc_ln79_1_fu_821_p1 = ap_const_lv4_4)) and not((trunc_ln79_1_fu_821_p1 = ap_const_lv4_0)) and (tmp_2_fu_813_p3 = ap_const_lv1_0));
    end process;


    ap_condition_778_assign_proc : process(tmp_1_fu_765_p3, or_ln79_fu_777_p2)
    begin
                ap_condition_778 <= (not((or_ln79_fu_777_p2 = ap_const_lv4_1)) and not((or_ln79_fu_777_p2 = ap_const_lv4_D)) and not((or_ln79_fu_777_p2 = ap_const_lv4_B)) and not((or_ln79_fu_777_p2 = ap_const_lv4_9)) and not((or_ln79_fu_777_p2 = ap_const_lv4_7)) and not((or_ln79_fu_777_p2 = ap_const_lv4_5)) and not((or_ln79_fu_777_p2 = ap_const_lv4_3)) and (tmp_1_fu_765_p3 = ap_const_lv1_0));
    end process;


    ap_condition_804_assign_proc : process(tmp_2_fu_813_p3, or_ln79_1_fu_825_p2)
    begin
                ap_condition_804 <= (not((or_ln79_1_fu_825_p2 = ap_const_lv4_2)) and not((or_ln79_1_fu_825_p2 = ap_const_lv4_A)) and not((or_ln79_1_fu_825_p2 = ap_const_lv4_6)) and (tmp_2_fu_813_p3 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_flush_enable_assign_proc : process(ap_CS_fsm_pp0_stage0, in1_c_last_V_fu_580_p1, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (in1_c_last_V_fu_580_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_pp0_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp0_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state14_assign_proc : process(tmp_1_fu_765_p3)
    begin
        if ((tmp_1_fu_765_p3 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state14 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state22_assign_proc : process(tmp_2_fu_813_p3)
    begin
        if ((tmp_2_fu_813_p3 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state22 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state22 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state30_assign_proc : process(tmp_3_fu_837_p3)
    begin
        if ((tmp_3_fu_837_p3 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state30 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state30 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter6)
    begin
        if (((ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter5, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter4, ap_enable_reg_pp2_iter6)
    begin
        if (((ap_enable_reg_pp2_iter6 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter5 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter5, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter3, ap_enable_reg_pp3_iter4, ap_enable_reg_pp3_iter6)
    begin
        if (((ap_enable_reg_pp3_iter6 = ap_const_logic_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter5 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_n_phi_fu_213_p4_assign_proc : process(ap_block_pp0_stage0, n_reg_209, in1_c_last_V_reg_889_pp0_iter4_reg, n_1_reg_912, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (in1_c_last_V_reg_889_pp0_iter4_reg = ap_const_lv1_0))) then 
            ap_phi_mux_n_phi_fu_213_p4 <= n_1_reg_912;
        else 
            ap_phi_mux_n_phi_fu_213_p4 <= n_reg_209;
        end if; 
    end process;


    ap_phi_mux_p_phi_fu_202_p4_assign_proc : process(ap_block_pp0_stage0, p_reg_198, in1_c_last_V_reg_889_pp0_iter3_reg, p_1_reg_907, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (in1_c_last_V_reg_889_pp0_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_p_phi_fu_202_p4 <= p_1_reg_907;
        else 
            ap_phi_mux_p_phi_fu_202_p4 <= p_reg_198;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_220 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln79_2_reg_291 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln79_reg_269 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp2_iter0_phi_ln79_1_reg_324 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp2_iter0_phi_ln79_3_reg_338 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_allocacmp_res_p_0_load_assign_proc : process(res_p_0, reg_548, icmp_ln79_1_reg_981_pp3_iter5_reg, ap_enable_reg_pp3_iter6, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter6 = ap_const_logic_1) and (icmp_ln79_1_reg_981_pp3_iter5_reg = ap_const_lv1_1))) then 
            ap_sig_allocacmp_res_p_0_load <= reg_548;
        else 
            ap_sig_allocacmp_res_p_0_load <= res_p_0;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_0_load_2_assign_proc : process(res_p_0, reg_548, trunc_ln79_reg_942_pp1_iter5_reg, ap_enable_reg_pp1_iter6, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_0))) then 
            ap_sig_allocacmp_res_p_0_load_2 <= reg_548;
        else 
            ap_sig_allocacmp_res_p_0_load_2 <= res_p_0;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_0_load_3_assign_proc : process(res_p_0, reg_548, trunc_ln79_1_reg_959_pp2_iter5_reg, ap_enable_reg_pp2_iter6, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1) and (trunc_ln79_1_reg_959_pp2_iter5_reg = ap_const_lv4_0))) then 
            ap_sig_allocacmp_res_p_0_load_3 <= reg_548;
        else 
            ap_sig_allocacmp_res_p_0_load_3 <= res_p_0;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_0_load_4_assign_proc : process(res_p_0, ap_block_pp0_stage0, trunc_ln65_reg_903_pp0_iter9_reg, ap_enable_reg_pp0_iter10, select_ln67_fu_664_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_0))) then 
            ap_sig_allocacmp_res_p_0_load_4 <= select_ln67_fu_664_p3;
        else 
            ap_sig_allocacmp_res_p_0_load_4 <= res_p_0;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_10_load_1_assign_proc : process(res_p_10, reg_548, trunc_ln79_reg_942_pp1_iter5_reg, ap_enable_reg_pp1_iter6, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_A))) then 
            ap_sig_allocacmp_res_p_10_load_1 <= reg_548;
        else 
            ap_sig_allocacmp_res_p_10_load_1 <= res_p_10;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_10_load_2_assign_proc : process(res_p_10, ap_block_pp0_stage0, trunc_ln65_reg_903_pp0_iter9_reg, ap_enable_reg_pp0_iter10, select_ln67_fu_664_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_A))) then 
            ap_sig_allocacmp_res_p_10_load_2 <= select_ln67_fu_664_p3;
        else 
            ap_sig_allocacmp_res_p_10_load_2 <= res_p_10;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_11_load_1_assign_proc : process(res_p_11, ap_block_pp0_stage0, trunc_ln65_reg_903_pp0_iter9_reg, ap_enable_reg_pp0_iter10, select_ln67_fu_664_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_B))) then 
            ap_sig_allocacmp_res_p_11_load_1 <= select_ln67_fu_664_p3;
        else 
            ap_sig_allocacmp_res_p_11_load_1 <= res_p_11;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_12_load_1_assign_proc : process(res_p_12, reg_548, trunc_ln79_reg_942_pp1_iter5_reg, ap_enable_reg_pp1_iter6, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_C))) then 
            ap_sig_allocacmp_res_p_12_load_1 <= reg_548;
        else 
            ap_sig_allocacmp_res_p_12_load_1 <= res_p_12;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_12_load_2_assign_proc : process(res_p_12, reg_548, trunc_ln79_1_reg_959_pp2_iter5_reg, ap_enable_reg_pp2_iter6, ap_block_pp2_stage0)
    begin
        if ((not((trunc_ln79_1_reg_959_pp2_iter5_reg = ap_const_lv4_8)) and not((trunc_ln79_1_reg_959_pp2_iter5_reg = ap_const_lv4_4)) and not((trunc_ln79_1_reg_959_pp2_iter5_reg = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1))) then 
            ap_sig_allocacmp_res_p_12_load_2 <= reg_548;
        else 
            ap_sig_allocacmp_res_p_12_load_2 <= res_p_12;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_12_load_3_assign_proc : process(res_p_12, ap_block_pp0_stage0, trunc_ln65_reg_903_pp0_iter9_reg, ap_enable_reg_pp0_iter10, select_ln67_fu_664_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_C))) then 
            ap_sig_allocacmp_res_p_12_load_3 <= select_ln67_fu_664_p3;
        else 
            ap_sig_allocacmp_res_p_12_load_3 <= res_p_12;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_13_load_1_assign_proc : process(res_p_13, ap_block_pp0_stage0, trunc_ln65_reg_903_pp0_iter9_reg, ap_enable_reg_pp0_iter10, select_ln67_fu_664_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_D))) then 
            ap_sig_allocacmp_res_p_13_load_1 <= select_ln67_fu_664_p3;
        else 
            ap_sig_allocacmp_res_p_13_load_1 <= res_p_13;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_14_load_1_assign_proc : process(res_p_14, reg_548, trunc_ln79_reg_942_pp1_iter5_reg, ap_enable_reg_pp1_iter6, ap_block_pp1_stage0)
    begin
        if ((not((trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_C)) and not((trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_A)) and not((trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_8)) and not((trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_6)) and not((trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_4)) and not((trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_2)) and not((trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
            ap_sig_allocacmp_res_p_14_load_1 <= reg_548;
        else 
            ap_sig_allocacmp_res_p_14_load_1 <= res_p_14;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_14_load_2_assign_proc : process(res_p_14, ap_block_pp0_stage0, trunc_ln65_reg_903_pp0_iter9_reg, ap_enable_reg_pp0_iter10, select_ln67_fu_664_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_E))) then 
            ap_sig_allocacmp_res_p_14_load_2 <= select_ln67_fu_664_p3;
        else 
            ap_sig_allocacmp_res_p_14_load_2 <= res_p_14;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_15_load_1_assign_proc : process(res_p_15, ap_block_pp0_stage0, trunc_ln65_reg_903_pp0_iter9_reg, ap_enable_reg_pp0_iter10, select_ln67_fu_664_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_F))) then 
            ap_sig_allocacmp_res_p_15_load_1 <= select_ln67_fu_664_p3;
        else 
            ap_sig_allocacmp_res_p_15_load_1 <= res_p_15;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_1_load_1_assign_proc : process(res_p_1, ap_block_pp0_stage0, trunc_ln65_reg_903_pp0_iter9_reg, ap_enable_reg_pp0_iter10, select_ln67_fu_664_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_1))) then 
            ap_sig_allocacmp_res_p_1_load_1 <= select_ln67_fu_664_p3;
        else 
            ap_sig_allocacmp_res_p_1_load_1 <= res_p_1;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_2_load_1_assign_proc : process(res_p_2, reg_548, trunc_ln79_reg_942_pp1_iter5_reg, ap_enable_reg_pp1_iter6, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_2))) then 
            ap_sig_allocacmp_res_p_2_load_1 <= reg_548;
        else 
            ap_sig_allocacmp_res_p_2_load_1 <= res_p_2;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_2_load_2_assign_proc : process(res_p_2, ap_block_pp0_stage0, trunc_ln65_reg_903_pp0_iter9_reg, ap_enable_reg_pp0_iter10, select_ln67_fu_664_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_2))) then 
            ap_sig_allocacmp_res_p_2_load_2 <= select_ln67_fu_664_p3;
        else 
            ap_sig_allocacmp_res_p_2_load_2 <= res_p_2;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_3_load_1_assign_proc : process(res_p_3, ap_block_pp0_stage0, trunc_ln65_reg_903_pp0_iter9_reg, ap_enable_reg_pp0_iter10, select_ln67_fu_664_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_3))) then 
            ap_sig_allocacmp_res_p_3_load_1 <= select_ln67_fu_664_p3;
        else 
            ap_sig_allocacmp_res_p_3_load_1 <= res_p_3;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_4_load_1_assign_proc : process(res_p_4, reg_548, trunc_ln79_reg_942_pp1_iter5_reg, ap_enable_reg_pp1_iter6, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_4))) then 
            ap_sig_allocacmp_res_p_4_load_1 <= reg_548;
        else 
            ap_sig_allocacmp_res_p_4_load_1 <= res_p_4;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_4_load_2_assign_proc : process(res_p_4, reg_548, trunc_ln79_1_reg_959_pp2_iter5_reg, ap_enable_reg_pp2_iter6, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1) and (trunc_ln79_1_reg_959_pp2_iter5_reg = ap_const_lv4_4))) then 
            ap_sig_allocacmp_res_p_4_load_2 <= reg_548;
        else 
            ap_sig_allocacmp_res_p_4_load_2 <= res_p_4;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_4_load_3_assign_proc : process(res_p_4, ap_block_pp0_stage0, trunc_ln65_reg_903_pp0_iter9_reg, ap_enable_reg_pp0_iter10, select_ln67_fu_664_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_4))) then 
            ap_sig_allocacmp_res_p_4_load_3 <= select_ln67_fu_664_p3;
        else 
            ap_sig_allocacmp_res_p_4_load_3 <= res_p_4;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_5_load_1_assign_proc : process(res_p_5, ap_block_pp0_stage0, trunc_ln65_reg_903_pp0_iter9_reg, ap_enable_reg_pp0_iter10, select_ln67_fu_664_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_5))) then 
            ap_sig_allocacmp_res_p_5_load_1 <= select_ln67_fu_664_p3;
        else 
            ap_sig_allocacmp_res_p_5_load_1 <= res_p_5;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_6_load_1_assign_proc : process(res_p_6, reg_548, trunc_ln79_reg_942_pp1_iter5_reg, ap_enable_reg_pp1_iter6, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_6))) then 
            ap_sig_allocacmp_res_p_6_load_1 <= reg_548;
        else 
            ap_sig_allocacmp_res_p_6_load_1 <= res_p_6;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_6_load_2_assign_proc : process(res_p_6, ap_block_pp0_stage0, trunc_ln65_reg_903_pp0_iter9_reg, ap_enable_reg_pp0_iter10, select_ln67_fu_664_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_6))) then 
            ap_sig_allocacmp_res_p_6_load_2 <= select_ln67_fu_664_p3;
        else 
            ap_sig_allocacmp_res_p_6_load_2 <= res_p_6;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_7_load_1_assign_proc : process(res_p_7, ap_block_pp0_stage0, trunc_ln65_reg_903_pp0_iter9_reg, ap_enable_reg_pp0_iter10, select_ln67_fu_664_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_7))) then 
            ap_sig_allocacmp_res_p_7_load_1 <= select_ln67_fu_664_p3;
        else 
            ap_sig_allocacmp_res_p_7_load_1 <= res_p_7;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_8_load_assign_proc : process(res_p_8, reg_548, icmp_ln79_1_reg_981_pp3_iter5_reg, ap_enable_reg_pp3_iter6, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter6 = ap_const_logic_1) and (icmp_ln79_1_reg_981_pp3_iter5_reg = ap_const_lv1_0))) then 
            ap_sig_allocacmp_res_p_8_load <= reg_548;
        else 
            ap_sig_allocacmp_res_p_8_load <= res_p_8;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_8_load_2_assign_proc : process(res_p_8, reg_548, trunc_ln79_reg_942_pp1_iter5_reg, ap_enable_reg_pp1_iter6, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (trunc_ln79_reg_942_pp1_iter5_reg = ap_const_lv4_8))) then 
            ap_sig_allocacmp_res_p_8_load_2 <= reg_548;
        else 
            ap_sig_allocacmp_res_p_8_load_2 <= res_p_8;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_8_load_3_assign_proc : process(res_p_8, reg_548, trunc_ln79_1_reg_959_pp2_iter5_reg, ap_enable_reg_pp2_iter6, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1) and (trunc_ln79_1_reg_959_pp2_iter5_reg = ap_const_lv4_8))) then 
            ap_sig_allocacmp_res_p_8_load_3 <= reg_548;
        else 
            ap_sig_allocacmp_res_p_8_load_3 <= res_p_8;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_8_load_4_assign_proc : process(res_p_8, ap_block_pp0_stage0, trunc_ln65_reg_903_pp0_iter9_reg, ap_enable_reg_pp0_iter10, select_ln67_fu_664_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_8))) then 
            ap_sig_allocacmp_res_p_8_load_4 <= select_ln67_fu_664_p3;
        else 
            ap_sig_allocacmp_res_p_8_load_4 <= res_p_8;
        end if; 
    end process;


    ap_sig_allocacmp_res_p_9_load_1_assign_proc : process(res_p_9, ap_block_pp0_stage0, trunc_ln65_reg_903_pp0_iter9_reg, ap_enable_reg_pp0_iter10, select_ln67_fu_664_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln65_reg_903_pp0_iter9_reg = ap_const_lv4_9))) then 
            ap_sig_allocacmp_res_p_9_load_1 <= select_ln67_fu_664_p3;
        else 
            ap_sig_allocacmp_res_p_9_load_1 <= res_p_9;
        end if; 
    end process;

    bitcast_ln64_1_fu_593_p1 <= in2_s_TDATA_int_regslice;
    bitcast_ln64_fu_588_p1 <= in1_s_TDATA_int_regslice;
    data_V_fu_628_p1 <= grp_fu_363_p2;

    grp_fu_363_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp2_stage0, ap_CS_fsm_state37, ap_block_pp3_stage0_11001, ap_CS_fsm_state41, ap_CS_fsm_pp3_stage0, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_363_ce <= ap_const_logic_1;
        else 
            grp_fu_363_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_363_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp2_stage0, ap_CS_fsm_state37, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, ap_block_pp1_stage0_00001, ap_block_pp2_stage0_00001, ap_block_pp3_stage0_00001, ap_block_pp0_stage0_00001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_363_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or ((ap_const_boolean_0 = ap_block_pp3_stage0_00001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_00001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_00001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            grp_fu_363_opcode <= ap_const_lv2_0;
        else 
            grp_fu_363_opcode <= "XX";
        end if; 
    end process;


    grp_fu_363_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp2_stage0, ap_CS_fsm_state37, grp_load_fu_433_p1, bitcast_ln64_fu_588_p1, ap_CS_fsm_pp3_stage0, select_ln79_1_reg_985, ap_enable_reg_pp1_iter1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291, ap_phi_reg_pp2_iter1_phi_ln79_3_reg_338, ap_block_pp3_stage0, ap_block_pp2_stage0, ap_block_pp1_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_363_p0 <= grp_load_fu_433_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            grp_fu_363_p0 <= select_ln79_1_reg_985;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_363_p0 <= ap_phi_reg_pp2_iter1_phi_ln79_3_reg_338;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_fu_363_p0 <= ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_363_p0 <= bitcast_ln64_fu_588_p1;
        else 
            grp_fu_363_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_363_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp2_stage0, grp_load_fu_400_p1, ap_CS_fsm_state37, bitcast_ln64_1_fu_593_p1, ap_CS_fsm_pp3_stage0, select_ln79_reg_976, ap_enable_reg_pp1_iter1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, ap_phi_reg_pp1_iter1_phi_ln79_reg_269, ap_phi_reg_pp2_iter1_phi_ln79_1_reg_324, ap_block_pp3_stage0, ap_block_pp2_stage0, ap_block_pp1_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_363_p1 <= grp_load_fu_400_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            grp_fu_363_p1 <= select_ln79_reg_976;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_363_p1 <= ap_phi_reg_pp2_iter1_phi_ln79_1_reg_324;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_fu_363_p1 <= ap_phi_reg_pp1_iter1_phi_ln79_reg_269;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_363_p1 <= bitcast_ln64_1_fu_593_p1;
        else 
            grp_fu_363_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_367_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_367_ce <= ap_const_logic_1;
        else 
            grp_fu_367_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_367_p1 <= p_Result_s_fu_652_p3;

    grp_load_fu_376_p1_assign_proc : process(res_p_14, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, trunc_ln65_fu_598_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tmp_1_fu_765_p3, trunc_ln79_fu_773_p1, ap_CS_fsm_state21, ap_block_pp1_stage0, ap_sig_allocacmp_res_p_14_load_1, ap_sig_allocacmp_res_p_14_load_2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_load_fu_376_p1 <= res_p_14;
        elsif ((not((trunc_ln79_fu_773_p1 = ap_const_lv4_C)) and not((trunc_ln79_fu_773_p1 = ap_const_lv4_A)) and not((trunc_ln79_fu_773_p1 = ap_const_lv4_8)) and not((trunc_ln79_fu_773_p1 = ap_const_lv4_6)) and not((trunc_ln79_fu_773_p1 = ap_const_lv4_4)) and not((trunc_ln79_fu_773_p1 = ap_const_lv4_2)) and not((trunc_ln79_fu_773_p1 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_1_fu_765_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_load_fu_376_p1 <= ap_sig_allocacmp_res_p_14_load_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln65_fu_598_p1 = ap_const_lv4_E) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_load_fu_376_p1 <= ap_sig_allocacmp_res_p_14_load_2;
        else 
            grp_load_fu_376_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_380_p1_assign_proc : process(res_p_13, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, trunc_ln65_fu_598_p1, ap_CS_fsm_state13, ap_sig_allocacmp_res_p_13_load_1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_load_fu_380_p1 <= res_p_13;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln65_fu_598_p1 = ap_const_lv4_D) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_load_fu_380_p1 <= ap_sig_allocacmp_res_p_13_load_1;
        else 
            grp_load_fu_380_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_384_p1_assign_proc : process(res_p_12, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, trunc_ln65_fu_598_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tmp_1_fu_765_p3, trunc_ln79_fu_773_p1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, tmp_2_fu_813_p3, trunc_ln79_1_fu_821_p1, ap_CS_fsm_state29, ap_block_pp2_stage0, ap_block_pp1_stage0, ap_sig_allocacmp_res_p_12_load_2, ap_sig_allocacmp_res_p_12_load_1, ap_sig_allocacmp_res_p_12_load_3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_load_fu_384_p1 <= res_p_12;
        elsif ((not((trunc_ln79_1_fu_821_p1 = ap_const_lv4_8)) and not((trunc_ln79_1_fu_821_p1 = ap_const_lv4_4)) and not((trunc_ln79_1_fu_821_p1 = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (tmp_2_fu_813_p3 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_load_fu_384_p1 <= ap_sig_allocacmp_res_p_12_load_2;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln79_fu_773_p1 = ap_const_lv4_C) and (tmp_1_fu_765_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_load_fu_384_p1 <= ap_sig_allocacmp_res_p_12_load_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln65_fu_598_p1 = ap_const_lv4_C) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_load_fu_384_p1 <= ap_sig_allocacmp_res_p_12_load_3;
        else 
            grp_load_fu_384_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_388_p1_assign_proc : process(res_p_11, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, trunc_ln65_fu_598_p1, ap_CS_fsm_state13, ap_sig_allocacmp_res_p_11_load_1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_load_fu_388_p1 <= res_p_11;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln65_fu_598_p1 = ap_const_lv4_B) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_load_fu_388_p1 <= ap_sig_allocacmp_res_p_11_load_1;
        else 
            grp_load_fu_388_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_392_p1_assign_proc : process(res_p_10, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, trunc_ln65_fu_598_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tmp_1_fu_765_p3, trunc_ln79_fu_773_p1, ap_CS_fsm_state21, ap_block_pp1_stage0, ap_sig_allocacmp_res_p_10_load_1, ap_sig_allocacmp_res_p_10_load_2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_load_fu_392_p1 <= res_p_10;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln79_fu_773_p1 = ap_const_lv4_A) and (tmp_1_fu_765_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_load_fu_392_p1 <= ap_sig_allocacmp_res_p_10_load_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln65_fu_598_p1 = ap_const_lv4_A) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_load_fu_392_p1 <= ap_sig_allocacmp_res_p_10_load_2;
        else 
            grp_load_fu_392_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_396_p1_assign_proc : process(res_p_9, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, trunc_ln65_fu_598_p1, ap_CS_fsm_state13, ap_sig_allocacmp_res_p_9_load_1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_load_fu_396_p1 <= res_p_9;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln65_fu_598_p1 = ap_const_lv4_9) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_load_fu_396_p1 <= ap_sig_allocacmp_res_p_9_load_1;
        else 
            grp_load_fu_396_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_400_p1_assign_proc : process(res_p_8, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, trunc_ln65_fu_598_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tmp_1_fu_765_p3, trunc_ln79_fu_773_p1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, tmp_2_fu_813_p3, trunc_ln79_1_fu_821_p1, ap_CS_fsm_state37, tmp_3_fu_837_p3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_block_pp3_stage0, ap_block_pp2_stage0, ap_block_pp1_stage0, ap_sig_allocacmp_res_p_8_load, ap_sig_allocacmp_res_p_8_load_3, ap_sig_allocacmp_res_p_8_load_2, ap_sig_allocacmp_res_p_8_load_4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_load_fu_400_p1 <= res_p_8;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (tmp_3_fu_837_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            grp_load_fu_400_p1 <= ap_sig_allocacmp_res_p_8_load;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (trunc_ln79_1_fu_821_p1 = ap_const_lv4_8) and (tmp_2_fu_813_p3 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_load_fu_400_p1 <= ap_sig_allocacmp_res_p_8_load_3;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln79_fu_773_p1 = ap_const_lv4_8) and (tmp_1_fu_765_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_load_fu_400_p1 <= ap_sig_allocacmp_res_p_8_load_2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln65_fu_598_p1 = ap_const_lv4_8) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_load_fu_400_p1 <= ap_sig_allocacmp_res_p_8_load_4;
        else 
            grp_load_fu_400_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_405_p1_assign_proc : process(res_p_7, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, trunc_ln65_fu_598_p1, ap_CS_fsm_state13, ap_sig_allocacmp_res_p_7_load_1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_load_fu_405_p1 <= res_p_7;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln65_fu_598_p1 = ap_const_lv4_7) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_load_fu_405_p1 <= ap_sig_allocacmp_res_p_7_load_1;
        else 
            grp_load_fu_405_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_409_p1_assign_proc : process(res_p_6, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, trunc_ln65_fu_598_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tmp_1_fu_765_p3, trunc_ln79_fu_773_p1, ap_CS_fsm_state21, ap_block_pp1_stage0, ap_sig_allocacmp_res_p_6_load_1, ap_sig_allocacmp_res_p_6_load_2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_load_fu_409_p1 <= res_p_6;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln79_fu_773_p1 = ap_const_lv4_6) and (tmp_1_fu_765_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_load_fu_409_p1 <= ap_sig_allocacmp_res_p_6_load_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln65_fu_598_p1 = ap_const_lv4_6) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_load_fu_409_p1 <= ap_sig_allocacmp_res_p_6_load_2;
        else 
            grp_load_fu_409_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_413_p1_assign_proc : process(res_p_5, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, trunc_ln65_fu_598_p1, ap_CS_fsm_state13, ap_sig_allocacmp_res_p_5_load_1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_load_fu_413_p1 <= res_p_5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln65_fu_598_p1 = ap_const_lv4_5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_load_fu_413_p1 <= ap_sig_allocacmp_res_p_5_load_1;
        else 
            grp_load_fu_413_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_417_p1_assign_proc : process(res_p_4, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, trunc_ln65_fu_598_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tmp_1_fu_765_p3, trunc_ln79_fu_773_p1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, tmp_2_fu_813_p3, trunc_ln79_1_fu_821_p1, ap_CS_fsm_state29, ap_block_pp2_stage0, ap_block_pp1_stage0, ap_sig_allocacmp_res_p_4_load_2, ap_sig_allocacmp_res_p_4_load_1, ap_sig_allocacmp_res_p_4_load_3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_load_fu_417_p1 <= res_p_4;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (trunc_ln79_1_fu_821_p1 = ap_const_lv4_4) and (tmp_2_fu_813_p3 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_load_fu_417_p1 <= ap_sig_allocacmp_res_p_4_load_2;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln79_fu_773_p1 = ap_const_lv4_4) and (tmp_1_fu_765_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_load_fu_417_p1 <= ap_sig_allocacmp_res_p_4_load_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln65_fu_598_p1 = ap_const_lv4_4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_load_fu_417_p1 <= ap_sig_allocacmp_res_p_4_load_3;
        else 
            grp_load_fu_417_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_421_p1_assign_proc : process(res_p_3, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, trunc_ln65_fu_598_p1, ap_CS_fsm_state13, ap_sig_allocacmp_res_p_3_load_1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_load_fu_421_p1 <= res_p_3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln65_fu_598_p1 = ap_const_lv4_3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_load_fu_421_p1 <= ap_sig_allocacmp_res_p_3_load_1;
        else 
            grp_load_fu_421_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_425_p1_assign_proc : process(res_p_2, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, trunc_ln65_fu_598_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tmp_1_fu_765_p3, trunc_ln79_fu_773_p1, ap_CS_fsm_state21, ap_block_pp1_stage0, ap_sig_allocacmp_res_p_2_load_1, ap_sig_allocacmp_res_p_2_load_2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_load_fu_425_p1 <= res_p_2;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln79_fu_773_p1 = ap_const_lv4_2) and (tmp_1_fu_765_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_load_fu_425_p1 <= ap_sig_allocacmp_res_p_2_load_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln65_fu_598_p1 = ap_const_lv4_2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_load_fu_425_p1 <= ap_sig_allocacmp_res_p_2_load_2;
        else 
            grp_load_fu_425_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_429_p1_assign_proc : process(res_p_1, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, trunc_ln65_fu_598_p1, ap_CS_fsm_state13, ap_sig_allocacmp_res_p_1_load_1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_load_fu_429_p1 <= res_p_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln65_fu_598_p1 = ap_const_lv4_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_load_fu_429_p1 <= ap_sig_allocacmp_res_p_1_load_1;
        else 
            grp_load_fu_429_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_433_p1_assign_proc : process(res_p_0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, trunc_ln65_fu_598_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tmp_1_fu_765_p3, trunc_ln79_fu_773_p1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, tmp_2_fu_813_p3, trunc_ln79_1_fu_821_p1, ap_CS_fsm_state37, tmp_3_fu_837_p3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_sig_allocacmp_res_p_0_load, ap_block_pp3_stage0, ap_sig_allocacmp_res_p_0_load_3, ap_block_pp2_stage0, ap_sig_allocacmp_res_p_0_load_2, ap_block_pp1_stage0, ap_sig_allocacmp_res_p_0_load_4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_load_fu_433_p1 <= res_p_0;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (tmp_3_fu_837_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            grp_load_fu_433_p1 <= ap_sig_allocacmp_res_p_0_load;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (trunc_ln79_1_fu_821_p1 = ap_const_lv4_0) and (tmp_2_fu_813_p3 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_load_fu_433_p1 <= ap_sig_allocacmp_res_p_0_load_3;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln79_fu_773_p1 = ap_const_lv4_0) and (tmp_1_fu_765_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_load_fu_433_p1 <= ap_sig_allocacmp_res_p_0_load_2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln65_fu_598_p1 = ap_const_lv4_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_load_fu_433_p1 <= ap_sig_allocacmp_res_p_0_load_4;
        else 
            grp_load_fu_433_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_fu_438_p1_assign_proc : process(res_p_15, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, trunc_ln65_fu_598_p1, ap_CS_fsm_state13, ap_sig_allocacmp_res_p_15_load_1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_load_fu_438_p1 <= res_p_15;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (trunc_ln65_fu_598_p1 = ap_const_lv4_F) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_load_fu_438_p1 <= ap_sig_allocacmp_res_p_15_load_1;
        else 
            grp_load_fu_438_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln67_fu_646_p2 <= "1" when (tmp_fu_636_p4 = ap_const_lv28_0) else "0";
    icmp_ln69_fu_602_p2 <= "1" when (ap_phi_mux_p_phi_fu_202_p4 = ap_const_lv32_F) else "0";
    icmp_ln79_1_fu_869_p2 <= "1" when (trunc_ln79_2_fu_845_p1 = ap_const_lv4_0) else "0";
    icmp_ln79_fu_855_p2 <= "1" when (or_ln79_2_fu_849_p2 = ap_const_lv4_4) else "0";
    in1_c_last_V_fu_580_p1 <= in1_s_TLAST_int_regslice;

    in1_s_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, in1_s_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in1_s_TDATA_blk_n <= in1_s_TVALID_int_regslice;
        else 
            in1_s_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in1_s_TREADY <= regslice_both_in1_s_V_data_V_U_ack_in;

    in1_s_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in1_s_TREADY_int_regslice <= ap_const_logic_1;
        else 
            in1_s_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    in2_s_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, in2_s_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in2_s_TDATA_blk_n <= in2_s_TVALID_int_regslice;
        else 
            in2_s_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in2_s_TREADY <= regslice_both_in2_s_V_data_V_U_ack_in;

    in2_s_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in2_s_TREADY_int_regslice <= ap_const_logic_1;
        else 
            in2_s_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    n_1_fu_622_p2 <= std_logic_vector(unsigned(ap_phi_mux_n_phi_fu_213_p4) + unsigned(ap_const_lv32_1));
    or_ln79_1_fu_825_p2 <= (trunc_ln79_1_fu_821_p1 or ap_const_lv4_2);
    or_ln79_2_fu_849_p2 <= (trunc_ln79_2_fu_845_p1 or ap_const_lv4_4);
    or_ln79_fu_777_p2 <= (trunc_ln79_fu_773_p1 or ap_const_lv4_1);
    p_1_fu_614_p3 <= 
        ap_const_lv32_0 when (icmp_ln69_fu_602_p2(0) = '1') else 
        add_ln69_fu_608_p2;
    p_Result_s_fu_652_p3 <= (ap_const_lv1_0 & trunc_ln368_reg_917);
    select_ln67_fu_664_p3 <= 
        absdiff_reg_927_pp0_iter9_reg when (icmp_ln67_reg_922_pp0_iter9_reg(0) = '1') else 
        add_reg_933;
    select_ln79_1_fu_875_p3 <= 
        grp_load_fu_433_p1 when (icmp_ln79_1_fu_869_p2(0) = '1') else 
        grp_load_fu_400_p1;
    select_ln79_fu_861_p3 <= 
        reg_508 when (icmp_ln79_fu_855_p2(0) = '1') else 
        reg_455;
    tmp_1_fu_765_p3 <= i_reg_258(4 downto 4);
    tmp_2_fu_813_p3 <= i_1_reg_313(4 downto 4);
    tmp_3_fu_837_p3 <= i_2_reg_352(4 downto 4);
    tmp_fu_636_p4 <= ap_phi_mux_n_phi_fu_213_p4(31 downto 4);
    trunc_ln368_fu_632_p1 <= data_V_fu_628_p1(31 - 1 downto 0);
    trunc_ln65_fu_598_p1 <= ap_phi_mux_p_phi_fu_202_p4(4 - 1 downto 0);
    trunc_ln79_1_fu_821_p1 <= i_1_reg_313(4 - 1 downto 0);
    trunc_ln79_2_fu_845_p1 <= i_2_reg_352(4 - 1 downto 0);
    trunc_ln79_fu_773_p1 <= i_reg_258(4 - 1 downto 0);
end behav;
