// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ufunc_reduce_all_i4_ufunc_reduce_all_i4,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=3807,HLS_SYN_LUT=4283,HLS_VERSION=2020_2}" *)

module ufunc_reduce_all_i4 (
        ap_clk,
        ap_rst_n,
        in1_s_TDATA,
        in1_s_TVALID,
        in1_s_TREADY,
        in1_s_TKEEP,
        in1_s_TSTRB,
        in1_s_TUSER,
        in1_s_TLAST,
        in1_s_TID,
        in1_s_TDEST,
        in2_s_TDATA,
        in2_s_TVALID,
        in2_s_TREADY,
        in2_s_TKEEP,
        in2_s_TSTRB,
        in2_s_TUSER,
        in2_s_TLAST,
        in2_s_TID,
        in2_s_TDEST,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_pp0_stage0 = 17'd4;
parameter    ap_ST_fsm_state12 = 17'd8;
parameter    ap_ST_fsm_pp1_stage0 = 17'd16;
parameter    ap_ST_fsm_state18 = 17'd32;
parameter    ap_ST_fsm_pp2_stage0 = 17'd64;
parameter    ap_ST_fsm_state24 = 17'd128;
parameter    ap_ST_fsm_pp3_stage0 = 17'd256;
parameter    ap_ST_fsm_state30 = 17'd512;
parameter    ap_ST_fsm_state31 = 17'd1024;
parameter    ap_ST_fsm_state32 = 17'd2048;
parameter    ap_ST_fsm_state33 = 17'd4096;
parameter    ap_ST_fsm_state34 = 17'd8192;
parameter    ap_ST_fsm_state35 = 17'd16384;
parameter    ap_ST_fsm_state36 = 17'd32768;
parameter    ap_ST_fsm_state37 = 17'd65536;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] in1_s_TDATA;
input   in1_s_TVALID;
output   in1_s_TREADY;
input  [3:0] in1_s_TKEEP;
input  [3:0] in1_s_TSTRB;
input  [0:0] in1_s_TUSER;
input  [0:0] in1_s_TLAST;
input  [0:0] in1_s_TID;
input  [0:0] in1_s_TDEST;
input  [31:0] in2_s_TDATA;
input   in2_s_TVALID;
output   in2_s_TREADY;
input  [3:0] in2_s_TKEEP;
input  [3:0] in2_s_TSTRB;
input  [0:0] in2_s_TUSER;
input  [0:0] in2_s_TLAST;
input  [0:0] in2_s_TID;
input  [0:0] in2_s_TDEST;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [23:0] args;
wire   [3:0] is_binary_address0;
reg    is_binary_ce0;
wire   [0:0] is_binary_q0;
reg   [31:0] in2;
reg   [31:0] res_p_0;
reg   [31:0] res_p_1;
reg   [31:0] res_p_2;
reg   [31:0] res_p_3;
reg   [31:0] res_p_4;
reg   [31:0] res_p_5;
reg   [31:0] res_p_6;
reg   [31:0] res_p_7;
reg   [31:0] res_p_8;
reg   [31:0] res_p_9;
reg   [31:0] res_p_10;
reg   [31:0] res_p_11;
reg   [31:0] res_p_12;
reg   [31:0] res_p_13;
reg   [31:0] res_p_14;
reg   [31:0] res_p_15;
reg    in1_s_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    in2_s_TDATA_blk_n;
reg   [0:0] is_binary_load_reg_1122;
reg   [31:0] p_reg_243;
reg   [31:0] n_reg_254;
reg    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
reg    ap_block_pp0_stage0_11001;
reg   [4:0] i_reg_303;
wire    ap_block_state13_pp1_stage0_iter0;
wire    ap_block_state14_pp1_stage0_iter1;
wire    ap_block_state15_pp1_stage0_iter2;
wire    ap_block_state16_pp1_stage0_iter3;
wire    ap_block_state17_pp1_stage0_iter4;
wire    ap_block_pp1_stage0_11001;
reg   [4:0] i_1_reg_336;
wire    ap_block_state19_pp2_stage0_iter0;
wire    ap_block_state20_pp2_stage0_iter1;
wire    ap_block_state21_pp2_stage0_iter2;
wire    ap_block_state22_pp2_stage0_iter3;
wire    ap_block_state23_pp2_stage0_iter4;
wire    ap_block_pp2_stage0_11001;
reg   [4:0] i_2_reg_361;
reg   [31:0] grp_load_fu_444_p1;
reg   [31:0] reg_546;
reg    ap_enable_reg_pp0_iter4;
wire   [3:0] trunc_ln126_fu_691_p1;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] tmp_1_fu_889_p3;
wire   [3:0] trunc_ln140_fu_897_p1;
wire    ap_CS_fsm_state18;
reg   [31:0] grp_load_fu_448_p1;
reg   [31:0] reg_552;
wire    ap_CS_fsm_state12;
reg   [31:0] grp_load_fu_452_p1;
reg   [31:0] reg_557;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] tmp_2_fu_987_p3;
wire   [3:0] trunc_ln140_1_fu_995_p1;
wire    ap_CS_fsm_state24;
reg   [31:0] grp_load_fu_456_p1;
reg   [31:0] reg_564;
reg   [31:0] grp_load_fu_460_p1;
reg   [31:0] reg_569;
reg   [31:0] grp_load_fu_464_p1;
reg   [31:0] reg_575;
reg   [31:0] grp_load_fu_468_p1;
reg   [31:0] grp_load_fu_473_p1;
reg   [31:0] reg_587;
reg   [31:0] grp_load_fu_477_p1;
reg   [31:0] reg_592;
reg   [31:0] grp_load_fu_481_p1;
reg   [31:0] reg_598;
reg   [31:0] grp_load_fu_485_p1;
reg   [31:0] reg_603;
reg   [31:0] grp_load_fu_489_p1;
reg   [31:0] reg_610;
reg   [31:0] grp_load_fu_493_p1;
reg   [31:0] reg_615;
reg   [31:0] grp_load_fu_497_p1;
reg   [31:0] reg_621;
reg   [31:0] grp_load_fu_501_p1;
reg   [31:0] grp_load_fu_506_p1;
reg   [31:0] reg_634;
wire   [7:0] args_reduce_op_fu_639_p1;
reg   [7:0] args_reduce_op_reg_1101;
wire   [7:0] args_element_op_fu_643_p4;
reg   [7:0] args_element_op_reg_1107;
reg   [7:0] args_final_op_reg_1112;
wire    ap_CS_fsm_state2;
reg   [31:0] in1_c_data_V_reg_1126;
wire   [0:0] in1_c_last_V_fu_672_p1;
reg   [0:0] in1_c_last_V_reg_1131;
reg   [0:0] in1_c_last_V_reg_1131_pp0_iter1_reg;
reg   [0:0] in1_c_last_V_reg_1131_pp0_iter2_reg;
reg   [0:0] in1_c_last_V_reg_1131_pp0_iter3_reg;
reg   [0:0] in1_c_last_V_reg_1131_pp0_iter4_reg;
reg   [0:0] in1_c_last_V_reg_1131_pp0_iter5_reg;
wire   [31:0] grp_do_operation_fu_372_ap_return;
reg   [31:0] call_ret_reg_1135;
reg   [31:0] call_ret_reg_1135_pp0_iter5_reg;
reg   [31:0] call_ret_reg_1135_pp0_iter6_reg;
reg   [31:0] call_ret_reg_1135_pp0_iter7_reg;
reg   [3:0] trunc_ln126_reg_1156;
reg   [3:0] trunc_ln126_reg_1156_pp0_iter5_reg;
reg   [3:0] trunc_ln126_reg_1156_pp0_iter6_reg;
reg   [3:0] trunc_ln126_reg_1156_pp0_iter7_reg;
wire   [31:0] p_1_fu_707_p3;
reg   [31:0] p_1_reg_1160;
wire   [31:0] n_1_fu_715_p2;
reg   [31:0] n_1_reg_1165;
reg    ap_enable_reg_pp0_iter5;
wire   [0:0] icmp_ln128_fu_731_p2;
reg   [0:0] icmp_ln128_reg_1170;
reg   [0:0] icmp_ln128_reg_1170_pp0_iter6_reg;
reg   [0:0] icmp_ln128_reg_1170_pp0_iter7_reg;
reg   [3:0] trunc_ln140_reg_1178;
reg   [3:0] trunc_ln140_reg_1178_pp1_iter1_reg;
reg   [3:0] trunc_ln140_reg_1178_pp1_iter2_reg;
reg   [3:0] trunc_ln140_reg_1178_pp1_iter3_reg;
wire   [31:0] phi_ln140_2_fu_907_p18;
reg   [31:0] phi_ln140_2_reg_1182;
wire   [4:0] add_ln139_fu_945_p2;
reg   [3:0] trunc_ln140_1_reg_1196;
reg   [3:0] trunc_ln140_1_reg_1196_pp2_iter1_reg;
reg   [3:0] trunc_ln140_1_reg_1196_pp2_iter2_reg;
reg   [3:0] trunc_ln140_1_reg_1196_pp2_iter3_reg;
wire   [31:0] phi_ln140_3_fu_1005_p18;
reg   [31:0] phi_ln140_3_reg_1200;
wire   [4:0] add_ln139_1_fu_1043_p2;
wire   [0:0] tmp_3_fu_1049_p3;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state25_pp3_stage0_iter0;
wire    ap_block_state26_pp3_stage0_iter1;
wire    ap_block_state27_pp3_stage0_iter2;
wire    ap_block_state28_pp3_stage0_iter3;
wire    ap_block_state29_pp3_stage0_iter4;
wire    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln140_fu_1067_p2;
reg   [0:0] icmp_ln140_reg_1214;
reg   [0:0] icmp_ln140_reg_1214_pp3_iter1_reg;
reg   [0:0] icmp_ln140_reg_1214_pp3_iter2_reg;
reg   [0:0] icmp_ln140_reg_1214_pp3_iter3_reg;
wire   [31:0] select_ln140_fu_1073_p3;
reg   [31:0] select_ln140_reg_1218;
wire   [31:0] select_ln140_1_fu_1087_p3;
reg   [31:0] select_ln140_1_reg_1223;
wire   [4:0] add_ln139_2_fu_1095_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [31:0] grp_do_operation_fu_373_ap_return;
reg   [31:0] call_ret6_reg_1233;
wire    ap_CS_fsm_state33;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state13;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state19;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state25;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
reg    ap_enable_reg_pp3_iter4;
wire    grp_do_operation_fu_372_ap_start;
wire    grp_do_operation_fu_372_ap_done;
wire    grp_do_operation_fu_372_ap_idle;
wire    grp_do_operation_fu_372_ap_ready;
reg    grp_do_operation_fu_372_ap_ce;
reg   [7:0] grp_do_operation_fu_372_op_read;
reg   [31:0] grp_do_operation_fu_372_x_read;
reg   [31:0] grp_do_operation_fu_372_y_read;
reg    ap_block_state3_pp0_stage0_iter0_ignore_call1;
wire    ap_block_state4_pp0_stage0_iter1_ignore_call1;
wire    ap_block_state5_pp0_stage0_iter2_ignore_call1;
wire    ap_block_state6_pp0_stage0_iter3_ignore_call1;
wire    ap_block_state7_pp0_stage0_iter4_ignore_call1;
wire    ap_block_state8_pp0_stage0_iter5_ignore_call1;
wire    ap_block_state9_pp0_stage0_iter6_ignore_call1;
wire    ap_block_state10_pp0_stage0_iter7_ignore_call1;
wire    ap_block_state11_pp0_stage0_iter8_ignore_call1;
reg    ap_block_pp0_stage0_11001_ignoreCallOp79;
wire    ap_block_state13_pp1_stage0_iter0_ignore_call2;
wire    ap_block_state14_pp1_stage0_iter1_ignore_call2;
wire    ap_block_state15_pp1_stage0_iter2_ignore_call2;
wire    ap_block_state16_pp1_stage0_iter3_ignore_call2;
wire    ap_block_state17_pp1_stage0_iter4_ignore_call2;
wire    ap_block_pp1_stage0_11001_ignoreCallOp240;
wire    ap_block_state25_pp3_stage0_iter0_ignore_call9;
wire    ap_block_state26_pp3_stage0_iter1_ignore_call9;
wire    ap_block_state27_pp3_stage0_iter2_ignore_call9;
wire    ap_block_state28_pp3_stage0_iter3_ignore_call9;
wire    ap_block_state29_pp3_stage0_iter4_ignore_call9;
wire    ap_block_pp3_stage0_11001_ignoreCallOp318;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    grp_do_operation_fu_373_ap_start;
wire    grp_do_operation_fu_373_ap_done;
wire    grp_do_operation_fu_373_ap_idle;
wire    grp_do_operation_fu_373_ap_ready;
reg    grp_do_operation_fu_373_ap_ce;
reg   [31:0] grp_do_operation_fu_373_x_read;
reg   [31:0] grp_do_operation_fu_373_y_read;
reg    ap_block_pp0_stage0_11001_ignoreCallOp143;
wire    ap_block_state19_pp2_stage0_iter0_ignore_call2;
wire    ap_block_state20_pp2_stage0_iter1_ignore_call2;
wire    ap_block_state21_pp2_stage0_iter2_ignore_call2;
wire    ap_block_state22_pp2_stage0_iter3_ignore_call2;
wire    ap_block_state23_pp2_stage0_iter4_ignore_call2;
wire    ap_block_pp2_stage0_11001_ignoreCallOp287;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
reg   [31:0] ap_phi_mux_p_phi_fu_247_p4;
reg   [31:0] ap_phi_mux_n_phi_fu_258_p4;
wire   [31:0] ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_265;
reg   [31:0] ap_phi_reg_pp0_iter1_UnifiedRetVal_i_reg_265;
reg   [31:0] ap_phi_reg_pp0_iter2_UnifiedRetVal_i_reg_265;
reg   [31:0] ap_phi_reg_pp0_iter3_UnifiedRetVal_i_reg_265;
reg   [31:0] ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_265;
reg   [31:0] ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265;
wire   [31:0] ap_phi_reg_pp1_iter0_phi_ln140_reg_314;
reg   [31:0] ap_phi_reg_pp1_iter1_phi_ln140_reg_314;
wire   [31:0] ap_phi_reg_pp2_iter0_phi_ln140_1_reg_347;
reg   [31:0] ap_phi_reg_pp2_iter1_phi_ln140_1_reg_347;
reg    grp_do_operation_fu_372_ap_start_reg;
reg   [16:0] ap_NS_fsm;
wire    ap_NS_fsm_state34;
wire    ap_block_pp1_stage0;
wire    ap_block_pp3_stage0;
reg    grp_do_operation_fu_373_ap_start_reg;
wire    ap_NS_fsm_state30;
wire    ap_block_pp2_stage0;
wire   [63:0] idxprom_fu_663_p1;
reg   [31:0] ap_sig_allocacmp_res_p_0_load_2;
reg   [31:0] ap_sig_allocacmp_res_p_0_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_0_load;
reg   [31:0] ap_sig_allocacmp_res_p_0_load_4;
reg   [31:0] ap_sig_allocacmp_res_p_1_load;
reg   [31:0] ap_sig_allocacmp_res_p_2_load;
reg   [31:0] ap_sig_allocacmp_res_p_2_load_2;
reg   [31:0] ap_sig_allocacmp_res_p_3_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_4_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_4_load;
reg   [31:0] ap_sig_allocacmp_res_p_4_load_3;
reg   [31:0] ap_sig_allocacmp_res_p_5_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_6_load;
reg   [31:0] ap_sig_allocacmp_res_p_6_load_2;
reg   [31:0] ap_sig_allocacmp_res_p_7_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_8_load_2;
reg   [31:0] ap_sig_allocacmp_res_p_8_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_8_load;
reg   [31:0] ap_sig_allocacmp_res_p_8_load_4;
reg   [31:0] ap_sig_allocacmp_res_p_9_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_10_load;
reg   [31:0] ap_sig_allocacmp_res_p_10_load_2;
reg   [31:0] ap_sig_allocacmp_res_p_11_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_12_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_12_load;
reg   [31:0] ap_sig_allocacmp_res_p_12_load_3;
reg   [31:0] ap_sig_allocacmp_res_p_13_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_14_load;
reg   [31:0] ap_sig_allocacmp_res_p_14_load_2;
reg   [31:0] ap_sig_allocacmp_res_p_15_load_1;
wire   [0:0] icmp_ln130_fu_695_p2;
wire   [31:0] add_ln130_fu_701_p2;
wire   [27:0] tmp_fu_721_p4;
wire   [3:0] phi_ln140_2_fu_907_p17;
wire   [3:0] phi_ln140_3_fu_1005_p17;
wire   [3:0] trunc_ln140_2_fu_1057_p1;
wire   [3:0] or_ln140_2_fu_1061_p2;
wire   [0:0] icmp_ln140_1_fu_1081_p2;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire    regslice_both_in1_s_V_data_V_U_apdone_blk;
wire   [31:0] in1_s_TDATA_int_regslice;
wire    in1_s_TVALID_int_regslice;
reg    in1_s_TREADY_int_regslice;
wire    regslice_both_in1_s_V_data_V_U_ack_in;
wire    regslice_both_in1_s_V_keep_V_U_apdone_blk;
wire   [3:0] in1_s_TKEEP_int_regslice;
wire    regslice_both_in1_s_V_keep_V_U_vld_out;
wire    regslice_both_in1_s_V_keep_V_U_ack_in;
wire    regslice_both_in1_s_V_strb_V_U_apdone_blk;
wire   [3:0] in1_s_TSTRB_int_regslice;
wire    regslice_both_in1_s_V_strb_V_U_vld_out;
wire    regslice_both_in1_s_V_strb_V_U_ack_in;
wire    regslice_both_in1_s_V_user_V_U_apdone_blk;
wire   [0:0] in1_s_TUSER_int_regslice;
wire    regslice_both_in1_s_V_user_V_U_vld_out;
wire    regslice_both_in1_s_V_user_V_U_ack_in;
wire    regslice_both_in1_s_V_last_V_U_apdone_blk;
wire   [0:0] in1_s_TLAST_int_regslice;
wire    regslice_both_in1_s_V_last_V_U_vld_out;
wire    regslice_both_in1_s_V_last_V_U_ack_in;
wire    regslice_both_in1_s_V_id_V_U_apdone_blk;
wire   [0:0] in1_s_TID_int_regslice;
wire    regslice_both_in1_s_V_id_V_U_vld_out;
wire    regslice_both_in1_s_V_id_V_U_ack_in;
wire    regslice_both_in1_s_V_dest_V_U_apdone_blk;
wire   [0:0] in1_s_TDEST_int_regslice;
wire    regslice_both_in1_s_V_dest_V_U_vld_out;
wire    regslice_both_in1_s_V_dest_V_U_ack_in;
wire    regslice_both_in2_s_V_data_V_U_apdone_blk;
wire   [31:0] in2_s_TDATA_int_regslice;
wire    in2_s_TVALID_int_regslice;
reg    in2_s_TREADY_int_regslice;
wire    regslice_both_in2_s_V_data_V_U_ack_in;
wire    regslice_both_in2_s_V_keep_V_U_apdone_blk;
wire   [3:0] in2_s_TKEEP_int_regslice;
wire    regslice_both_in2_s_V_keep_V_U_vld_out;
wire    regslice_both_in2_s_V_keep_V_U_ack_in;
wire    regslice_both_in2_s_V_strb_V_U_apdone_blk;
wire   [3:0] in2_s_TSTRB_int_regslice;
wire    regslice_both_in2_s_V_strb_V_U_vld_out;
wire    regslice_both_in2_s_V_strb_V_U_ack_in;
wire    regslice_both_in2_s_V_user_V_U_apdone_blk;
wire   [0:0] in2_s_TUSER_int_regslice;
wire    regslice_both_in2_s_V_user_V_U_vld_out;
wire    regslice_both_in2_s_V_user_V_U_ack_in;
wire    regslice_both_in2_s_V_last_V_U_apdone_blk;
wire   [0:0] in2_s_TLAST_int_regslice;
wire    regslice_both_in2_s_V_last_V_U_vld_out;
wire    regslice_both_in2_s_V_last_V_U_ack_in;
wire    regslice_both_in2_s_V_id_V_U_apdone_blk;
wire   [0:0] in2_s_TID_int_regslice;
wire    regslice_both_in2_s_V_id_V_U_vld_out;
wire    regslice_both_in2_s_V_id_V_U_ack_in;
wire    regslice_both_in2_s_V_dest_V_U_apdone_blk;
wire   [0:0] in2_s_TDEST_int_regslice;
wire    regslice_both_in2_s_V_dest_V_U_vld_out;
wire    regslice_both_in2_s_V_dest_V_U_ack_in;
reg    ap_condition_242;
reg    ap_condition_210;
reg    ap_condition_289;
reg    ap_condition_277;
reg    ap_condition_891;
reg    ap_condition_1029;
reg    ap_condition_1039;
reg    ap_condition_1061;
reg    ap_condition_1072;
reg    ap_condition_1097;
reg    ap_condition_1107;
reg    ap_condition_907;
reg    ap_condition_920;
reg    ap_condition_930;
reg    ap_condition_948;
reg    ap_condition_959;
reg    ap_condition_972;
reg    ap_condition_982;
reg    ap_condition_1005;
reg    ap_condition_1016;
reg    ap_condition_905;
reg    ap_condition_1037;
reg    ap_condition_1070;
reg    ap_condition_1105;
reg    ap_condition_928;
reg    ap_condition_957;
reg    ap_condition_980;
reg    ap_condition_1014;
wire    ap_ce_reg;
wire   [31:0] ap_return;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 in2 = 32'd0;
#0 res_p_0 = 32'd0;
#0 res_p_1 = 32'd0;
#0 res_p_2 = 32'd0;
#0 res_p_3 = 32'd0;
#0 res_p_4 = 32'd0;
#0 res_p_5 = 32'd0;
#0 res_p_6 = 32'd0;
#0 res_p_7 = 32'd0;
#0 res_p_8 = 32'd0;
#0 res_p_9 = 32'd0;
#0 res_p_10 = 32'd0;
#0 res_p_11 = 32'd0;
#0 res_p_12 = 32'd0;
#0 res_p_13 = 32'd0;
#0 res_p_14 = 32'd0;
#0 res_p_15 = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 grp_do_operation_fu_372_ap_start_reg = 1'b0;
#0 grp_do_operation_fu_373_ap_start_reg = 1'b0;
end

ufunc_reduce_all_i4_is_binary #(
    .DataWidth( 1 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
is_binary_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(is_binary_address0),
    .ce0(is_binary_ce0),
    .q0(is_binary_q0)
);

ufunc_reduce_all_i4_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_return(grp_do_operation_fu_372_ap_return),
    .args(args)
);

ufunc_reduce_all_i4_do_operation grp_do_operation_fu_372(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_do_operation_fu_372_ap_start),
    .ap_done(grp_do_operation_fu_372_ap_done),
    .ap_idle(grp_do_operation_fu_372_ap_idle),
    .ap_ready(grp_do_operation_fu_372_ap_ready),
    .ap_ce(grp_do_operation_fu_372_ap_ce),
    .op_read(grp_do_operation_fu_372_op_read),
    .x_read(grp_do_operation_fu_372_x_read),
    .y_read(grp_do_operation_fu_372_y_read),
    .ap_return(grp_do_operation_fu_372_ap_return)
);

ufunc_reduce_all_i4_do_operation grp_do_operation_fu_373(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_do_operation_fu_373_ap_start),
    .ap_done(grp_do_operation_fu_373_ap_done),
    .ap_idle(grp_do_operation_fu_373_ap_idle),
    .ap_ready(grp_do_operation_fu_373_ap_ready),
    .ap_ce(grp_do_operation_fu_373_ap_ce),
    .op_read(args_reduce_op_reg_1101),
    .x_read(grp_do_operation_fu_373_x_read),
    .y_read(grp_do_operation_fu_373_y_read),
    .ap_return(grp_do_operation_fu_373_ap_return)
);

ufunc_reduce_all_i4_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U10(
    .din0(reg_634),
    .din1(reg_621),
    .din2(reg_634),
    .din3(reg_610),
    .din4(reg_634),
    .din5(reg_598),
    .din6(reg_634),
    .din7(reg_587),
    .din8(reg_634),
    .din9(reg_575),
    .din10(reg_634),
    .din11(reg_564),
    .din12(reg_634),
    .din13(reg_552),
    .din14(reg_634),
    .din15(reg_634),
    .din16(phi_ln140_2_fu_907_p17),
    .dout(phi_ln140_2_fu_907_p18)
);

ufunc_reduce_all_i4_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U11(
    .din0(reg_546),
    .din1(reg_546),
    .din2(reg_615),
    .din3(reg_546),
    .din4(reg_546),
    .din5(reg_546),
    .din6(reg_592),
    .din7(reg_546),
    .din8(reg_546),
    .din9(reg_546),
    .din10(reg_569),
    .din11(reg_546),
    .din12(reg_546),
    .din13(reg_546),
    .din14(reg_546),
    .din15(reg_546),
    .din16(phi_ln140_3_fu_1005_p17),
    .dout(phi_ln140_3_fu_1005_p18)
);

ufunc_reduce_all_i4_regslice_both #(
    .DataWidth( 32 ))
regslice_both_in1_s_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in1_s_TDATA),
    .vld_in(in1_s_TVALID),
    .ack_in(regslice_both_in1_s_V_data_V_U_ack_in),
    .data_out(in1_s_TDATA_int_regslice),
    .vld_out(in1_s_TVALID_int_regslice),
    .ack_out(in1_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in1_s_V_data_V_U_apdone_blk)
);

ufunc_reduce_all_i4_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in1_s_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in1_s_TKEEP),
    .vld_in(in1_s_TVALID),
    .ack_in(regslice_both_in1_s_V_keep_V_U_ack_in),
    .data_out(in1_s_TKEEP_int_regslice),
    .vld_out(regslice_both_in1_s_V_keep_V_U_vld_out),
    .ack_out(in1_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in1_s_V_keep_V_U_apdone_blk)
);

ufunc_reduce_all_i4_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in1_s_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in1_s_TSTRB),
    .vld_in(in1_s_TVALID),
    .ack_in(regslice_both_in1_s_V_strb_V_U_ack_in),
    .data_out(in1_s_TSTRB_int_regslice),
    .vld_out(regslice_both_in1_s_V_strb_V_U_vld_out),
    .ack_out(in1_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in1_s_V_strb_V_U_apdone_blk)
);

ufunc_reduce_all_i4_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in1_s_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in1_s_TUSER),
    .vld_in(in1_s_TVALID),
    .ack_in(regslice_both_in1_s_V_user_V_U_ack_in),
    .data_out(in1_s_TUSER_int_regslice),
    .vld_out(regslice_both_in1_s_V_user_V_U_vld_out),
    .ack_out(in1_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in1_s_V_user_V_U_apdone_blk)
);

ufunc_reduce_all_i4_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in1_s_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in1_s_TLAST),
    .vld_in(in1_s_TVALID),
    .ack_in(regslice_both_in1_s_V_last_V_U_ack_in),
    .data_out(in1_s_TLAST_int_regslice),
    .vld_out(regslice_both_in1_s_V_last_V_U_vld_out),
    .ack_out(in1_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in1_s_V_last_V_U_apdone_blk)
);

ufunc_reduce_all_i4_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in1_s_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in1_s_TID),
    .vld_in(in1_s_TVALID),
    .ack_in(regslice_both_in1_s_V_id_V_U_ack_in),
    .data_out(in1_s_TID_int_regslice),
    .vld_out(regslice_both_in1_s_V_id_V_U_vld_out),
    .ack_out(in1_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in1_s_V_id_V_U_apdone_blk)
);

ufunc_reduce_all_i4_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in1_s_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in1_s_TDEST),
    .vld_in(in1_s_TVALID),
    .ack_in(regslice_both_in1_s_V_dest_V_U_ack_in),
    .data_out(in1_s_TDEST_int_regslice),
    .vld_out(regslice_both_in1_s_V_dest_V_U_vld_out),
    .ack_out(in1_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in1_s_V_dest_V_U_apdone_blk)
);

ufunc_reduce_all_i4_regslice_both #(
    .DataWidth( 32 ))
regslice_both_in2_s_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in2_s_TDATA),
    .vld_in(in2_s_TVALID),
    .ack_in(regslice_both_in2_s_V_data_V_U_ack_in),
    .data_out(in2_s_TDATA_int_regslice),
    .vld_out(in2_s_TVALID_int_regslice),
    .ack_out(in2_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in2_s_V_data_V_U_apdone_blk)
);

ufunc_reduce_all_i4_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in2_s_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in2_s_TKEEP),
    .vld_in(in2_s_TVALID),
    .ack_in(regslice_both_in2_s_V_keep_V_U_ack_in),
    .data_out(in2_s_TKEEP_int_regslice),
    .vld_out(regslice_both_in2_s_V_keep_V_U_vld_out),
    .ack_out(in2_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in2_s_V_keep_V_U_apdone_blk)
);

ufunc_reduce_all_i4_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in2_s_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in2_s_TSTRB),
    .vld_in(in2_s_TVALID),
    .ack_in(regslice_both_in2_s_V_strb_V_U_ack_in),
    .data_out(in2_s_TSTRB_int_regslice),
    .vld_out(regslice_both_in2_s_V_strb_V_U_vld_out),
    .ack_out(in2_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in2_s_V_strb_V_U_apdone_blk)
);

ufunc_reduce_all_i4_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in2_s_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in2_s_TUSER),
    .vld_in(in2_s_TVALID),
    .ack_in(regslice_both_in2_s_V_user_V_U_ack_in),
    .data_out(in2_s_TUSER_int_regslice),
    .vld_out(regslice_both_in2_s_V_user_V_U_vld_out),
    .ack_out(in2_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in2_s_V_user_V_U_apdone_blk)
);

ufunc_reduce_all_i4_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in2_s_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in2_s_TLAST),
    .vld_in(in2_s_TVALID),
    .ack_in(regslice_both_in2_s_V_last_V_U_ack_in),
    .data_out(in2_s_TLAST_int_regslice),
    .vld_out(regslice_both_in2_s_V_last_V_U_vld_out),
    .ack_out(in2_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in2_s_V_last_V_U_apdone_blk)
);

ufunc_reduce_all_i4_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in2_s_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in2_s_TID),
    .vld_in(in2_s_TVALID),
    .ack_in(regslice_both_in2_s_V_id_V_U_ack_in),
    .data_out(in2_s_TID_int_regslice),
    .vld_out(regslice_both_in2_s_V_id_V_U_vld_out),
    .ack_out(in2_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in2_s_V_id_V_U_apdone_blk)
);

ufunc_reduce_all_i4_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in2_s_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in2_s_TDEST),
    .vld_in(in2_s_TVALID),
    .ack_in(regslice_both_in2_s_V_dest_V_U_ack_in),
    .data_out(in2_s_TDEST_int_regslice),
    .vld_out(regslice_both_in2_s_V_dest_V_U_vld_out),
    .ack_out(in2_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in2_s_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state13) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state13)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state13);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state19) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state19)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state19);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp2_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state25) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state24)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state25)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state25);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end else if ((1'b1 == ap_CS_fsm_state24)) begin
            ap_enable_reg_pp3_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_do_operation_fu_372_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_NS_fsm_state34) & (1'b1 == ap_CS_fsm_state33)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            grp_do_operation_fu_372_ap_start_reg <= 1'b1;
        end else if ((grp_do_operation_fu_372_ap_ready == 1'b1)) begin
            grp_do_operation_fu_372_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_do_operation_fu_373_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_NS_fsm_state30) & (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
            grp_do_operation_fu_373_ap_start_reg <= 1'b1;
        end else if ((grp_do_operation_fu_373_ap_ready == 1'b1)) begin
            grp_do_operation_fu_373_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        if ((trunc_ln126_fu_691_p1 == 4'd15)) begin
            ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_506_p1;
        end else if ((trunc_ln126_fu_691_p1 == 4'd14)) begin
            ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_444_p1;
        end else if ((trunc_ln126_fu_691_p1 == 4'd13)) begin
            ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_448_p1;
        end else if ((trunc_ln126_fu_691_p1 == 4'd12)) begin
            ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_452_p1;
        end else if ((trunc_ln126_fu_691_p1 == 4'd11)) begin
            ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_456_p1;
        end else if ((trunc_ln126_fu_691_p1 == 4'd10)) begin
            ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_460_p1;
        end else if ((trunc_ln126_fu_691_p1 == 4'd9)) begin
            ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_464_p1;
        end else if ((trunc_ln126_fu_691_p1 == 4'd8)) begin
            ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_468_p1;
        end else if ((trunc_ln126_fu_691_p1 == 4'd7)) begin
            ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_473_p1;
        end else if ((trunc_ln126_fu_691_p1 == 4'd6)) begin
            ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_477_p1;
        end else if ((trunc_ln126_fu_691_p1 == 4'd5)) begin
            ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_481_p1;
        end else if ((trunc_ln126_fu_691_p1 == 4'd4)) begin
            ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_485_p1;
        end else if ((trunc_ln126_fu_691_p1 == 4'd3)) begin
            ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_489_p1;
        end else if ((trunc_ln126_fu_691_p1 == 4'd2)) begin
            ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_493_p1;
        end else if ((trunc_ln126_fu_691_p1 == 4'd1)) begin
            ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_497_p1;
        end else if ((trunc_ln126_fu_691_p1 == 4'd0)) begin
            ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= grp_load_fu_501_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265 <= ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_265;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_210)) begin
        if ((1'b1 == ap_condition_242)) begin
            ap_phi_reg_pp1_iter1_phi_ln140_reg_314 <= grp_load_fu_444_p1;
        end else if (((trunc_ln140_fu_897_p1 == 4'd12) & (tmp_1_fu_889_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln140_reg_314 <= grp_load_fu_452_p1;
        end else if (((trunc_ln140_fu_897_p1 == 4'd10) & (tmp_1_fu_889_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln140_reg_314 <= grp_load_fu_460_p1;
        end else if (((trunc_ln140_fu_897_p1 == 4'd8) & (tmp_1_fu_889_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln140_reg_314 <= grp_load_fu_468_p1;
        end else if (((trunc_ln140_fu_897_p1 == 4'd6) & (tmp_1_fu_889_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln140_reg_314 <= grp_load_fu_477_p1;
        end else if (((trunc_ln140_fu_897_p1 == 4'd4) & (tmp_1_fu_889_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln140_reg_314 <= grp_load_fu_485_p1;
        end else if (((trunc_ln140_fu_897_p1 == 4'd2) & (tmp_1_fu_889_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln140_reg_314 <= grp_load_fu_493_p1;
        end else if (((trunc_ln140_fu_897_p1 == 4'd0) & (tmp_1_fu_889_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln140_reg_314 <= grp_load_fu_501_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter1_phi_ln140_reg_314 <= ap_phi_reg_pp1_iter0_phi_ln140_reg_314;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_277)) begin
        if ((1'b1 == ap_condition_289)) begin
            ap_phi_reg_pp2_iter1_phi_ln140_1_reg_347 <= grp_load_fu_452_p1;
        end else if (((trunc_ln140_1_fu_995_p1 == 4'd8) & (tmp_2_fu_987_p3 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln140_1_reg_347 <= grp_load_fu_468_p1;
        end else if (((trunc_ln140_1_fu_995_p1 == 4'd4) & (tmp_2_fu_987_p3 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln140_1_reg_347 <= grp_load_fu_485_p1;
        end else if (((trunc_ln140_1_fu_995_p1 == 4'd0) & (tmp_2_fu_987_p3 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln140_1_reg_347 <= grp_load_fu_501_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp2_iter1_phi_ln140_1_reg_347 <= ap_phi_reg_pp2_iter0_phi_ln140_1_reg_347;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_1_reg_336 <= 5'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (tmp_2_fu_987_p3 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_1_reg_336 <= add_ln139_1_fu_1043_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        i_2_reg_361 <= 5'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (tmp_3_fu_1049_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_2_reg_361 <= add_ln139_2_fu_1095_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_reg_303 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_1_fu_889_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_reg_303 <= add_ln139_fu_945_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (in1_c_last_V_reg_1131_pp0_iter5_reg == 1'd0))) begin
        n_reg_254 <= n_1_reg_1165;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        n_reg_254 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (in1_c_last_V_reg_1131_pp0_iter4_reg == 1'd0))) begin
        p_reg_243 <= p_1_reg_1160;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_reg_243 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd0))) begin
        res_p_0 <= call_ret_reg_1135_pp0_iter7_reg;
    end else if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1) & (trunc_ln140_1_reg_1196_pp2_iter3_reg == 4'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd0)))) begin
        res_p_0 <= grp_do_operation_fu_373_ap_return;
    end else if (((1'b1 == ap_CS_fsm_state37) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln140_reg_1214_pp3_iter3_reg == 1'd1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (trunc_ln140_reg_1178_pp1_iter3_reg == 4'd0)))) begin
        res_p_0 <= grp_do_operation_fu_372_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_905)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            res_p_1 <= call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            res_p_1 <= grp_do_operation_fu_373_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd10))) begin
        res_p_10 <= call_ret_reg_1135_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd10))) begin
        res_p_10 <= grp_do_operation_fu_373_ap_return;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (trunc_ln140_reg_1178_pp1_iter3_reg == 4'd10))) begin
        res_p_10 <= grp_do_operation_fu_372_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1037)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            res_p_11 <= call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            res_p_11 <= grp_do_operation_fu_373_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd12))) begin
        res_p_12 <= call_ret_reg_1135_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (trunc_ln140_reg_1178_pp1_iter3_reg == 4'd12))) begin
        res_p_12 <= grp_do_operation_fu_372_ap_return;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd12)) | (~(trunc_ln140_1_reg_1196_pp2_iter3_reg == 4'd8) & ~(trunc_ln140_1_reg_1196_pp2_iter3_reg == 4'd4) & ~(trunc_ln140_1_reg_1196_pp2_iter3_reg == 4'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1)))) begin
        res_p_12 <= grp_do_operation_fu_373_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1070)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            res_p_13 <= call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            res_p_13 <= grp_do_operation_fu_373_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd14))) begin
        res_p_14 <= call_ret_reg_1135_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd14))) begin
        res_p_14 <= grp_do_operation_fu_373_ap_return;
    end else if ((~(trunc_ln140_reg_1178_pp1_iter3_reg == 4'd8) & ~(trunc_ln140_reg_1178_pp1_iter3_reg == 4'd6) & ~(trunc_ln140_reg_1178_pp1_iter3_reg == 4'd4) & ~(trunc_ln140_reg_1178_pp1_iter3_reg == 4'd2) & ~(trunc_ln140_reg_1178_pp1_iter3_reg == 4'd0) & ~(trunc_ln140_reg_1178_pp1_iter3_reg == 4'd12) & ~(trunc_ln140_reg_1178_pp1_iter3_reg == 4'd10) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        res_p_14 <= grp_do_operation_fu_372_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1105)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            res_p_15 <= call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            res_p_15 <= grp_do_operation_fu_373_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd2))) begin
        res_p_2 <= call_ret_reg_1135_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd2))) begin
        res_p_2 <= grp_do_operation_fu_373_ap_return;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (trunc_ln140_reg_1178_pp1_iter3_reg == 4'd2))) begin
        res_p_2 <= grp_do_operation_fu_372_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_928)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            res_p_3 <= call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            res_p_3 <= grp_do_operation_fu_373_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd4))) begin
        res_p_4 <= call_ret_reg_1135_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (trunc_ln140_reg_1178_pp1_iter3_reg == 4'd4))) begin
        res_p_4 <= grp_do_operation_fu_372_ap_return;
    end else if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1) & (trunc_ln140_1_reg_1196_pp2_iter3_reg == 4'd4)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd4)))) begin
        res_p_4 <= grp_do_operation_fu_373_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_957)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            res_p_5 <= call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            res_p_5 <= grp_do_operation_fu_373_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd6))) begin
        res_p_6 <= call_ret_reg_1135_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd6))) begin
        res_p_6 <= grp_do_operation_fu_373_ap_return;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (trunc_ln140_reg_1178_pp1_iter3_reg == 4'd6))) begin
        res_p_6 <= grp_do_operation_fu_372_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_980)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            res_p_7 <= call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            res_p_7 <= grp_do_operation_fu_373_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd8))) begin
        res_p_8 <= call_ret_reg_1135_pp0_iter7_reg;
    end else if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1) & (trunc_ln140_1_reg_1196_pp2_iter3_reg == 4'd8)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd8)))) begin
        res_p_8 <= grp_do_operation_fu_373_ap_return;
    end else if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln140_reg_1214_pp3_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (trunc_ln140_reg_1178_pp1_iter3_reg == 4'd8)))) begin
        res_p_8 <= grp_do_operation_fu_372_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1014)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            res_p_9 <= call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            res_p_9 <= grp_do_operation_fu_373_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_UnifiedRetVal_i_reg_265 <= ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_265;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_UnifiedRetVal_i_reg_265 <= ap_phi_reg_pp0_iter1_UnifiedRetVal_i_reg_265;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_UnifiedRetVal_i_reg_265 <= ap_phi_reg_pp0_iter2_UnifiedRetVal_i_reg_265;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_265 <= ap_phi_reg_pp0_iter3_UnifiedRetVal_i_reg_265;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        args_element_op_reg_1107 <= {{args[15:8]}};
        args_final_op_reg_1112 <= {{args[23:16]}};
        args_reduce_op_reg_1101 <= args_reduce_op_fu_639_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        call_ret6_reg_1233 <= grp_do_operation_fu_373_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        call_ret_reg_1135 <= grp_do_operation_fu_372_ap_return;
        p_1_reg_1160 <= p_1_fu_707_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        call_ret_reg_1135_pp0_iter5_reg <= call_ret_reg_1135;
        call_ret_reg_1135_pp0_iter6_reg <= call_ret_reg_1135_pp0_iter5_reg;
        call_ret_reg_1135_pp0_iter7_reg <= call_ret_reg_1135_pp0_iter6_reg;
        icmp_ln128_reg_1170 <= icmp_ln128_fu_731_p2;
        icmp_ln128_reg_1170_pp0_iter6_reg <= icmp_ln128_reg_1170;
        icmp_ln128_reg_1170_pp0_iter7_reg <= icmp_ln128_reg_1170_pp0_iter6_reg;
        in1_c_last_V_reg_1131_pp0_iter2_reg <= in1_c_last_V_reg_1131_pp0_iter1_reg;
        in1_c_last_V_reg_1131_pp0_iter3_reg <= in1_c_last_V_reg_1131_pp0_iter2_reg;
        in1_c_last_V_reg_1131_pp0_iter4_reg <= in1_c_last_V_reg_1131_pp0_iter3_reg;
        in1_c_last_V_reg_1131_pp0_iter5_reg <= in1_c_last_V_reg_1131_pp0_iter4_reg;
        trunc_ln126_reg_1156 <= trunc_ln126_fu_691_p1;
        trunc_ln126_reg_1156_pp0_iter5_reg <= trunc_ln126_reg_1156;
        trunc_ln126_reg_1156_pp0_iter6_reg <= trunc_ln126_reg_1156_pp0_iter5_reg;
        trunc_ln126_reg_1156_pp0_iter7_reg <= trunc_ln126_reg_1156_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (tmp_3_fu_1049_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln140_reg_1214 <= icmp_ln140_fu_1067_p2;
        select_ln140_1_reg_1223 <= select_ln140_1_fu_1087_p3;
        select_ln140_reg_1218 <= select_ln140_fu_1073_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln140_reg_1214_pp3_iter1_reg <= icmp_ln140_reg_1214;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln140_reg_1214_pp3_iter2_reg <= icmp_ln140_reg_1214_pp3_iter1_reg;
        icmp_ln140_reg_1214_pp3_iter3_reg <= icmp_ln140_reg_1214_pp3_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in1_c_data_V_reg_1126 <= in1_s_TDATA_int_regslice;
        in1_c_last_V_reg_1131 <= in1_s_TLAST_int_regslice;
        in1_c_last_V_reg_1131_pp0_iter1_reg <= in1_c_last_V_reg_1131;
    end
end

always @ (posedge ap_clk) begin
    if (((is_binary_load_reg_1122 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in2 <= in2_s_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        is_binary_load_reg_1122 <= is_binary_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        n_1_reg_1165 <= n_1_fu_715_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_1_fu_889_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        phi_ln140_2_reg_1182 <= phi_ln140_2_fu_907_p18;
        trunc_ln140_reg_1178 <= trunc_ln140_fu_897_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (tmp_2_fu_987_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        phi_ln140_3_reg_1200 <= phi_ln140_3_fu_1005_p18;
        trunc_ln140_1_reg_1196 <= trunc_ln140_1_fu_995_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | (~(trunc_ln140_fu_897_p1 == 4'd12) & ~(trunc_ln140_fu_897_p1 == 4'd10) & ~(trunc_ln140_fu_897_p1 == 4'd8) & ~(trunc_ln140_fu_897_p1 == 4'd6) & ~(trunc_ln140_fu_897_p1 == 4'd4) & ~(trunc_ln140_fu_897_p1 == 4'd2) & ~(trunc_ln140_fu_897_p1 == 4'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (tmp_1_fu_889_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln126_fu_691_p1 == 4'd14) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        reg_546 <= grp_load_fu_444_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln126_fu_691_p1 == 4'd13) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        reg_552 <= grp_load_fu_448_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) | (~(trunc_ln140_1_fu_995_p1 == 4'd8) & ~(trunc_ln140_1_fu_995_p1 == 4'd4) & ~(trunc_ln140_1_fu_995_p1 == 4'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (tmp_2_fu_987_p3 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln140_fu_897_p1 == 4'd12) & (tmp_1_fu_889_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln126_fu_691_p1 == 4'd12) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        reg_557 <= grp_load_fu_452_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln126_fu_691_p1 == 4'd11) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        reg_564 <= grp_load_fu_456_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln140_fu_897_p1 == 4'd10) & (tmp_1_fu_889_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln126_fu_691_p1 == 4'd10) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        reg_569 <= grp_load_fu_460_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln126_fu_691_p1 == 4'd9) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        reg_575 <= grp_load_fu_464_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln126_fu_691_p1 == 4'd7) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        reg_587 <= grp_load_fu_473_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln140_fu_897_p1 == 4'd6) & (tmp_1_fu_889_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln126_fu_691_p1 == 4'd6) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        reg_592 <= grp_load_fu_477_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln126_fu_691_p1 == 4'd5) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        reg_598 <= grp_load_fu_481_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) | ((1'b0 == ap_block_pp2_stage0_11001) & (trunc_ln140_1_fu_995_p1 == 4'd4) & (tmp_2_fu_987_p3 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln140_fu_897_p1 == 4'd4) & (tmp_1_fu_889_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln126_fu_691_p1 == 4'd4) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        reg_603 <= grp_load_fu_485_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln126_fu_691_p1 == 4'd3) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        reg_610 <= grp_load_fu_489_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln140_fu_897_p1 == 4'd2) & (tmp_1_fu_889_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln126_fu_691_p1 == 4'd2) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        reg_615 <= grp_load_fu_493_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln126_fu_691_p1 == 4'd1) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        reg_621 <= grp_load_fu_497_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln126_fu_691_p1 == 4'd15) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        reg_634 <= grp_load_fu_506_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        trunc_ln140_1_reg_1196_pp2_iter1_reg <= trunc_ln140_1_reg_1196;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        trunc_ln140_1_reg_1196_pp2_iter2_reg <= trunc_ln140_1_reg_1196_pp2_iter1_reg;
        trunc_ln140_1_reg_1196_pp2_iter3_reg <= trunc_ln140_1_reg_1196_pp2_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln140_reg_1178_pp1_iter1_reg <= trunc_ln140_reg_1178;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        trunc_ln140_reg_1178_pp1_iter2_reg <= trunc_ln140_reg_1178_pp1_iter1_reg;
        trunc_ln140_reg_1178_pp1_iter3_reg <= trunc_ln140_reg_1178_pp1_iter2_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (in1_c_last_V_fu_672_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_1_fu_889_p3 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_2_fu_987_p3 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_3_fu_1049_p3 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state25 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state25 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (in1_c_last_V_reg_1131_pp0_iter5_reg == 1'd0))) begin
        ap_phi_mux_n_phi_fu_258_p4 = n_1_reg_1165;
    end else begin
        ap_phi_mux_n_phi_fu_258_p4 = n_reg_254;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (in1_c_last_V_reg_1131_pp0_iter4_reg == 1'd0))) begin
        ap_phi_mux_p_phi_fu_247_p4 = p_1_reg_1160;
    end else begin
        ap_phi_mux_p_phi_fu_247_p4 = p_reg_243;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (trunc_ln140_reg_1178_pp1_iter3_reg == 4'd0))) begin
        ap_sig_allocacmp_res_p_0_load = grp_do_operation_fu_372_ap_return;
    end else begin
        ap_sig_allocacmp_res_p_0_load = res_p_0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (trunc_ln140_1_reg_1196_pp2_iter3_reg == 4'd0))) begin
        ap_sig_allocacmp_res_p_0_load_1 = grp_do_operation_fu_373_ap_return;
    end else begin
        ap_sig_allocacmp_res_p_0_load_1 = res_p_0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln140_reg_1214_pp3_iter3_reg == 1'd1))) begin
        ap_sig_allocacmp_res_p_0_load_2 = grp_do_operation_fu_372_ap_return;
    end else begin
        ap_sig_allocacmp_res_p_0_load_2 = res_p_0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_891)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            ap_sig_allocacmp_res_p_0_load_4 = call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_sig_allocacmp_res_p_0_load_4 = grp_do_operation_fu_373_ap_return;
        end else begin
            ap_sig_allocacmp_res_p_0_load_4 = res_p_0;
        end
    end else begin
        ap_sig_allocacmp_res_p_0_load_4 = res_p_0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (trunc_ln140_reg_1178_pp1_iter3_reg == 4'd10))) begin
        ap_sig_allocacmp_res_p_10_load = grp_do_operation_fu_372_ap_return;
    end else begin
        ap_sig_allocacmp_res_p_10_load = res_p_10;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1029)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            ap_sig_allocacmp_res_p_10_load_2 = call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_sig_allocacmp_res_p_10_load_2 = grp_do_operation_fu_373_ap_return;
        end else begin
            ap_sig_allocacmp_res_p_10_load_2 = res_p_10;
        end
    end else begin
        ap_sig_allocacmp_res_p_10_load_2 = res_p_10;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1039)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            ap_sig_allocacmp_res_p_11_load_1 = call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_sig_allocacmp_res_p_11_load_1 = grp_do_operation_fu_373_ap_return;
        end else begin
            ap_sig_allocacmp_res_p_11_load_1 = res_p_11;
        end
    end else begin
        ap_sig_allocacmp_res_p_11_load_1 = res_p_11;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (trunc_ln140_reg_1178_pp1_iter3_reg == 4'd12))) begin
        ap_sig_allocacmp_res_p_12_load = grp_do_operation_fu_372_ap_return;
    end else begin
        ap_sig_allocacmp_res_p_12_load = res_p_12;
    end
end

always @ (*) begin
    if ((~(trunc_ln140_1_reg_1196_pp2_iter3_reg == 4'd8) & ~(trunc_ln140_1_reg_1196_pp2_iter3_reg == 4'd4) & ~(trunc_ln140_1_reg_1196_pp2_iter3_reg == 4'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1))) begin
        ap_sig_allocacmp_res_p_12_load_1 = grp_do_operation_fu_373_ap_return;
    end else begin
        ap_sig_allocacmp_res_p_12_load_1 = res_p_12;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1061)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            ap_sig_allocacmp_res_p_12_load_3 = call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_sig_allocacmp_res_p_12_load_3 = grp_do_operation_fu_373_ap_return;
        end else begin
            ap_sig_allocacmp_res_p_12_load_3 = res_p_12;
        end
    end else begin
        ap_sig_allocacmp_res_p_12_load_3 = res_p_12;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1072)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            ap_sig_allocacmp_res_p_13_load_1 = call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_sig_allocacmp_res_p_13_load_1 = grp_do_operation_fu_373_ap_return;
        end else begin
            ap_sig_allocacmp_res_p_13_load_1 = res_p_13;
        end
    end else begin
        ap_sig_allocacmp_res_p_13_load_1 = res_p_13;
    end
end

always @ (*) begin
    if ((~(trunc_ln140_reg_1178_pp1_iter3_reg == 4'd8) & ~(trunc_ln140_reg_1178_pp1_iter3_reg == 4'd6) & ~(trunc_ln140_reg_1178_pp1_iter3_reg == 4'd4) & ~(trunc_ln140_reg_1178_pp1_iter3_reg == 4'd2) & ~(trunc_ln140_reg_1178_pp1_iter3_reg == 4'd0) & ~(trunc_ln140_reg_1178_pp1_iter3_reg == 4'd12) & ~(trunc_ln140_reg_1178_pp1_iter3_reg == 4'd10) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_sig_allocacmp_res_p_14_load = grp_do_operation_fu_372_ap_return;
    end else begin
        ap_sig_allocacmp_res_p_14_load = res_p_14;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1097)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            ap_sig_allocacmp_res_p_14_load_2 = call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_sig_allocacmp_res_p_14_load_2 = grp_do_operation_fu_373_ap_return;
        end else begin
            ap_sig_allocacmp_res_p_14_load_2 = res_p_14;
        end
    end else begin
        ap_sig_allocacmp_res_p_14_load_2 = res_p_14;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1107)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            ap_sig_allocacmp_res_p_15_load_1 = call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_sig_allocacmp_res_p_15_load_1 = grp_do_operation_fu_373_ap_return;
        end else begin
            ap_sig_allocacmp_res_p_15_load_1 = res_p_15;
        end
    end else begin
        ap_sig_allocacmp_res_p_15_load_1 = res_p_15;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_907)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            ap_sig_allocacmp_res_p_1_load = call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_sig_allocacmp_res_p_1_load = grp_do_operation_fu_373_ap_return;
        end else begin
            ap_sig_allocacmp_res_p_1_load = res_p_1;
        end
    end else begin
        ap_sig_allocacmp_res_p_1_load = res_p_1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (trunc_ln140_reg_1178_pp1_iter3_reg == 4'd2))) begin
        ap_sig_allocacmp_res_p_2_load = grp_do_operation_fu_372_ap_return;
    end else begin
        ap_sig_allocacmp_res_p_2_load = res_p_2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_920)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            ap_sig_allocacmp_res_p_2_load_2 = call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_sig_allocacmp_res_p_2_load_2 = grp_do_operation_fu_373_ap_return;
        end else begin
            ap_sig_allocacmp_res_p_2_load_2 = res_p_2;
        end
    end else begin
        ap_sig_allocacmp_res_p_2_load_2 = res_p_2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_930)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            ap_sig_allocacmp_res_p_3_load_1 = call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_sig_allocacmp_res_p_3_load_1 = grp_do_operation_fu_373_ap_return;
        end else begin
            ap_sig_allocacmp_res_p_3_load_1 = res_p_3;
        end
    end else begin
        ap_sig_allocacmp_res_p_3_load_1 = res_p_3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (trunc_ln140_reg_1178_pp1_iter3_reg == 4'd4))) begin
        ap_sig_allocacmp_res_p_4_load = grp_do_operation_fu_372_ap_return;
    end else begin
        ap_sig_allocacmp_res_p_4_load = res_p_4;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (trunc_ln140_1_reg_1196_pp2_iter3_reg == 4'd4))) begin
        ap_sig_allocacmp_res_p_4_load_1 = grp_do_operation_fu_373_ap_return;
    end else begin
        ap_sig_allocacmp_res_p_4_load_1 = res_p_4;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_948)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            ap_sig_allocacmp_res_p_4_load_3 = call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_sig_allocacmp_res_p_4_load_3 = grp_do_operation_fu_373_ap_return;
        end else begin
            ap_sig_allocacmp_res_p_4_load_3 = res_p_4;
        end
    end else begin
        ap_sig_allocacmp_res_p_4_load_3 = res_p_4;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_959)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            ap_sig_allocacmp_res_p_5_load_1 = call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_sig_allocacmp_res_p_5_load_1 = grp_do_operation_fu_373_ap_return;
        end else begin
            ap_sig_allocacmp_res_p_5_load_1 = res_p_5;
        end
    end else begin
        ap_sig_allocacmp_res_p_5_load_1 = res_p_5;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (trunc_ln140_reg_1178_pp1_iter3_reg == 4'd6))) begin
        ap_sig_allocacmp_res_p_6_load = grp_do_operation_fu_372_ap_return;
    end else begin
        ap_sig_allocacmp_res_p_6_load = res_p_6;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_972)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            ap_sig_allocacmp_res_p_6_load_2 = call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_sig_allocacmp_res_p_6_load_2 = grp_do_operation_fu_373_ap_return;
        end else begin
            ap_sig_allocacmp_res_p_6_load_2 = res_p_6;
        end
    end else begin
        ap_sig_allocacmp_res_p_6_load_2 = res_p_6;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_982)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            ap_sig_allocacmp_res_p_7_load_1 = call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_sig_allocacmp_res_p_7_load_1 = grp_do_operation_fu_373_ap_return;
        end else begin
            ap_sig_allocacmp_res_p_7_load_1 = res_p_7;
        end
    end else begin
        ap_sig_allocacmp_res_p_7_load_1 = res_p_7;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (trunc_ln140_reg_1178_pp1_iter3_reg == 4'd8))) begin
        ap_sig_allocacmp_res_p_8_load = grp_do_operation_fu_372_ap_return;
    end else begin
        ap_sig_allocacmp_res_p_8_load = res_p_8;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (trunc_ln140_1_reg_1196_pp2_iter3_reg == 4'd8))) begin
        ap_sig_allocacmp_res_p_8_load_1 = grp_do_operation_fu_373_ap_return;
    end else begin
        ap_sig_allocacmp_res_p_8_load_1 = res_p_8;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln140_reg_1214_pp3_iter3_reg == 1'd0))) begin
        ap_sig_allocacmp_res_p_8_load_2 = grp_do_operation_fu_372_ap_return;
    end else begin
        ap_sig_allocacmp_res_p_8_load_2 = res_p_8;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1005)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            ap_sig_allocacmp_res_p_8_load_4 = call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_sig_allocacmp_res_p_8_load_4 = grp_do_operation_fu_373_ap_return;
        end else begin
            ap_sig_allocacmp_res_p_8_load_4 = res_p_8;
        end
    end else begin
        ap_sig_allocacmp_res_p_8_load_4 = res_p_8;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1016)) begin
        if ((icmp_ln128_reg_1170_pp0_iter7_reg == 1'd1)) begin
            ap_sig_allocacmp_res_p_9_load_1 = call_ret_reg_1135_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_sig_allocacmp_res_p_9_load_1 = grp_do_operation_fu_373_ap_return;
        end else begin
            ap_sig_allocacmp_res_p_9_load_1 = res_p_9;
        end
    end else begin
        ap_sig_allocacmp_res_p_9_load_1 = res_p_9;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | ((1'b0 == ap_block_pp3_stage0_11001_ignoreCallOp318) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp240) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp79) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_do_operation_fu_372_ap_ce = 1'b1;
    end else begin
        grp_do_operation_fu_372_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_do_operation_fu_372_op_read = args_final_op_reg_1112;
    end else if ((((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        grp_do_operation_fu_372_op_read = args_reduce_op_reg_1101;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_do_operation_fu_372_op_read = args_element_op_reg_1107;
    end else begin
        grp_do_operation_fu_372_op_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_do_operation_fu_372_x_read = call_ret6_reg_1233;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_do_operation_fu_372_x_read = select_ln140_reg_1218;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_do_operation_fu_372_x_read = ap_phi_reg_pp1_iter1_phi_ln140_reg_314;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_do_operation_fu_372_x_read = in1_c_data_V_reg_1126;
    end else begin
        grp_do_operation_fu_372_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_do_operation_fu_372_y_read = reg_621;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_do_operation_fu_372_y_read = select_ln140_1_reg_1223;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_do_operation_fu_372_y_read = phi_ln140_2_reg_1182;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_do_operation_fu_372_y_read = in2;
    end else begin
        grp_do_operation_fu_372_y_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state33) | ((1'b0 == ap_block_pp2_stage0_11001_ignoreCallOp287) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp143) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_do_operation_fu_373_ap_ce = 1'b1;
    end else begin
        grp_do_operation_fu_373_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_do_operation_fu_373_x_read = grp_load_fu_501_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_do_operation_fu_373_x_read = ap_phi_reg_pp2_iter1_phi_ln140_1_reg_347;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        grp_do_operation_fu_373_x_read = ap_phi_reg_pp0_iter5_UnifiedRetVal_i_reg_265;
    end else begin
        grp_do_operation_fu_373_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_do_operation_fu_373_y_read = grp_load_fu_468_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_do_operation_fu_373_y_read = phi_ln140_3_reg_1200;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        grp_do_operation_fu_373_y_read = call_ret_reg_1135;
    end else begin
        grp_do_operation_fu_373_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_444_p1 = res_p_14;
    end else if ((~(trunc_ln140_fu_897_p1 == 4'd12) & ~(trunc_ln140_fu_897_p1 == 4'd10) & ~(trunc_ln140_fu_897_p1 == 4'd8) & ~(trunc_ln140_fu_897_p1 == 4'd6) & ~(trunc_ln140_fu_897_p1 == 4'd4) & ~(trunc_ln140_fu_897_p1 == 4'd2) & ~(trunc_ln140_fu_897_p1 == 4'd0) & (1'b0 == ap_block_pp1_stage0) & (tmp_1_fu_889_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_load_fu_444_p1 = ap_sig_allocacmp_res_p_14_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln126_fu_691_p1 == 4'd14) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_load_fu_444_p1 = ap_sig_allocacmp_res_p_14_load_2;
    end else begin
        grp_load_fu_444_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_load_fu_448_p1 = res_p_13;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln126_fu_691_p1 == 4'd13) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_load_fu_448_p1 = ap_sig_allocacmp_res_p_13_load_1;
    end else begin
        grp_load_fu_448_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_load_fu_452_p1 = res_p_12;
    end else if ((~(trunc_ln140_1_fu_995_p1 == 4'd8) & ~(trunc_ln140_1_fu_995_p1 == 4'd4) & ~(trunc_ln140_1_fu_995_p1 == 4'd0) & (1'b0 == ap_block_pp2_stage0) & (tmp_2_fu_987_p3 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_load_fu_452_p1 = ap_sig_allocacmp_res_p_12_load_1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln140_fu_897_p1 == 4'd12) & (tmp_1_fu_889_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_load_fu_452_p1 = ap_sig_allocacmp_res_p_12_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln126_fu_691_p1 == 4'd12) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_load_fu_452_p1 = ap_sig_allocacmp_res_p_12_load_3;
    end else begin
        grp_load_fu_452_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_load_fu_456_p1 = res_p_11;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln126_fu_691_p1 == 4'd11) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_load_fu_456_p1 = ap_sig_allocacmp_res_p_11_load_1;
    end else begin
        grp_load_fu_456_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_460_p1 = res_p_10;
    end else if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln140_fu_897_p1 == 4'd10) & (tmp_1_fu_889_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_load_fu_460_p1 = ap_sig_allocacmp_res_p_10_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln126_fu_691_p1 == 4'd10) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_load_fu_460_p1 = ap_sig_allocacmp_res_p_10_load_2;
    end else begin
        grp_load_fu_460_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_load_fu_464_p1 = res_p_9;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln126_fu_691_p1 == 4'd9) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_load_fu_464_p1 = ap_sig_allocacmp_res_p_9_load_1;
    end else begin
        grp_load_fu_464_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_load_fu_468_p1 = res_p_8;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (tmp_3_fu_1049_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_load_fu_468_p1 = ap_sig_allocacmp_res_p_8_load_2;
    end else if (((1'b0 == ap_block_pp2_stage0) & (trunc_ln140_1_fu_995_p1 == 4'd8) & (tmp_2_fu_987_p3 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_load_fu_468_p1 = ap_sig_allocacmp_res_p_8_load_1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln140_fu_897_p1 == 4'd8) & (tmp_1_fu_889_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_load_fu_468_p1 = ap_sig_allocacmp_res_p_8_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln126_fu_691_p1 == 4'd8) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_load_fu_468_p1 = ap_sig_allocacmp_res_p_8_load_4;
    end else begin
        grp_load_fu_468_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_load_fu_473_p1 = res_p_7;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln126_fu_691_p1 == 4'd7) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_load_fu_473_p1 = ap_sig_allocacmp_res_p_7_load_1;
    end else begin
        grp_load_fu_473_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_477_p1 = res_p_6;
    end else if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln140_fu_897_p1 == 4'd6) & (tmp_1_fu_889_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_load_fu_477_p1 = ap_sig_allocacmp_res_p_6_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln126_fu_691_p1 == 4'd6) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_load_fu_477_p1 = ap_sig_allocacmp_res_p_6_load_2;
    end else begin
        grp_load_fu_477_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_load_fu_481_p1 = res_p_5;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln126_fu_691_p1 == 4'd5) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_load_fu_481_p1 = ap_sig_allocacmp_res_p_5_load_1;
    end else begin
        grp_load_fu_481_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_load_fu_485_p1 = res_p_4;
    end else if (((1'b0 == ap_block_pp2_stage0) & (trunc_ln140_1_fu_995_p1 == 4'd4) & (tmp_2_fu_987_p3 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_load_fu_485_p1 = ap_sig_allocacmp_res_p_4_load_1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln140_fu_897_p1 == 4'd4) & (tmp_1_fu_889_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_load_fu_485_p1 = ap_sig_allocacmp_res_p_4_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln126_fu_691_p1 == 4'd4) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_load_fu_485_p1 = ap_sig_allocacmp_res_p_4_load_3;
    end else begin
        grp_load_fu_485_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_load_fu_489_p1 = res_p_3;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln126_fu_691_p1 == 4'd3) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_load_fu_489_p1 = ap_sig_allocacmp_res_p_3_load_1;
    end else begin
        grp_load_fu_489_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_493_p1 = res_p_2;
    end else if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln140_fu_897_p1 == 4'd2) & (tmp_1_fu_889_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_load_fu_493_p1 = ap_sig_allocacmp_res_p_2_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln126_fu_691_p1 == 4'd2) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_load_fu_493_p1 = ap_sig_allocacmp_res_p_2_load_2;
    end else begin
        grp_load_fu_493_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_load_fu_497_p1 = res_p_1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln126_fu_691_p1 == 4'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_load_fu_497_p1 = ap_sig_allocacmp_res_p_1_load;
    end else begin
        grp_load_fu_497_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_load_fu_501_p1 = res_p_0;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (tmp_3_fu_1049_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_load_fu_501_p1 = ap_sig_allocacmp_res_p_0_load_2;
    end else if (((1'b0 == ap_block_pp2_stage0) & (trunc_ln140_1_fu_995_p1 == 4'd0) & (tmp_2_fu_987_p3 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_load_fu_501_p1 = ap_sig_allocacmp_res_p_0_load_1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln140_fu_897_p1 == 4'd0) & (tmp_1_fu_889_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_load_fu_501_p1 = ap_sig_allocacmp_res_p_0_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln126_fu_691_p1 == 4'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_load_fu_501_p1 = ap_sig_allocacmp_res_p_0_load_4;
    end else begin
        grp_load_fu_501_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_load_fu_506_p1 = res_p_15;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln126_fu_691_p1 == 4'd15) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_load_fu_506_p1 = ap_sig_allocacmp_res_p_15_load_1;
    end else begin
        grp_load_fu_506_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in1_s_TDATA_blk_n = in1_s_TVALID_int_regslice;
    end else begin
        in1_s_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in1_s_TREADY_int_regslice = 1'b1;
    end else begin
        in1_s_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((is_binary_load_reg_1122 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in2_s_TDATA_blk_n = in2_s_TVALID_int_regslice;
    end else begin
        in2_s_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((is_binary_load_reg_1122 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in2_s_TREADY_int_regslice = 1'b1;
    end else begin
        in2_s_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        is_binary_ce0 = 1'b1;
    end else begin
        is_binary_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1) & (ap_enable_reg_pp0_iter7 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1) & (ap_enable_reg_pp0_iter7 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (tmp_1_fu_889_p3 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter4 == 1'b1) & (ap_enable_reg_pp1_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter4 == 1'b1) & (ap_enable_reg_pp1_iter3 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (tmp_1_fu_889_p3 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (tmp_2_fu_987_p3 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter4 == 1'b1) & (ap_enable_reg_pp2_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter4 == 1'b1) & (ap_enable_reg_pp2_iter3 == 1'b0)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (tmp_2_fu_987_p3 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (tmp_3_fu_1049_p3 == 1'd1)) & ~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter4 == 1'b1) & (ap_enable_reg_pp3_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter4 == 1'b1) & (ap_enable_reg_pp3_iter3 == 1'b0)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (tmp_3_fu_1049_p3 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln130_fu_701_p2 = (ap_phi_mux_p_phi_fu_247_p4 + 32'd1);

assign add_ln139_1_fu_1043_p2 = (i_1_reg_336 + 5'd4);

assign add_ln139_2_fu_1095_p2 = (i_2_reg_361 + 5'd8);

assign add_ln139_fu_945_p2 = (i_reg_303 + 5'd2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd16];

assign ap_NS_fsm_state30 = ap_NS_fsm[32'd9];

assign ap_NS_fsm_state34 = ap_NS_fsm[32'd13];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in1_s_TVALID_int_regslice == 1'b0) | ((is_binary_load_reg_1122 == 1'd1) & (in2_s_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp143 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in1_s_TVALID_int_regslice == 1'b0) | ((is_binary_load_reg_1122 == 1'd1) & (in2_s_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp79 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in1_s_TVALID_int_regslice == 1'b0) | ((is_binary_load_reg_1122 == 1'd1) & (in2_s_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in1_s_TVALID_int_regslice == 1'b0) | ((is_binary_load_reg_1122 == 1'd1) & (in2_s_TVALID_int_regslice == 1'b0))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001_ignoreCallOp240 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001_ignoreCallOp287 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001_ignoreCallOp318 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter7_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter0_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter1_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter2_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter3_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter4_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage0_iter0_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage0_iter1_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage0_iter2_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage0_iter3_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter4_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp3_stage0_iter0_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp3_stage0_iter1_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp3_stage0_iter2_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp3_stage0_iter3_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp3_stage0_iter4_ignore_call9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter0 = ((in1_s_TVALID_int_regslice == 1'b0) | ((is_binary_load_reg_1122 == 1'd1) & (in2_s_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter0_ignore_call1 = ((in1_s_TVALID_int_regslice == 1'b0) | ((is_binary_load_reg_1122 == 1'd1) & (in2_s_TVALID_int_regslice == 1'b0)));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6_ignore_call1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1005 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd8));
end

always @ (*) begin
    ap_condition_1014 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd9));
end

always @ (*) begin
    ap_condition_1016 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd9));
end

always @ (*) begin
    ap_condition_1029 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd10));
end

always @ (*) begin
    ap_condition_1037 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd11));
end

always @ (*) begin
    ap_condition_1039 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd11));
end

always @ (*) begin
    ap_condition_1061 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd12));
end

always @ (*) begin
    ap_condition_1070 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd13));
end

always @ (*) begin
    ap_condition_1072 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd13));
end

always @ (*) begin
    ap_condition_1097 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd14));
end

always @ (*) begin
    ap_condition_1105 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd15));
end

always @ (*) begin
    ap_condition_1107 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd15));
end

always @ (*) begin
    ap_condition_210 = ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_242 = (~(trunc_ln140_fu_897_p1 == 4'd12) & ~(trunc_ln140_fu_897_p1 == 4'd10) & ~(trunc_ln140_fu_897_p1 == 4'd8) & ~(trunc_ln140_fu_897_p1 == 4'd6) & ~(trunc_ln140_fu_897_p1 == 4'd4) & ~(trunc_ln140_fu_897_p1 == 4'd2) & ~(trunc_ln140_fu_897_p1 == 4'd0) & (tmp_1_fu_889_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_277 = ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0));
end

always @ (*) begin
    ap_condition_289 = (~(trunc_ln140_1_fu_995_p1 == 4'd8) & ~(trunc_ln140_1_fu_995_p1 == 4'd4) & ~(trunc_ln140_1_fu_995_p1 == 4'd0) & (tmp_2_fu_987_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_891 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd0));
end

always @ (*) begin
    ap_condition_905 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd1));
end

always @ (*) begin
    ap_condition_907 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd1));
end

always @ (*) begin
    ap_condition_920 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd2));
end

always @ (*) begin
    ap_condition_928 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd3));
end

always @ (*) begin
    ap_condition_930 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd3));
end

always @ (*) begin
    ap_condition_948 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd4));
end

always @ (*) begin
    ap_condition_957 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd5));
end

always @ (*) begin
    ap_condition_959 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd5));
end

always @ (*) begin
    ap_condition_972 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd6));
end

always @ (*) begin
    ap_condition_980 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd7));
end

always @ (*) begin
    ap_condition_982 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (trunc_ln126_reg_1156_pp0_iter7_reg == 4'd7));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_265 = 'bx;

assign ap_phi_reg_pp1_iter0_phi_ln140_reg_314 = 'bx;

assign ap_phi_reg_pp2_iter0_phi_ln140_1_reg_347 = 'bx;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign args_element_op_fu_643_p4 = {{args[15:8]}};

assign args_reduce_op_fu_639_p1 = args[7:0];

assign grp_do_operation_fu_372_ap_start = grp_do_operation_fu_372_ap_start_reg;

assign grp_do_operation_fu_373_ap_start = grp_do_operation_fu_373_ap_start_reg;

assign icmp_ln128_fu_731_p2 = ((tmp_fu_721_p4 == 28'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_fu_695_p2 = ((ap_phi_mux_p_phi_fu_247_p4 == 32'd15) ? 1'b1 : 1'b0);

assign icmp_ln140_1_fu_1081_p2 = ((or_ln140_2_fu_1061_p2 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln140_fu_1067_p2 = ((trunc_ln140_2_fu_1057_p1 == 4'd0) ? 1'b1 : 1'b0);

assign idxprom_fu_663_p1 = args_element_op_fu_643_p4;

assign in1_c_last_V_fu_672_p1 = in1_s_TLAST_int_regslice;

assign in1_s_TREADY = regslice_both_in1_s_V_data_V_U_ack_in;

assign in2_s_TREADY = regslice_both_in2_s_V_data_V_U_ack_in;

assign is_binary_address0 = idxprom_fu_663_p1;

assign n_1_fu_715_p2 = (ap_phi_mux_n_phi_fu_258_p4 + 32'd1);

assign or_ln140_2_fu_1061_p2 = (trunc_ln140_2_fu_1057_p1 | 4'd4);

assign p_1_fu_707_p3 = ((icmp_ln130_fu_695_p2[0:0] == 1'b1) ? 32'd0 : add_ln130_fu_701_p2);

assign phi_ln140_2_fu_907_p17 = (trunc_ln140_fu_897_p1 | 4'd1);

assign phi_ln140_3_fu_1005_p17 = (trunc_ln140_1_fu_995_p1 | 4'd2);

assign select_ln140_1_fu_1087_p3 = ((icmp_ln140_1_fu_1081_p2[0:0] == 1'b1) ? reg_603 : reg_557);

assign select_ln140_fu_1073_p3 = ((icmp_ln140_fu_1067_p2[0:0] == 1'b1) ? grp_load_fu_501_p1 : grp_load_fu_468_p1);

assign tmp_1_fu_889_p3 = i_reg_303[32'd4];

assign tmp_2_fu_987_p3 = i_1_reg_336[32'd4];

assign tmp_3_fu_1049_p3 = i_2_reg_361[32'd4];

assign tmp_fu_721_p4 = {{ap_phi_mux_n_phi_fu_258_p4[31:4]}};

assign trunc_ln126_fu_691_p1 = ap_phi_mux_p_phi_fu_247_p4[3:0];

assign trunc_ln140_1_fu_995_p1 = i_1_reg_336[3:0];

assign trunc_ln140_2_fu_1057_p1 = i_2_reg_361[3:0];

assign trunc_ln140_fu_897_p1 = i_reg_303[3:0];

endmodule //ufunc_reduce_all_i4
