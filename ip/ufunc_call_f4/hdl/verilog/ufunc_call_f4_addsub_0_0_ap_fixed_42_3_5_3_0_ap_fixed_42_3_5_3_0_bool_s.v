// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ufunc_call_f4_addsub_0_0_ap_fixed_42_3_5_3_0_ap_fixed_42_3_5_3_0_bool_s (
        ap_ready,
        a,
        b,
        add,
        ap_return
);


output   ap_ready;
input  [41:0] a;
input  [40:0] b;
input   add;
output  [41:0] ap_return;

wire  signed [41:0] sext_ln1147_fu_36_p1;
wire   [0:0] ret_V_4_fu_52_p0;
wire   [41:0] ret_V_2_fu_46_p2;
wire   [41:0] ret_V_fu_40_p2;

assign ap_ready = 1'b1;

assign ap_return = ((ret_V_4_fu_52_p0[0:0] == 1'b1) ? ret_V_2_fu_46_p2 : ret_V_fu_40_p2);

assign ret_V_2_fu_46_p2 = ($signed(sext_ln1147_fu_36_p1) + $signed(a));

assign ret_V_4_fu_52_p0 = add;

assign ret_V_fu_40_p2 = ($signed(a) - $signed(sext_ln1147_fu_36_p1));

assign sext_ln1147_fu_36_p1 = $signed(b);

endmodule //ufunc_call_f4_addsub_0_0_ap_fixed_42_3_5_3_0_ap_fixed_42_3_5_3_0_bool_s
