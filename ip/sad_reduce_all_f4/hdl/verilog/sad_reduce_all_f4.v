// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sad_reduce_all_f4_sad_reduce_all_f4,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.423540,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2568,HLS_SYN_LUT=2605,HLS_VERSION=2020_2}" *)

module sad_reduce_all_f4 (
        ap_clk,
        ap_rst_n,
        in1_s_TDATA,
        in1_s_TVALID,
        in1_s_TREADY,
        in1_s_TKEEP,
        in1_s_TSTRB,
        in1_s_TUSER,
        in1_s_TLAST,
        in1_s_TID,
        in1_s_TDEST,
        in2_s_TDATA,
        in2_s_TVALID,
        in2_s_TREADY,
        in2_s_TKEEP,
        in2_s_TSTRB,
        in2_s_TUSER,
        in2_s_TLAST,
        in2_s_TID,
        in2_s_TDEST,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_pp0_stage0 = 14'd2;
parameter    ap_ST_fsm_state13 = 14'd4;
parameter    ap_ST_fsm_pp1_stage0 = 14'd8;
parameter    ap_ST_fsm_state21 = 14'd16;
parameter    ap_ST_fsm_pp2_stage0 = 14'd32;
parameter    ap_ST_fsm_state29 = 14'd64;
parameter    ap_ST_fsm_pp3_stage0 = 14'd128;
parameter    ap_ST_fsm_state37 = 14'd256;
parameter    ap_ST_fsm_state38 = 14'd512;
parameter    ap_ST_fsm_state39 = 14'd1024;
parameter    ap_ST_fsm_state40 = 14'd2048;
parameter    ap_ST_fsm_state41 = 14'd4096;
parameter    ap_ST_fsm_state42 = 14'd8192;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] in1_s_TDATA;
input   in1_s_TVALID;
output   in1_s_TREADY;
input  [3:0] in1_s_TKEEP;
input  [3:0] in1_s_TSTRB;
input  [0:0] in1_s_TUSER;
input  [0:0] in1_s_TLAST;
input  [0:0] in1_s_TID;
input  [0:0] in1_s_TDEST;
input  [31:0] in2_s_TDATA;
input   in2_s_TVALID;
output   in2_s_TREADY;
input  [3:0] in2_s_TKEEP;
input  [3:0] in2_s_TSTRB;
input  [0:0] in2_s_TUSER;
input  [0:0] in2_s_TLAST;
input  [0:0] in2_s_TID;
input  [0:0] in2_s_TDEST;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [31:0] res_p_0;
reg   [31:0] res_p_1;
reg   [31:0] res_p_2;
reg   [31:0] res_p_3;
reg   [31:0] res_p_4;
reg   [31:0] res_p_5;
reg   [31:0] res_p_6;
reg   [31:0] res_p_7;
reg   [31:0] res_p_8;
reg   [31:0] res_p_9;
reg   [31:0] res_p_10;
reg   [31:0] res_p_11;
reg   [31:0] res_p_12;
reg   [31:0] res_p_13;
reg   [31:0] res_p_14;
reg   [31:0] res_p_15;
reg    in1_s_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    in2_s_TDATA_blk_n;
reg   [31:0] p_reg_198;
reg   [31:0] n_reg_209;
reg   [31:0] UnifiedRetVal_i_reg_220;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
reg    ap_block_pp0_stage0_11001;
reg   [4:0] i_reg_258;
wire    ap_block_state14_pp1_stage0_iter0;
wire    ap_block_state15_pp1_stage0_iter1;
wire    ap_block_state16_pp1_stage0_iter2;
wire    ap_block_state17_pp1_stage0_iter3;
wire    ap_block_state18_pp1_stage0_iter4;
wire    ap_block_state19_pp1_stage0_iter5;
wire    ap_block_state20_pp1_stage0_iter6;
wire    ap_block_pp1_stage0_11001;
reg   [4:0] i_1_reg_313;
wire    ap_block_state22_pp2_stage0_iter0;
wire    ap_block_state23_pp2_stage0_iter1;
wire    ap_block_state24_pp2_stage0_iter2;
wire    ap_block_state25_pp2_stage0_iter3;
wire    ap_block_state26_pp2_stage0_iter4;
wire    ap_block_state27_pp2_stage0_iter5;
wire    ap_block_state28_pp2_stage0_iter6;
wire    ap_block_pp2_stage0_11001;
reg   [4:0] i_2_reg_352;
reg   [31:0] grp_load_fu_376_p1;
reg   [31:0] reg_442;
reg    ap_enable_reg_pp0_iter3;
wire   [3:0] trunc_ln65_fu_598_p1;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] tmp_1_fu_765_p3;
wire   [3:0] trunc_ln79_fu_773_p1;
wire    ap_CS_fsm_state21;
reg   [31:0] grp_load_fu_380_p1;
reg   [31:0] reg_449;
wire    ap_CS_fsm_state13;
reg   [31:0] grp_load_fu_384_p1;
reg   [31:0] reg_455;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] tmp_2_fu_813_p3;
wire   [3:0] trunc_ln79_1_fu_821_p1;
wire    ap_CS_fsm_state29;
reg   [31:0] grp_load_fu_388_p1;
reg   [31:0] reg_462;
reg   [31:0] grp_load_fu_392_p1;
reg   [31:0] reg_468;
reg   [31:0] grp_load_fu_396_p1;
reg   [31:0] reg_475;
reg   [31:0] grp_load_fu_400_p1;
wire    ap_CS_fsm_state37;
reg   [31:0] grp_load_fu_405_p1;
reg   [31:0] reg_489;
reg   [31:0] grp_load_fu_409_p1;
reg   [31:0] reg_495;
reg   [31:0] grp_load_fu_413_p1;
reg   [31:0] reg_502;
reg   [31:0] grp_load_fu_417_p1;
reg   [31:0] reg_508;
reg   [31:0] grp_load_fu_421_p1;
reg   [31:0] reg_515;
reg   [31:0] grp_load_fu_425_p1;
reg   [31:0] reg_521;
reg   [31:0] grp_load_fu_429_p1;
reg   [31:0] reg_528;
reg   [31:0] grp_load_fu_433_p1;
reg   [31:0] grp_load_fu_438_p1;
reg   [31:0] reg_542;
wire   [31:0] grp_fu_363_p2;
reg   [31:0] reg_548;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp3_iter5;
wire    ap_block_state30_pp3_stage0_iter0;
wire    ap_block_state31_pp3_stage0_iter1;
wire    ap_block_state32_pp3_stage0_iter2;
wire    ap_block_state33_pp3_stage0_iter3;
wire    ap_block_state34_pp3_stage0_iter4;
wire    ap_block_state35_pp3_stage0_iter5;
wire    ap_block_state36_pp3_stage0_iter6;
wire    ap_block_pp3_stage0_11001;
wire    ap_CS_fsm_state41;
wire   [0:0] in1_c_last_V_fu_580_p1;
reg   [0:0] in1_c_last_V_reg_889;
reg   [0:0] in1_c_last_V_reg_889_pp0_iter1_reg;
reg   [0:0] in1_c_last_V_reg_889_pp0_iter2_reg;
reg   [0:0] in1_c_last_V_reg_889_pp0_iter3_reg;
reg   [0:0] in1_c_last_V_reg_889_pp0_iter4_reg;
wire   [31:0] bitcast_ln64_fu_588_p1;
wire   [31:0] bitcast_ln64_1_fu_593_p1;
reg   [3:0] trunc_ln65_reg_903;
reg   [3:0] trunc_ln65_reg_903_pp0_iter4_reg;
reg   [3:0] trunc_ln65_reg_903_pp0_iter5_reg;
reg   [3:0] trunc_ln65_reg_903_pp0_iter6_reg;
reg   [3:0] trunc_ln65_reg_903_pp0_iter7_reg;
reg   [3:0] trunc_ln65_reg_903_pp0_iter8_reg;
reg   [3:0] trunc_ln65_reg_903_pp0_iter9_reg;
wire   [31:0] p_1_fu_614_p3;
reg   [31:0] p_1_reg_907;
wire   [31:0] n_1_fu_622_p2;
reg   [31:0] n_1_reg_912;
reg    ap_enable_reg_pp0_iter4;
wire   [30:0] trunc_ln368_fu_632_p1;
reg   [30:0] trunc_ln368_reg_917;
wire   [0:0] icmp_ln67_fu_646_p2;
reg   [0:0] icmp_ln67_reg_922;
reg   [0:0] icmp_ln67_reg_922_pp0_iter5_reg;
reg   [0:0] icmp_ln67_reg_922_pp0_iter6_reg;
reg   [0:0] icmp_ln67_reg_922_pp0_iter7_reg;
reg   [0:0] icmp_ln67_reg_922_pp0_iter8_reg;
reg   [0:0] icmp_ln67_reg_922_pp0_iter9_reg;
wire   [31:0] absdiff_fu_659_p1;
reg   [31:0] absdiff_reg_927;
reg   [31:0] absdiff_reg_927_pp0_iter6_reg;
reg   [31:0] absdiff_reg_927_pp0_iter7_reg;
reg   [31:0] absdiff_reg_927_pp0_iter8_reg;
reg   [31:0] absdiff_reg_927_pp0_iter9_reg;
wire   [31:0] grp_fu_367_p2;
reg   [31:0] add_reg_933;
reg   [3:0] trunc_ln79_reg_942;
reg   [3:0] trunc_ln79_reg_942_pp1_iter1_reg;
reg   [3:0] trunc_ln79_reg_942_pp1_iter2_reg;
reg   [3:0] trunc_ln79_reg_942_pp1_iter3_reg;
reg   [3:0] trunc_ln79_reg_942_pp1_iter4_reg;
reg   [3:0] trunc_ln79_reg_942_pp1_iter5_reg;
wire   [3:0] or_ln79_fu_777_p2;
wire   [4:0] add_ln78_fu_783_p2;
reg   [3:0] trunc_ln79_1_reg_959;
reg   [3:0] trunc_ln79_1_reg_959_pp2_iter1_reg;
reg   [3:0] trunc_ln79_1_reg_959_pp2_iter2_reg;
reg   [3:0] trunc_ln79_1_reg_959_pp2_iter3_reg;
reg   [3:0] trunc_ln79_1_reg_959_pp2_iter4_reg;
reg   [3:0] trunc_ln79_1_reg_959_pp2_iter5_reg;
wire   [3:0] or_ln79_1_fu_825_p2;
wire   [4:0] add_ln78_1_fu_831_p2;
wire   [0:0] tmp_3_fu_837_p3;
wire    ap_CS_fsm_pp3_stage0;
wire   [31:0] select_ln79_fu_861_p3;
reg   [31:0] select_ln79_reg_976;
wire   [0:0] icmp_ln79_1_fu_869_p2;
reg   [0:0] icmp_ln79_1_reg_981;
reg   [0:0] icmp_ln79_1_reg_981_pp3_iter1_reg;
reg   [0:0] icmp_ln79_1_reg_981_pp3_iter2_reg;
reg   [0:0] icmp_ln79_1_reg_981_pp3_iter3_reg;
reg   [0:0] icmp_ln79_1_reg_981_pp3_iter4_reg;
reg   [0:0] icmp_ln79_1_reg_981_pp3_iter5_reg;
wire   [31:0] select_ln79_1_fu_875_p3;
reg   [31:0] select_ln79_1_reg_985;
wire   [4:0] add_ln78_2_fu_883_p2;
reg    ap_enable_reg_pp3_iter0;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state14;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter6;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state22;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter6;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state30;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
reg    ap_enable_reg_pp3_iter4;
reg    ap_enable_reg_pp3_iter6;
reg   [31:0] ap_phi_mux_p_phi_fu_202_p4;
reg   [31:0] ap_phi_mux_n_phi_fu_213_p4;
wire   [31:0] ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_220;
reg   [31:0] ap_phi_reg_pp0_iter1_UnifiedRetVal_i_reg_220;
reg   [31:0] ap_phi_reg_pp0_iter2_UnifiedRetVal_i_reg_220;
reg   [31:0] ap_phi_reg_pp0_iter3_UnifiedRetVal_i_reg_220;
reg   [31:0] ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220;
wire   [31:0] ap_phi_reg_pp1_iter0_phi_ln79_reg_269;
reg   [31:0] ap_phi_reg_pp1_iter1_phi_ln79_reg_269;
wire   [31:0] ap_phi_reg_pp1_iter0_phi_ln79_2_reg_291;
reg   [31:0] ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291;
wire   [31:0] ap_phi_reg_pp2_iter0_phi_ln79_1_reg_324;
reg   [31:0] ap_phi_reg_pp2_iter1_phi_ln79_1_reg_324;
wire   [31:0] ap_phi_reg_pp2_iter0_phi_ln79_3_reg_338;
reg   [31:0] ap_phi_reg_pp2_iter1_phi_ln79_3_reg_338;
wire    ap_CS_fsm_state42;
reg   [31:0] ap_sig_allocacmp_res_p_0_load;
wire    ap_block_pp3_stage0;
reg   [31:0] ap_sig_allocacmp_res_p_0_load_3;
wire    ap_block_pp2_stage0;
reg   [31:0] ap_sig_allocacmp_res_p_0_load_2;
wire    ap_block_pp1_stage0;
wire   [31:0] select_ln67_fu_664_p3;
reg   [31:0] ap_sig_allocacmp_res_p_0_load_4;
reg   [31:0] ap_sig_allocacmp_res_p_1_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_2_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_2_load_2;
reg   [31:0] ap_sig_allocacmp_res_p_3_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_4_load_2;
reg   [31:0] ap_sig_allocacmp_res_p_4_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_4_load_3;
reg   [31:0] ap_sig_allocacmp_res_p_5_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_6_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_6_load_2;
reg   [31:0] ap_sig_allocacmp_res_p_7_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_8_load;
reg   [31:0] ap_sig_allocacmp_res_p_8_load_3;
reg   [31:0] ap_sig_allocacmp_res_p_8_load_2;
reg   [31:0] ap_sig_allocacmp_res_p_8_load_4;
reg   [31:0] ap_sig_allocacmp_res_p_9_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_10_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_10_load_2;
reg   [31:0] ap_sig_allocacmp_res_p_11_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_12_load_2;
reg   [31:0] ap_sig_allocacmp_res_p_12_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_12_load_3;
reg   [31:0] ap_sig_allocacmp_res_p_13_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_14_load_1;
reg   [31:0] ap_sig_allocacmp_res_p_14_load_2;
reg   [31:0] ap_sig_allocacmp_res_p_15_load_1;
reg   [31:0] grp_fu_363_p0;
reg   [31:0] grp_fu_363_p1;
wire   [31:0] grp_fu_367_p1;
wire   [0:0] icmp_ln69_fu_602_p2;
wire   [31:0] add_ln69_fu_608_p2;
wire   [31:0] data_V_fu_628_p1;
wire   [27:0] tmp_fu_636_p4;
wire   [31:0] p_Result_s_fu_652_p3;
wire   [3:0] trunc_ln79_2_fu_845_p1;
wire   [3:0] or_ln79_2_fu_849_p2;
wire   [0:0] icmp_ln79_fu_855_p2;
reg   [1:0] grp_fu_363_opcode;
wire    ap_block_pp1_stage0_00001;
wire    ap_block_pp2_stage0_00001;
wire    ap_block_pp3_stage0_00001;
reg    ap_block_pp0_stage0_00001;
reg    grp_fu_363_ce;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
reg    grp_fu_367_ce;
reg   [13:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire    regslice_both_in1_s_V_data_V_U_apdone_blk;
wire   [31:0] in1_s_TDATA_int_regslice;
wire    in1_s_TVALID_int_regslice;
reg    in1_s_TREADY_int_regslice;
wire    regslice_both_in1_s_V_data_V_U_ack_in;
wire    regslice_both_in1_s_V_keep_V_U_apdone_blk;
wire   [3:0] in1_s_TKEEP_int_regslice;
wire    regslice_both_in1_s_V_keep_V_U_vld_out;
wire    regslice_both_in1_s_V_keep_V_U_ack_in;
wire    regslice_both_in1_s_V_strb_V_U_apdone_blk;
wire   [3:0] in1_s_TSTRB_int_regslice;
wire    regslice_both_in1_s_V_strb_V_U_vld_out;
wire    regslice_both_in1_s_V_strb_V_U_ack_in;
wire    regslice_both_in1_s_V_user_V_U_apdone_blk;
wire   [0:0] in1_s_TUSER_int_regslice;
wire    regslice_both_in1_s_V_user_V_U_vld_out;
wire    regslice_both_in1_s_V_user_V_U_ack_in;
wire    regslice_both_in1_s_V_last_V_U_apdone_blk;
wire   [0:0] in1_s_TLAST_int_regslice;
wire    regslice_both_in1_s_V_last_V_U_vld_out;
wire    regslice_both_in1_s_V_last_V_U_ack_in;
wire    regslice_both_in1_s_V_id_V_U_apdone_blk;
wire   [0:0] in1_s_TID_int_regslice;
wire    regslice_both_in1_s_V_id_V_U_vld_out;
wire    regslice_both_in1_s_V_id_V_U_ack_in;
wire    regslice_both_in1_s_V_dest_V_U_apdone_blk;
wire   [0:0] in1_s_TDEST_int_regslice;
wire    regslice_both_in1_s_V_dest_V_U_vld_out;
wire    regslice_both_in1_s_V_dest_V_U_ack_in;
wire    regslice_both_in2_s_V_data_V_U_apdone_blk;
wire   [31:0] in2_s_TDATA_int_regslice;
wire    in2_s_TVALID_int_regslice;
reg    in2_s_TREADY_int_regslice;
wire    regslice_both_in2_s_V_data_V_U_ack_in;
wire    regslice_both_in2_s_V_keep_V_U_apdone_blk;
wire   [3:0] in2_s_TKEEP_int_regslice;
wire    regslice_both_in2_s_V_keep_V_U_vld_out;
wire    regslice_both_in2_s_V_keep_V_U_ack_in;
wire    regslice_both_in2_s_V_strb_V_U_apdone_blk;
wire   [3:0] in2_s_TSTRB_int_regslice;
wire    regslice_both_in2_s_V_strb_V_U_vld_out;
wire    regslice_both_in2_s_V_strb_V_U_ack_in;
wire    regslice_both_in2_s_V_user_V_U_apdone_blk;
wire   [0:0] in2_s_TUSER_int_regslice;
wire    regslice_both_in2_s_V_user_V_U_vld_out;
wire    regslice_both_in2_s_V_user_V_U_ack_in;
wire    regslice_both_in2_s_V_last_V_U_apdone_blk;
wire   [0:0] in2_s_TLAST_int_regslice;
wire    regslice_both_in2_s_V_last_V_U_vld_out;
wire    regslice_both_in2_s_V_last_V_U_ack_in;
wire    regslice_both_in2_s_V_id_V_U_apdone_blk;
wire   [0:0] in2_s_TID_int_regslice;
wire    regslice_both_in2_s_V_id_V_U_vld_out;
wire    regslice_both_in2_s_V_id_V_U_ack_in;
wire    regslice_both_in2_s_V_dest_V_U_apdone_blk;
wire   [0:0] in2_s_TDEST_int_regslice;
wire    regslice_both_in2_s_V_dest_V_U_vld_out;
wire    regslice_both_in2_s_V_dest_V_U_ack_in;
reg    ap_condition_245;
reg    ap_condition_213;
reg    ap_condition_778;
reg    ap_condition_804;
reg    ap_condition_280;
reg    ap_condition_292;
wire    ap_ce_reg;
wire   [31:0] ap_return;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 res_p_0 = 32'd0;
#0 res_p_1 = 32'd0;
#0 res_p_2 = 32'd0;
#0 res_p_3 = 32'd0;
#0 res_p_4 = 32'd0;
#0 res_p_5 = 32'd0;
#0 res_p_6 = 32'd0;
#0 res_p_7 = 32'd0;
#0 res_p_8 = 32'd0;
#0 res_p_9 = 32'd0;
#0 res_p_10 = 32'd0;
#0 res_p_11 = 32'd0;
#0 res_p_12 = 32'd0;
#0 res_p_13 = 32'd0;
#0 res_p_14 = 32'd0;
#0 res_p_15 = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
end

sad_reduce_all_f4_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_return(reg_548)
);

sad_reduce_all_f4_faddfsub_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_363_p0),
    .din1(grp_fu_363_p1),
    .opcode(grp_fu_363_opcode),
    .ce(grp_fu_363_ce),
    .dout(grp_fu_363_p2)
);

sad_reduce_all_f4_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(UnifiedRetVal_i_reg_220),
    .din1(grp_fu_367_p1),
    .ce(grp_fu_367_ce),
    .dout(grp_fu_367_p2)
);

sad_reduce_all_f4_regslice_both #(
    .DataWidth( 32 ))
regslice_both_in1_s_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in1_s_TDATA),
    .vld_in(in1_s_TVALID),
    .ack_in(regslice_both_in1_s_V_data_V_U_ack_in),
    .data_out(in1_s_TDATA_int_regslice),
    .vld_out(in1_s_TVALID_int_regslice),
    .ack_out(in1_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in1_s_V_data_V_U_apdone_blk)
);

sad_reduce_all_f4_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in1_s_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in1_s_TKEEP),
    .vld_in(in1_s_TVALID),
    .ack_in(regslice_both_in1_s_V_keep_V_U_ack_in),
    .data_out(in1_s_TKEEP_int_regslice),
    .vld_out(regslice_both_in1_s_V_keep_V_U_vld_out),
    .ack_out(in1_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in1_s_V_keep_V_U_apdone_blk)
);

sad_reduce_all_f4_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in1_s_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in1_s_TSTRB),
    .vld_in(in1_s_TVALID),
    .ack_in(regslice_both_in1_s_V_strb_V_U_ack_in),
    .data_out(in1_s_TSTRB_int_regslice),
    .vld_out(regslice_both_in1_s_V_strb_V_U_vld_out),
    .ack_out(in1_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in1_s_V_strb_V_U_apdone_blk)
);

sad_reduce_all_f4_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in1_s_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in1_s_TUSER),
    .vld_in(in1_s_TVALID),
    .ack_in(regslice_both_in1_s_V_user_V_U_ack_in),
    .data_out(in1_s_TUSER_int_regslice),
    .vld_out(regslice_both_in1_s_V_user_V_U_vld_out),
    .ack_out(in1_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in1_s_V_user_V_U_apdone_blk)
);

sad_reduce_all_f4_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in1_s_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in1_s_TLAST),
    .vld_in(in1_s_TVALID),
    .ack_in(regslice_both_in1_s_V_last_V_U_ack_in),
    .data_out(in1_s_TLAST_int_regslice),
    .vld_out(regslice_both_in1_s_V_last_V_U_vld_out),
    .ack_out(in1_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in1_s_V_last_V_U_apdone_blk)
);

sad_reduce_all_f4_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in1_s_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in1_s_TID),
    .vld_in(in1_s_TVALID),
    .ack_in(regslice_both_in1_s_V_id_V_U_ack_in),
    .data_out(in1_s_TID_int_regslice),
    .vld_out(regslice_both_in1_s_V_id_V_U_vld_out),
    .ack_out(in1_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in1_s_V_id_V_U_apdone_blk)
);

sad_reduce_all_f4_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in1_s_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in1_s_TDEST),
    .vld_in(in1_s_TVALID),
    .ack_in(regslice_both_in1_s_V_dest_V_U_ack_in),
    .data_out(in1_s_TDEST_int_regslice),
    .vld_out(regslice_both_in1_s_V_dest_V_U_vld_out),
    .ack_out(in1_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in1_s_V_dest_V_U_apdone_blk)
);

sad_reduce_all_f4_regslice_both #(
    .DataWidth( 32 ))
regslice_both_in2_s_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in2_s_TDATA),
    .vld_in(in2_s_TVALID),
    .ack_in(regslice_both_in2_s_V_data_V_U_ack_in),
    .data_out(in2_s_TDATA_int_regslice),
    .vld_out(in2_s_TVALID_int_regslice),
    .ack_out(in2_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in2_s_V_data_V_U_apdone_blk)
);

sad_reduce_all_f4_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in2_s_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in2_s_TKEEP),
    .vld_in(in2_s_TVALID),
    .ack_in(regslice_both_in2_s_V_keep_V_U_ack_in),
    .data_out(in2_s_TKEEP_int_regslice),
    .vld_out(regslice_both_in2_s_V_keep_V_U_vld_out),
    .ack_out(in2_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in2_s_V_keep_V_U_apdone_blk)
);

sad_reduce_all_f4_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in2_s_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in2_s_TSTRB),
    .vld_in(in2_s_TVALID),
    .ack_in(regslice_both_in2_s_V_strb_V_U_ack_in),
    .data_out(in2_s_TSTRB_int_regslice),
    .vld_out(regslice_both_in2_s_V_strb_V_U_vld_out),
    .ack_out(in2_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in2_s_V_strb_V_U_apdone_blk)
);

sad_reduce_all_f4_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in2_s_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in2_s_TUSER),
    .vld_in(in2_s_TVALID),
    .ack_in(regslice_both_in2_s_V_user_V_U_ack_in),
    .data_out(in2_s_TUSER_int_regslice),
    .vld_out(regslice_both_in2_s_V_user_V_U_vld_out),
    .ack_out(in2_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in2_s_V_user_V_U_apdone_blk)
);

sad_reduce_all_f4_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in2_s_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in2_s_TLAST),
    .vld_in(in2_s_TVALID),
    .ack_in(regslice_both_in2_s_V_last_V_U_ack_in),
    .data_out(in2_s_TLAST_int_regslice),
    .vld_out(regslice_both_in2_s_V_last_V_U_vld_out),
    .ack_out(in2_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in2_s_V_last_V_U_apdone_blk)
);

sad_reduce_all_f4_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in2_s_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in2_s_TID),
    .vld_in(in2_s_TVALID),
    .ack_in(regslice_both_in2_s_V_id_V_U_ack_in),
    .data_out(in2_s_TID_int_regslice),
    .vld_out(regslice_both_in2_s_V_id_V_U_vld_out),
    .ack_out(in2_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in2_s_V_id_V_U_apdone_blk)
);

sad_reduce_all_f4_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in2_s_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in2_s_TDEST),
    .vld_in(in2_s_TVALID),
    .ack_in(regslice_both_in2_s_V_dest_V_U_ack_in),
    .data_out(in2_s_TDEST_int_regslice),
    .vld_out(regslice_both_in2_s_V_dest_V_U_vld_out),
    .ack_out(in2_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_in2_s_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state14)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state14);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp1_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state22) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state22)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state22);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp2_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state30) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state30)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state30);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            ap_enable_reg_pp3_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if ((trunc_ln65_fu_598_p1 == 4'd15)) begin
            ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_438_p1;
        end else if ((trunc_ln65_fu_598_p1 == 4'd14)) begin
            ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_376_p1;
        end else if ((trunc_ln65_fu_598_p1 == 4'd13)) begin
            ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_380_p1;
        end else if ((trunc_ln65_fu_598_p1 == 4'd12)) begin
            ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_384_p1;
        end else if ((trunc_ln65_fu_598_p1 == 4'd11)) begin
            ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_388_p1;
        end else if ((trunc_ln65_fu_598_p1 == 4'd10)) begin
            ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_392_p1;
        end else if ((trunc_ln65_fu_598_p1 == 4'd9)) begin
            ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_396_p1;
        end else if ((trunc_ln65_fu_598_p1 == 4'd8)) begin
            ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_400_p1;
        end else if ((trunc_ln65_fu_598_p1 == 4'd7)) begin
            ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_405_p1;
        end else if ((trunc_ln65_fu_598_p1 == 4'd6)) begin
            ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_409_p1;
        end else if ((trunc_ln65_fu_598_p1 == 4'd5)) begin
            ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_413_p1;
        end else if ((trunc_ln65_fu_598_p1 == 4'd4)) begin
            ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_417_p1;
        end else if ((trunc_ln65_fu_598_p1 == 4'd3)) begin
            ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_421_p1;
        end else if ((trunc_ln65_fu_598_p1 == 4'd2)) begin
            ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_425_p1;
        end else if ((trunc_ln65_fu_598_p1 == 4'd1)) begin
            ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_429_p1;
        end else if ((trunc_ln65_fu_598_p1 == 4'd0)) begin
            ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= grp_load_fu_433_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220 <= ap_phi_reg_pp0_iter3_UnifiedRetVal_i_reg_220;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_213)) begin
        if ((1'b1 == ap_condition_245)) begin
            ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291 <= grp_load_fu_376_p1;
        end else if (((trunc_ln79_fu_773_p1 == 4'd12) & (tmp_1_fu_765_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291 <= grp_load_fu_384_p1;
        end else if (((trunc_ln79_fu_773_p1 == 4'd10) & (tmp_1_fu_765_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291 <= grp_load_fu_392_p1;
        end else if (((trunc_ln79_fu_773_p1 == 4'd8) & (tmp_1_fu_765_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291 <= grp_load_fu_400_p1;
        end else if (((trunc_ln79_fu_773_p1 == 4'd6) & (tmp_1_fu_765_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291 <= grp_load_fu_409_p1;
        end else if (((trunc_ln79_fu_773_p1 == 4'd4) & (tmp_1_fu_765_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291 <= grp_load_fu_417_p1;
        end else if (((trunc_ln79_fu_773_p1 == 4'd2) & (tmp_1_fu_765_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291 <= grp_load_fu_425_p1;
        end else if (((trunc_ln79_fu_773_p1 == 4'd0) & (tmp_1_fu_765_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291 <= grp_load_fu_433_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291 <= ap_phi_reg_pp1_iter0_phi_ln79_2_reg_291;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_213)) begin
        if (((or_ln79_fu_777_p2 == 4'd1) & (tmp_1_fu_765_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln79_reg_269 <= reg_528;
        end else if ((1'b1 == ap_condition_778)) begin
            ap_phi_reg_pp1_iter1_phi_ln79_reg_269 <= reg_542;
        end else if (((or_ln79_fu_777_p2 == 4'd13) & (tmp_1_fu_765_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln79_reg_269 <= reg_449;
        end else if (((or_ln79_fu_777_p2 == 4'd11) & (tmp_1_fu_765_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln79_reg_269 <= reg_462;
        end else if (((or_ln79_fu_777_p2 == 4'd9) & (tmp_1_fu_765_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln79_reg_269 <= reg_475;
        end else if (((or_ln79_fu_777_p2 == 4'd7) & (tmp_1_fu_765_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln79_reg_269 <= reg_489;
        end else if (((or_ln79_fu_777_p2 == 4'd5) & (tmp_1_fu_765_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln79_reg_269 <= reg_502;
        end else if (((or_ln79_fu_777_p2 == 4'd3) & (tmp_1_fu_765_p3 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_phi_ln79_reg_269 <= reg_515;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter1_phi_ln79_reg_269 <= ap_phi_reg_pp1_iter0_phi_ln79_reg_269;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_280)) begin
        if (((or_ln79_1_fu_825_p2 == 4'd2) & (tmp_2_fu_813_p3 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln79_1_reg_324 <= reg_521;
        end else if ((1'b1 == ap_condition_804)) begin
            ap_phi_reg_pp2_iter1_phi_ln79_1_reg_324 <= reg_442;
        end else if (((or_ln79_1_fu_825_p2 == 4'd10) & (tmp_2_fu_813_p3 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln79_1_reg_324 <= reg_468;
        end else if (((or_ln79_1_fu_825_p2 == 4'd6) & (tmp_2_fu_813_p3 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln79_1_reg_324 <= reg_495;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp2_iter1_phi_ln79_1_reg_324 <= ap_phi_reg_pp2_iter0_phi_ln79_1_reg_324;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_280)) begin
        if ((1'b1 == ap_condition_292)) begin
            ap_phi_reg_pp2_iter1_phi_ln79_3_reg_338 <= grp_load_fu_384_p1;
        end else if (((trunc_ln79_1_fu_821_p1 == 4'd8) & (tmp_2_fu_813_p3 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln79_3_reg_338 <= grp_load_fu_400_p1;
        end else if (((trunc_ln79_1_fu_821_p1 == 4'd4) & (tmp_2_fu_813_p3 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln79_3_reg_338 <= grp_load_fu_417_p1;
        end else if (((trunc_ln79_1_fu_821_p1 == 4'd0) & (tmp_2_fu_813_p3 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln79_3_reg_338 <= grp_load_fu_433_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp2_iter1_phi_ln79_3_reg_338 <= ap_phi_reg_pp2_iter0_phi_ln79_3_reg_338;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i_1_reg_313 <= 5'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (tmp_2_fu_813_p3 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_1_reg_313 <= add_ln78_1_fu_831_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        i_2_reg_352 <= 5'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (tmp_3_fu_837_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_2_reg_352 <= add_ln78_2_fu_883_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_reg_258 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_1_fu_765_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_reg_258 <= add_ln78_fu_783_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (in1_c_last_V_reg_889_pp0_iter4_reg == 1'd0))) begin
        n_reg_209 <= n_1_reg_912;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        n_reg_209 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (in1_c_last_V_reg_889_pp0_iter3_reg == 1'd0))) begin
        p_reg_198 <= p_1_reg_907;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_reg_198 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd0))) begin
        res_p_0 <= select_ln67_fu_664_p3;
    end else if (((1'b1 == ap_CS_fsm_state42) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter6 == 1'b1) & (icmp_ln79_1_reg_981_pp3_iter5_reg == 1'd1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (trunc_ln79_1_reg_959_pp2_iter5_reg == 4'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1) & (trunc_ln79_reg_942_pp1_iter5_reg == 4'd0)))) begin
        res_p_0 <= reg_548;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd10))) begin
        res_p_10 <= select_ln67_fu_664_p3;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1) & (trunc_ln79_reg_942_pp1_iter5_reg == 4'd10))) begin
        res_p_10 <= reg_548;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd12))) begin
        res_p_12 <= select_ln67_fu_664_p3;
    end else if (((~(trunc_ln79_1_reg_959_pp2_iter5_reg == 4'd8) & ~(trunc_ln79_1_reg_959_pp2_iter5_reg == 4'd4) & ~(trunc_ln79_1_reg_959_pp2_iter5_reg == 4'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1) & (trunc_ln79_reg_942_pp1_iter5_reg == 4'd12)))) begin
        res_p_12 <= reg_548;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd14))) begin
        res_p_14 <= select_ln67_fu_664_p3;
    end else if ((~(trunc_ln79_reg_942_pp1_iter5_reg == 4'd12) & ~(trunc_ln79_reg_942_pp1_iter5_reg == 4'd10) & ~(trunc_ln79_reg_942_pp1_iter5_reg == 4'd8) & ~(trunc_ln79_reg_942_pp1_iter5_reg == 4'd6) & ~(trunc_ln79_reg_942_pp1_iter5_reg == 4'd4) & ~(trunc_ln79_reg_942_pp1_iter5_reg == 4'd2) & ~(trunc_ln79_reg_942_pp1_iter5_reg == 4'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
        res_p_14 <= reg_548;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd2))) begin
        res_p_2 <= select_ln67_fu_664_p3;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1) & (trunc_ln79_reg_942_pp1_iter5_reg == 4'd2))) begin
        res_p_2 <= reg_548;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd4))) begin
        res_p_4 <= select_ln67_fu_664_p3;
    end else if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (trunc_ln79_1_reg_959_pp2_iter5_reg == 4'd4)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1) & (trunc_ln79_reg_942_pp1_iter5_reg == 4'd4)))) begin
        res_p_4 <= reg_548;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd6))) begin
        res_p_6 <= select_ln67_fu_664_p3;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1) & (trunc_ln79_reg_942_pp1_iter5_reg == 4'd6))) begin
        res_p_6 <= reg_548;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd8))) begin
        res_p_8 <= select_ln67_fu_664_p3;
    end else if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter6 == 1'b1) & (icmp_ln79_1_reg_981_pp3_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (trunc_ln79_1_reg_959_pp2_iter5_reg == 4'd8)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1) & (trunc_ln79_reg_942_pp1_iter5_reg == 4'd8)))) begin
        res_p_8 <= reg_548;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        UnifiedRetVal_i_reg_220 <= ap_phi_reg_pp0_iter4_UnifiedRetVal_i_reg_220;
        n_1_reg_912 <= n_1_fu_622_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        absdiff_reg_927[30 : 0] <= absdiff_fu_659_p1[30 : 0];
        absdiff_reg_927_pp0_iter6_reg[30 : 0] <= absdiff_reg_927[30 : 0];
        absdiff_reg_927_pp0_iter7_reg[30 : 0] <= absdiff_reg_927_pp0_iter6_reg[30 : 0];
        absdiff_reg_927_pp0_iter8_reg[30 : 0] <= absdiff_reg_927_pp0_iter7_reg[30 : 0];
        absdiff_reg_927_pp0_iter9_reg[30 : 0] <= absdiff_reg_927_pp0_iter8_reg[30 : 0];
        icmp_ln67_reg_922 <= icmp_ln67_fu_646_p2;
        icmp_ln67_reg_922_pp0_iter5_reg <= icmp_ln67_reg_922;
        icmp_ln67_reg_922_pp0_iter6_reg <= icmp_ln67_reg_922_pp0_iter5_reg;
        icmp_ln67_reg_922_pp0_iter7_reg <= icmp_ln67_reg_922_pp0_iter6_reg;
        icmp_ln67_reg_922_pp0_iter8_reg <= icmp_ln67_reg_922_pp0_iter7_reg;
        icmp_ln67_reg_922_pp0_iter9_reg <= icmp_ln67_reg_922_pp0_iter8_reg;
        in1_c_last_V_reg_889_pp0_iter2_reg <= in1_c_last_V_reg_889_pp0_iter1_reg;
        in1_c_last_V_reg_889_pp0_iter3_reg <= in1_c_last_V_reg_889_pp0_iter2_reg;
        in1_c_last_V_reg_889_pp0_iter4_reg <= in1_c_last_V_reg_889_pp0_iter3_reg;
        trunc_ln368_reg_917 <= trunc_ln368_fu_632_p1;
        trunc_ln65_reg_903 <= trunc_ln65_fu_598_p1;
        trunc_ln65_reg_903_pp0_iter4_reg <= trunc_ln65_reg_903;
        trunc_ln65_reg_903_pp0_iter5_reg <= trunc_ln65_reg_903_pp0_iter4_reg;
        trunc_ln65_reg_903_pp0_iter6_reg <= trunc_ln65_reg_903_pp0_iter5_reg;
        trunc_ln65_reg_903_pp0_iter7_reg <= trunc_ln65_reg_903_pp0_iter6_reg;
        trunc_ln65_reg_903_pp0_iter8_reg <= trunc_ln65_reg_903_pp0_iter7_reg;
        trunc_ln65_reg_903_pp0_iter9_reg <= trunc_ln65_reg_903_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln67_reg_922_pp0_iter8_reg == 1'd0))) begin
        add_reg_933 <= grp_fu_367_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_UnifiedRetVal_i_reg_220 <= ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_220;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_UnifiedRetVal_i_reg_220 <= ap_phi_reg_pp0_iter1_UnifiedRetVal_i_reg_220;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_UnifiedRetVal_i_reg_220 <= ap_phi_reg_pp0_iter2_UnifiedRetVal_i_reg_220;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (tmp_3_fu_837_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln79_1_reg_981 <= icmp_ln79_1_fu_869_p2;
        select_ln79_1_reg_985 <= select_ln79_1_fu_875_p3;
        select_ln79_reg_976 <= select_ln79_fu_861_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln79_1_reg_981_pp3_iter1_reg <= icmp_ln79_1_reg_981;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln79_1_reg_981_pp3_iter2_reg <= icmp_ln79_1_reg_981_pp3_iter1_reg;
        icmp_ln79_1_reg_981_pp3_iter3_reg <= icmp_ln79_1_reg_981_pp3_iter2_reg;
        icmp_ln79_1_reg_981_pp3_iter4_reg <= icmp_ln79_1_reg_981_pp3_iter3_reg;
        icmp_ln79_1_reg_981_pp3_iter5_reg <= icmp_ln79_1_reg_981_pp3_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in1_c_last_V_reg_889 <= in1_s_TLAST_int_regslice;
        in1_c_last_V_reg_889_pp0_iter1_reg <= in1_c_last_V_reg_889;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        p_1_reg_907 <= p_1_fu_614_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) | (~(trunc_ln79_fu_773_p1 == 4'd12) & ~(trunc_ln79_fu_773_p1 == 4'd10) & ~(trunc_ln79_fu_773_p1 == 4'd8) & ~(trunc_ln79_fu_773_p1 == 4'd6) & ~(trunc_ln79_fu_773_p1 == 4'd4) & ~(trunc_ln79_fu_773_p1 == 4'd2) & ~(trunc_ln79_fu_773_p1 == 4'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (tmp_1_fu_765_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln65_fu_598_p1 == 4'd14) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        reg_442 <= grp_load_fu_376_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln65_fu_598_p1 == 4'd13) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        reg_449 <= grp_load_fu_380_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) | (~(trunc_ln79_1_fu_821_p1 == 4'd8) & ~(trunc_ln79_1_fu_821_p1 == 4'd4) & ~(trunc_ln79_1_fu_821_p1 == 4'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (tmp_2_fu_813_p3 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln79_fu_773_p1 == 4'd12) & (tmp_1_fu_765_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln65_fu_598_p1 == 4'd12) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        reg_455 <= grp_load_fu_384_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln65_fu_598_p1 == 4'd11) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        reg_462 <= grp_load_fu_388_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln79_fu_773_p1 == 4'd10) & (tmp_1_fu_765_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln65_fu_598_p1 == 4'd10) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        reg_468 <= grp_load_fu_392_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln65_fu_598_p1 == 4'd9) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        reg_475 <= grp_load_fu_396_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln65_fu_598_p1 == 4'd7) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        reg_489 <= grp_load_fu_405_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln79_fu_773_p1 == 4'd6) & (tmp_1_fu_765_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln65_fu_598_p1 == 4'd6) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        reg_495 <= grp_load_fu_409_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln65_fu_598_p1 == 4'd5) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        reg_502 <= grp_load_fu_413_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b0 == ap_block_pp2_stage0_11001) & (trunc_ln79_1_fu_821_p1 == 4'd4) & (tmp_2_fu_813_p3 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln79_fu_773_p1 == 4'd4) & (tmp_1_fu_765_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln65_fu_598_p1 == 4'd4) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        reg_508 <= grp_load_fu_417_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln65_fu_598_p1 == 4'd3) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        reg_515 <= grp_load_fu_421_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln79_fu_773_p1 == 4'd2) & (tmp_1_fu_765_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln65_fu_598_p1 == 4'd2) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        reg_521 <= grp_load_fu_425_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln65_fu_598_p1 == 4'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        reg_528 <= grp_load_fu_429_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln65_fu_598_p1 == 4'd15) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        reg_542 <= grp_load_fu_438_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter5 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter5 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1)))) begin
        reg_548 <= grp_fu_363_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd1))) begin
        res_p_1 <= select_ln67_fu_664_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd11))) begin
        res_p_11 <= select_ln67_fu_664_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd13))) begin
        res_p_13 <= select_ln67_fu_664_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd15))) begin
        res_p_15 <= select_ln67_fu_664_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd3))) begin
        res_p_3 <= select_ln67_fu_664_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd5))) begin
        res_p_5 <= select_ln67_fu_664_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd7))) begin
        res_p_7 <= select_ln67_fu_664_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd9))) begin
        res_p_9 <= select_ln67_fu_664_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (tmp_2_fu_813_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        trunc_ln79_1_reg_959 <= trunc_ln79_1_fu_821_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        trunc_ln79_1_reg_959_pp2_iter1_reg <= trunc_ln79_1_reg_959;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        trunc_ln79_1_reg_959_pp2_iter2_reg <= trunc_ln79_1_reg_959_pp2_iter1_reg;
        trunc_ln79_1_reg_959_pp2_iter3_reg <= trunc_ln79_1_reg_959_pp2_iter2_reg;
        trunc_ln79_1_reg_959_pp2_iter4_reg <= trunc_ln79_1_reg_959_pp2_iter3_reg;
        trunc_ln79_1_reg_959_pp2_iter5_reg <= trunc_ln79_1_reg_959_pp2_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_1_fu_765_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln79_reg_942 <= trunc_ln79_fu_773_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln79_reg_942_pp1_iter1_reg <= trunc_ln79_reg_942;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        trunc_ln79_reg_942_pp1_iter2_reg <= trunc_ln79_reg_942_pp1_iter1_reg;
        trunc_ln79_reg_942_pp1_iter3_reg <= trunc_ln79_reg_942_pp1_iter2_reg;
        trunc_ln79_reg_942_pp1_iter4_reg <= trunc_ln79_reg_942_pp1_iter3_reg;
        trunc_ln79_reg_942_pp1_iter5_reg <= trunc_ln79_reg_942_pp1_iter4_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (in1_c_last_V_fu_580_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_1_fu_765_p3 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_2_fu_813_p3 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state22 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state22 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_3_fu_837_p3 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state30 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state30 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (in1_c_last_V_reg_889_pp0_iter4_reg == 1'd0))) begin
        ap_phi_mux_n_phi_fu_213_p4 = n_1_reg_912;
    end else begin
        ap_phi_mux_n_phi_fu_213_p4 = n_reg_209;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (in1_c_last_V_reg_889_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_phi_fu_202_p4 = p_1_reg_907;
    end else begin
        ap_phi_mux_p_phi_fu_202_p4 = p_reg_198;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter6 == 1'b1) & (icmp_ln79_1_reg_981_pp3_iter5_reg == 1'd1))) begin
        ap_sig_allocacmp_res_p_0_load = reg_548;
    end else begin
        ap_sig_allocacmp_res_p_0_load = res_p_0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (trunc_ln79_reg_942_pp1_iter5_reg == 4'd0))) begin
        ap_sig_allocacmp_res_p_0_load_2 = reg_548;
    end else begin
        ap_sig_allocacmp_res_p_0_load_2 = res_p_0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1) & (trunc_ln79_1_reg_959_pp2_iter5_reg == 4'd0))) begin
        ap_sig_allocacmp_res_p_0_load_3 = reg_548;
    end else begin
        ap_sig_allocacmp_res_p_0_load_3 = res_p_0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd0))) begin
        ap_sig_allocacmp_res_p_0_load_4 = select_ln67_fu_664_p3;
    end else begin
        ap_sig_allocacmp_res_p_0_load_4 = res_p_0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (trunc_ln79_reg_942_pp1_iter5_reg == 4'd10))) begin
        ap_sig_allocacmp_res_p_10_load_1 = reg_548;
    end else begin
        ap_sig_allocacmp_res_p_10_load_1 = res_p_10;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd10))) begin
        ap_sig_allocacmp_res_p_10_load_2 = select_ln67_fu_664_p3;
    end else begin
        ap_sig_allocacmp_res_p_10_load_2 = res_p_10;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd11))) begin
        ap_sig_allocacmp_res_p_11_load_1 = select_ln67_fu_664_p3;
    end else begin
        ap_sig_allocacmp_res_p_11_load_1 = res_p_11;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (trunc_ln79_reg_942_pp1_iter5_reg == 4'd12))) begin
        ap_sig_allocacmp_res_p_12_load_1 = reg_548;
    end else begin
        ap_sig_allocacmp_res_p_12_load_1 = res_p_12;
    end
end

always @ (*) begin
    if ((~(trunc_ln79_1_reg_959_pp2_iter5_reg == 4'd8) & ~(trunc_ln79_1_reg_959_pp2_iter5_reg == 4'd4) & ~(trunc_ln79_1_reg_959_pp2_iter5_reg == 4'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        ap_sig_allocacmp_res_p_12_load_2 = reg_548;
    end else begin
        ap_sig_allocacmp_res_p_12_load_2 = res_p_12;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd12))) begin
        ap_sig_allocacmp_res_p_12_load_3 = select_ln67_fu_664_p3;
    end else begin
        ap_sig_allocacmp_res_p_12_load_3 = res_p_12;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd13))) begin
        ap_sig_allocacmp_res_p_13_load_1 = select_ln67_fu_664_p3;
    end else begin
        ap_sig_allocacmp_res_p_13_load_1 = res_p_13;
    end
end

always @ (*) begin
    if ((~(trunc_ln79_reg_942_pp1_iter5_reg == 4'd12) & ~(trunc_ln79_reg_942_pp1_iter5_reg == 4'd10) & ~(trunc_ln79_reg_942_pp1_iter5_reg == 4'd8) & ~(trunc_ln79_reg_942_pp1_iter5_reg == 4'd6) & ~(trunc_ln79_reg_942_pp1_iter5_reg == 4'd4) & ~(trunc_ln79_reg_942_pp1_iter5_reg == 4'd2) & ~(trunc_ln79_reg_942_pp1_iter5_reg == 4'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
        ap_sig_allocacmp_res_p_14_load_1 = reg_548;
    end else begin
        ap_sig_allocacmp_res_p_14_load_1 = res_p_14;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd14))) begin
        ap_sig_allocacmp_res_p_14_load_2 = select_ln67_fu_664_p3;
    end else begin
        ap_sig_allocacmp_res_p_14_load_2 = res_p_14;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd15))) begin
        ap_sig_allocacmp_res_p_15_load_1 = select_ln67_fu_664_p3;
    end else begin
        ap_sig_allocacmp_res_p_15_load_1 = res_p_15;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd1))) begin
        ap_sig_allocacmp_res_p_1_load_1 = select_ln67_fu_664_p3;
    end else begin
        ap_sig_allocacmp_res_p_1_load_1 = res_p_1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (trunc_ln79_reg_942_pp1_iter5_reg == 4'd2))) begin
        ap_sig_allocacmp_res_p_2_load_1 = reg_548;
    end else begin
        ap_sig_allocacmp_res_p_2_load_1 = res_p_2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd2))) begin
        ap_sig_allocacmp_res_p_2_load_2 = select_ln67_fu_664_p3;
    end else begin
        ap_sig_allocacmp_res_p_2_load_2 = res_p_2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd3))) begin
        ap_sig_allocacmp_res_p_3_load_1 = select_ln67_fu_664_p3;
    end else begin
        ap_sig_allocacmp_res_p_3_load_1 = res_p_3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (trunc_ln79_reg_942_pp1_iter5_reg == 4'd4))) begin
        ap_sig_allocacmp_res_p_4_load_1 = reg_548;
    end else begin
        ap_sig_allocacmp_res_p_4_load_1 = res_p_4;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1) & (trunc_ln79_1_reg_959_pp2_iter5_reg == 4'd4))) begin
        ap_sig_allocacmp_res_p_4_load_2 = reg_548;
    end else begin
        ap_sig_allocacmp_res_p_4_load_2 = res_p_4;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd4))) begin
        ap_sig_allocacmp_res_p_4_load_3 = select_ln67_fu_664_p3;
    end else begin
        ap_sig_allocacmp_res_p_4_load_3 = res_p_4;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd5))) begin
        ap_sig_allocacmp_res_p_5_load_1 = select_ln67_fu_664_p3;
    end else begin
        ap_sig_allocacmp_res_p_5_load_1 = res_p_5;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (trunc_ln79_reg_942_pp1_iter5_reg == 4'd6))) begin
        ap_sig_allocacmp_res_p_6_load_1 = reg_548;
    end else begin
        ap_sig_allocacmp_res_p_6_load_1 = res_p_6;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd6))) begin
        ap_sig_allocacmp_res_p_6_load_2 = select_ln67_fu_664_p3;
    end else begin
        ap_sig_allocacmp_res_p_6_load_2 = res_p_6;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd7))) begin
        ap_sig_allocacmp_res_p_7_load_1 = select_ln67_fu_664_p3;
    end else begin
        ap_sig_allocacmp_res_p_7_load_1 = res_p_7;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter6 == 1'b1) & (icmp_ln79_1_reg_981_pp3_iter5_reg == 1'd0))) begin
        ap_sig_allocacmp_res_p_8_load = reg_548;
    end else begin
        ap_sig_allocacmp_res_p_8_load = res_p_8;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (trunc_ln79_reg_942_pp1_iter5_reg == 4'd8))) begin
        ap_sig_allocacmp_res_p_8_load_2 = reg_548;
    end else begin
        ap_sig_allocacmp_res_p_8_load_2 = res_p_8;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1) & (trunc_ln79_1_reg_959_pp2_iter5_reg == 4'd8))) begin
        ap_sig_allocacmp_res_p_8_load_3 = reg_548;
    end else begin
        ap_sig_allocacmp_res_p_8_load_3 = res_p_8;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd8))) begin
        ap_sig_allocacmp_res_p_8_load_4 = select_ln67_fu_664_p3;
    end else begin
        ap_sig_allocacmp_res_p_8_load_4 = res_p_8;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (trunc_ln65_reg_903_pp0_iter9_reg == 4'd9))) begin
        ap_sig_allocacmp_res_p_9_load_1 = select_ln67_fu_664_p3;
    end else begin
        ap_sig_allocacmp_res_p_9_load_1 = res_p_9;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_363_ce = 1'b1;
    end else begin
        grp_fu_363_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_363_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state37) | ((1'b0 == ap_block_pp3_stage0_00001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_00001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_00001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        grp_fu_363_opcode = 2'd0;
    end else begin
        grp_fu_363_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_363_p0 = grp_load_fu_433_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_fu_363_p0 = select_ln79_1_reg_985;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_363_p0 = ap_phi_reg_pp2_iter1_phi_ln79_3_reg_338;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_363_p0 = ap_phi_reg_pp1_iter1_phi_ln79_2_reg_291;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_363_p0 = bitcast_ln64_fu_588_p1;
    end else begin
        grp_fu_363_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_363_p1 = grp_load_fu_400_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_fu_363_p1 = select_ln79_reg_976;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_363_p1 = ap_phi_reg_pp2_iter1_phi_ln79_1_reg_324;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_363_p1 = ap_phi_reg_pp1_iter1_phi_ln79_reg_269;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_363_p1 = bitcast_ln64_1_fu_593_p1;
    end else begin
        grp_fu_363_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_367_ce = 1'b1;
    end else begin
        grp_fu_367_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_load_fu_376_p1 = res_p_14;
    end else if ((~(trunc_ln79_fu_773_p1 == 4'd12) & ~(trunc_ln79_fu_773_p1 == 4'd10) & ~(trunc_ln79_fu_773_p1 == 4'd8) & ~(trunc_ln79_fu_773_p1 == 4'd6) & ~(trunc_ln79_fu_773_p1 == 4'd4) & ~(trunc_ln79_fu_773_p1 == 4'd2) & ~(trunc_ln79_fu_773_p1 == 4'd0) & (1'b0 == ap_block_pp1_stage0) & (tmp_1_fu_765_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_load_fu_376_p1 = ap_sig_allocacmp_res_p_14_load_1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln65_fu_598_p1 == 4'd14) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_load_fu_376_p1 = ap_sig_allocacmp_res_p_14_load_2;
    end else begin
        grp_load_fu_376_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_load_fu_380_p1 = res_p_13;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln65_fu_598_p1 == 4'd13) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_load_fu_380_p1 = ap_sig_allocacmp_res_p_13_load_1;
    end else begin
        grp_load_fu_380_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_load_fu_384_p1 = res_p_12;
    end else if ((~(trunc_ln79_1_fu_821_p1 == 4'd8) & ~(trunc_ln79_1_fu_821_p1 == 4'd4) & ~(trunc_ln79_1_fu_821_p1 == 4'd0) & (1'b0 == ap_block_pp2_stage0) & (tmp_2_fu_813_p3 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_load_fu_384_p1 = ap_sig_allocacmp_res_p_12_load_2;
    end else if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln79_fu_773_p1 == 4'd12) & (tmp_1_fu_765_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_load_fu_384_p1 = ap_sig_allocacmp_res_p_12_load_1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln65_fu_598_p1 == 4'd12) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_load_fu_384_p1 = ap_sig_allocacmp_res_p_12_load_3;
    end else begin
        grp_load_fu_384_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_load_fu_388_p1 = res_p_11;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln65_fu_598_p1 == 4'd11) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_load_fu_388_p1 = ap_sig_allocacmp_res_p_11_load_1;
    end else begin
        grp_load_fu_388_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_load_fu_392_p1 = res_p_10;
    end else if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln79_fu_773_p1 == 4'd10) & (tmp_1_fu_765_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_load_fu_392_p1 = ap_sig_allocacmp_res_p_10_load_1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln65_fu_598_p1 == 4'd10) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_load_fu_392_p1 = ap_sig_allocacmp_res_p_10_load_2;
    end else begin
        grp_load_fu_392_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_load_fu_396_p1 = res_p_9;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln65_fu_598_p1 == 4'd9) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_load_fu_396_p1 = ap_sig_allocacmp_res_p_9_load_1;
    end else begin
        grp_load_fu_396_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_load_fu_400_p1 = res_p_8;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (tmp_3_fu_837_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_load_fu_400_p1 = ap_sig_allocacmp_res_p_8_load;
    end else if (((1'b0 == ap_block_pp2_stage0) & (trunc_ln79_1_fu_821_p1 == 4'd8) & (tmp_2_fu_813_p3 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_load_fu_400_p1 = ap_sig_allocacmp_res_p_8_load_3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln79_fu_773_p1 == 4'd8) & (tmp_1_fu_765_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_load_fu_400_p1 = ap_sig_allocacmp_res_p_8_load_2;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln65_fu_598_p1 == 4'd8) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_load_fu_400_p1 = ap_sig_allocacmp_res_p_8_load_4;
    end else begin
        grp_load_fu_400_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_load_fu_405_p1 = res_p_7;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln65_fu_598_p1 == 4'd7) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_load_fu_405_p1 = ap_sig_allocacmp_res_p_7_load_1;
    end else begin
        grp_load_fu_405_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_load_fu_409_p1 = res_p_6;
    end else if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln79_fu_773_p1 == 4'd6) & (tmp_1_fu_765_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_load_fu_409_p1 = ap_sig_allocacmp_res_p_6_load_1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln65_fu_598_p1 == 4'd6) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_load_fu_409_p1 = ap_sig_allocacmp_res_p_6_load_2;
    end else begin
        grp_load_fu_409_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_load_fu_413_p1 = res_p_5;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln65_fu_598_p1 == 4'd5) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_load_fu_413_p1 = ap_sig_allocacmp_res_p_5_load_1;
    end else begin
        grp_load_fu_413_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_load_fu_417_p1 = res_p_4;
    end else if (((1'b0 == ap_block_pp2_stage0) & (trunc_ln79_1_fu_821_p1 == 4'd4) & (tmp_2_fu_813_p3 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_load_fu_417_p1 = ap_sig_allocacmp_res_p_4_load_2;
    end else if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln79_fu_773_p1 == 4'd4) & (tmp_1_fu_765_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_load_fu_417_p1 = ap_sig_allocacmp_res_p_4_load_1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln65_fu_598_p1 == 4'd4) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_load_fu_417_p1 = ap_sig_allocacmp_res_p_4_load_3;
    end else begin
        grp_load_fu_417_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_load_fu_421_p1 = res_p_3;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln65_fu_598_p1 == 4'd3) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_load_fu_421_p1 = ap_sig_allocacmp_res_p_3_load_1;
    end else begin
        grp_load_fu_421_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_load_fu_425_p1 = res_p_2;
    end else if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln79_fu_773_p1 == 4'd2) & (tmp_1_fu_765_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_load_fu_425_p1 = ap_sig_allocacmp_res_p_2_load_1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln65_fu_598_p1 == 4'd2) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_load_fu_425_p1 = ap_sig_allocacmp_res_p_2_load_2;
    end else begin
        grp_load_fu_425_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_load_fu_429_p1 = res_p_1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln65_fu_598_p1 == 4'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_load_fu_429_p1 = ap_sig_allocacmp_res_p_1_load_1;
    end else begin
        grp_load_fu_429_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_load_fu_433_p1 = res_p_0;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (tmp_3_fu_837_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_load_fu_433_p1 = ap_sig_allocacmp_res_p_0_load;
    end else if (((1'b0 == ap_block_pp2_stage0) & (trunc_ln79_1_fu_821_p1 == 4'd0) & (tmp_2_fu_813_p3 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_load_fu_433_p1 = ap_sig_allocacmp_res_p_0_load_3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln79_fu_773_p1 == 4'd0) & (tmp_1_fu_765_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_load_fu_433_p1 = ap_sig_allocacmp_res_p_0_load_2;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln65_fu_598_p1 == 4'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_load_fu_433_p1 = ap_sig_allocacmp_res_p_0_load_4;
    end else begin
        grp_load_fu_433_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_load_fu_438_p1 = res_p_15;
    end else if (((1'b0 == ap_block_pp0_stage0) & (trunc_ln65_fu_598_p1 == 4'd15) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_load_fu_438_p1 = ap_sig_allocacmp_res_p_15_load_1;
    end else begin
        grp_load_fu_438_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in1_s_TDATA_blk_n = in1_s_TVALID_int_regslice;
    end else begin
        in1_s_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in1_s_TREADY_int_regslice = 1'b1;
    end else begin
        in1_s_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in2_s_TDATA_blk_n = in2_s_TVALID_int_regslice;
    end else begin
        in2_s_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in2_s_TREADY_int_regslice = 1'b1;
    end else begin
        in2_s_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1) & (ap_enable_reg_pp0_iter9 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1) & (ap_enable_reg_pp0_iter9 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (tmp_1_fu_765_p3 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter6 == 1'b1) & (ap_enable_reg_pp1_iter5 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter6 == 1'b1) & (ap_enable_reg_pp1_iter5 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (tmp_1_fu_765_p3 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (tmp_2_fu_813_p3 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter6 == 1'b1) & (ap_enable_reg_pp2_iter5 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter6 == 1'b1) & (ap_enable_reg_pp2_iter5 == 1'b0)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (tmp_2_fu_813_p3 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (tmp_3_fu_837_p3 == 1'd1)) & ~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter6 == 1'b1) & (ap_enable_reg_pp3_iter5 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter6 == 1'b1) & (ap_enable_reg_pp3_iter5 == 1'b0)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (tmp_3_fu_837_p3 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign absdiff_fu_659_p1 = p_Result_s_fu_652_p3;

assign add_ln69_fu_608_p2 = (ap_phi_mux_p_phi_fu_202_p4 + 32'd1);

assign add_ln78_1_fu_831_p2 = (i_1_reg_313 + 5'd4);

assign add_ln78_2_fu_883_p2 = (i_2_reg_352 + 5'd8);

assign add_ln78_fu_783_p2 = (i_reg_258 + 5'd2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd13];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in2_s_TVALID_int_regslice == 1'b0) | (in1_s_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in2_s_TVALID_int_regslice == 1'b0) | (in1_s_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((in2_s_TVALID_int_regslice == 1'b0) | (in1_s_TVALID_int_regslice == 1'b0)));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((in2_s_TVALID_int_regslice == 1'b0) | (in1_s_TVALID_int_regslice == 1'b0));
end

assign ap_block_state30_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp3_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_213 = ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_245 = (~(trunc_ln79_fu_773_p1 == 4'd12) & ~(trunc_ln79_fu_773_p1 == 4'd10) & ~(trunc_ln79_fu_773_p1 == 4'd8) & ~(trunc_ln79_fu_773_p1 == 4'd6) & ~(trunc_ln79_fu_773_p1 == 4'd4) & ~(trunc_ln79_fu_773_p1 == 4'd2) & ~(trunc_ln79_fu_773_p1 == 4'd0) & (tmp_1_fu_765_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_280 = ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0));
end

always @ (*) begin
    ap_condition_292 = (~(trunc_ln79_1_fu_821_p1 == 4'd8) & ~(trunc_ln79_1_fu_821_p1 == 4'd4) & ~(trunc_ln79_1_fu_821_p1 == 4'd0) & (tmp_2_fu_813_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_778 = (~(or_ln79_fu_777_p2 == 4'd1) & ~(or_ln79_fu_777_p2 == 4'd13) & ~(or_ln79_fu_777_p2 == 4'd11) & ~(or_ln79_fu_777_p2 == 4'd9) & ~(or_ln79_fu_777_p2 == 4'd7) & ~(or_ln79_fu_777_p2 == 4'd5) & ~(or_ln79_fu_777_p2 == 4'd3) & (tmp_1_fu_765_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_804 = (~(or_ln79_1_fu_825_p2 == 4'd2) & ~(or_ln79_1_fu_825_p2 == 4'd10) & ~(or_ln79_1_fu_825_p2 == 4'd6) & (tmp_2_fu_813_p3 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_220 = 'bx;

assign ap_phi_reg_pp1_iter0_phi_ln79_2_reg_291 = 'bx;

assign ap_phi_reg_pp1_iter0_phi_ln79_reg_269 = 'bx;

assign ap_phi_reg_pp2_iter0_phi_ln79_1_reg_324 = 'bx;

assign ap_phi_reg_pp2_iter0_phi_ln79_3_reg_338 = 'bx;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln64_1_fu_593_p1 = in2_s_TDATA_int_regslice;

assign bitcast_ln64_fu_588_p1 = in1_s_TDATA_int_regslice;

assign data_V_fu_628_p1 = grp_fu_363_p2;

assign grp_fu_367_p1 = p_Result_s_fu_652_p3;

assign icmp_ln67_fu_646_p2 = ((tmp_fu_636_p4 == 28'd0) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_602_p2 = ((ap_phi_mux_p_phi_fu_202_p4 == 32'd15) ? 1'b1 : 1'b0);

assign icmp_ln79_1_fu_869_p2 = ((trunc_ln79_2_fu_845_p1 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_855_p2 = ((or_ln79_2_fu_849_p2 == 4'd4) ? 1'b1 : 1'b0);

assign in1_c_last_V_fu_580_p1 = in1_s_TLAST_int_regslice;

assign in1_s_TREADY = regslice_both_in1_s_V_data_V_U_ack_in;

assign in2_s_TREADY = regslice_both_in2_s_V_data_V_U_ack_in;

assign n_1_fu_622_p2 = (ap_phi_mux_n_phi_fu_213_p4 + 32'd1);

assign or_ln79_1_fu_825_p2 = (trunc_ln79_1_fu_821_p1 | 4'd2);

assign or_ln79_2_fu_849_p2 = (trunc_ln79_2_fu_845_p1 | 4'd4);

assign or_ln79_fu_777_p2 = (trunc_ln79_fu_773_p1 | 4'd1);

assign p_1_fu_614_p3 = ((icmp_ln69_fu_602_p2[0:0] == 1'b1) ? 32'd0 : add_ln69_fu_608_p2);

assign p_Result_s_fu_652_p3 = {{1'd0}, {trunc_ln368_reg_917}};

assign select_ln67_fu_664_p3 = ((icmp_ln67_reg_922_pp0_iter9_reg[0:0] == 1'b1) ? absdiff_reg_927_pp0_iter9_reg : add_reg_933);

assign select_ln79_1_fu_875_p3 = ((icmp_ln79_1_fu_869_p2[0:0] == 1'b1) ? grp_load_fu_433_p1 : grp_load_fu_400_p1);

assign select_ln79_fu_861_p3 = ((icmp_ln79_fu_855_p2[0:0] == 1'b1) ? reg_508 : reg_455);

assign tmp_1_fu_765_p3 = i_reg_258[32'd4];

assign tmp_2_fu_813_p3 = i_1_reg_313[32'd4];

assign tmp_3_fu_837_p3 = i_2_reg_352[32'd4];

assign tmp_fu_636_p4 = {{ap_phi_mux_n_phi_fu_213_p4[31:4]}};

assign trunc_ln368_fu_632_p1 = data_V_fu_628_p1[30:0];

assign trunc_ln65_fu_598_p1 = ap_phi_mux_p_phi_fu_202_p4[3:0];

assign trunc_ln79_1_fu_821_p1 = i_1_reg_313[3:0];

assign trunc_ln79_2_fu_845_p1 = i_2_reg_352[3:0];

assign trunc_ln79_fu_773_p1 = i_reg_258[3:0];

always @ (posedge ap_clk) begin
    absdiff_reg_927[31] <= 1'b0;
    absdiff_reg_927_pp0_iter6_reg[31] <= 1'b0;
    absdiff_reg_927_pp0_iter7_reg[31] <= 1'b0;
    absdiff_reg_927_pp0_iter8_reg[31] <= 1'b0;
    absdiff_reg_927_pp0_iter9_reg[31] <= 1'b0;
end

endmodule //sad_reduce_all_f4
